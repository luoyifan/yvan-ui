{"version":3,"file":"yvan-ui.min.js","sources":["../src/YvanEvent.ts","../src/DesignHelper.ts","../src/CtlBase.ts","../src/CtlUtils.ts","../src/YvanUIExtend.ts","../src/YvanDataSourceImp.ts","../src/CtlDefaultValue.ts","../src/Utils.ts","../src/CtlTree.ts","../src/CtlTreeTable.ts","../src/CtlContextMenu.ts","../src/CtlTab.ts","../src/CtlDataview.ts","../src/CtlECharts.ts","../src/CtlButton.ts","../src/form/input/CtlInput.ts","../src/form/input/CtlText.ts","../src/form/other/CtlCheckBox.ts","../src/form/select/CtlCombo.ts","../src/form/input/CtlDatePicker.ts","../src/form/input/CtlDateRangePicker.ts","../src/form/CtlForm.ts","../src/form/select/CtlMultiCombo.ts","../src/form/input/CtlSearch.ts","../src/CtlCarousel.ts","../src/CtlGridLocale.ts","../src/CtlGridPage.ts","../src/CtlGridIdRender.ts","../src/CtlGridDefault.ts","../src/CtlGridCellCheckbox.ts","../src/CtlGridHeadCheckbox.ts","../src/YvanDataSourceGridImp.ts","../src/CtlGridCellButton.ts","../src/CtlGridFilterSet.ts","../src/CtlGridEditor.ts","../src/CtlGridEditorText.ts","../src/CtlGridEditorCombo.ts","../src/CtlGrid.ts","../src/form/other/CtlSwitch.ts","../src/form/input/CtlNumber.ts","../src/form/other/CtlRadio.ts","../src/CtlCodeMirror.ts","../src/YvanRender.ts","../src/YvanUIDb.ts","../src/YvanUIAjax.ts","../src/YvanUIUtils.ts","../src/YvanUIMessage.ts","../src/YvanUIModule.ts","../src/YvanUICode.ts","../src/PropertyDescription.ts","../src/PropertyDescriptionTable.ts","../src/UserComponent.ts"],"sourcesContent":["export type YvEvent<SENDER, T> =\r\n  | EventBindFunction\r\n  | EventBindCommon\r\n  | EventBindSystem\r\n  | EventBindDialog\r\n  | EventFunction<SENDER, T>\r\n\r\nexport interface EventBindFunction {\r\n  type: 'function'\r\n  bind: string\r\n}\r\n\r\nexport interface EventBindCommon {\r\n  type: 'common'\r\n  bind: string\r\n}\r\n\r\nexport interface EventBindSystem {\r\n  type: 'system'\r\n  bind: string\r\n}\r\n\r\nexport interface EventBindDialog {\r\n  type: 'dialog'\r\n  dialogId: string\r\n}\r\n\r\nexport type EventFunction<SENDER, ARGS> = (sender: SENDER, args: ARGS) => void\r\n\r\nexport function YvEventDispatch<T, ARGS>(\r\n  event: YvEvent<T, any> | undefined,\r\n  sender: T,\r\n  args: ARGS,\r\n  scope?: any\r\n) {\r\n  if (!event) {\r\n    // 事件没定义\r\n    return\r\n  }\r\n\r\n  const ctl: any = sender\r\n  const vue = _.isUndefined(scope) ? ctl._webix.$scope : scope\r\n\r\n  if (typeof event === 'function') {\r\n    // 事件本身就是方法\r\n    return event.call(vue, sender, args)\r\n  }\r\n\r\n  if (event.type === 'function') {\r\n    const targetFunc = _.get(vue, event.bind)\r\n    if (typeof targetFunc !== 'function') {\r\n      console.error(`模块没有 ${event.bind} 函数`)\r\n      return\r\n    }\r\n\r\n    return targetFunc.apply(vue, [sender, args])\r\n  }\r\n}\r\n","let designMode = false;\r\n\r\nexport function initDesign(): void {\r\n    designMode = true;\r\n}\r\n\r\nexport function isDesignMode(): boolean {\r\n    return designMode;\r\n}\r\n","import { YvEvent, YvEventDispatch } from './YvanEvent'\r\nimport { BaseModule } from './YvanUIModule'\r\nimport { isDesignMode } from './DesignHelper'\r\nimport webix from 'webix'\r\n\r\nexport abstract class CtlBase<T> {\r\n  /**\r\n   * 渲染时触发\r\n   */\r\n  public onRender?: YvEvent<CtlBase<T>, void>\r\n\r\n  /**\r\n   * 实体类属性\r\n   */\r\n  public entityName?: string\r\n\r\n  /**\r\n   * 控件名\r\n   */\r\n  public ctlName?: string\r\n\r\n  /**\r\n   * 最初始时候的 json\r\n   */\r\n  public vjson: any\r\n\r\n  /**\r\n   * 定焦时间\r\n   */\r\n  public ff: number = 0\r\n\r\n  /**\r\n   * webix API\r\n   * webix.ui 渲染完毕之后，webix对象就存放在这里\r\n   */\r\n  protected _webix: any\r\n\r\n  /**\r\n   * 控件所在的用户模块\r\n   */\r\n  protected _module!: BaseModule<any, any, any>\r\n\r\n  /**\r\n   * 为 entityName 进行 watch 的解绑函数\r\n   */\r\n  private _entityWatch?: Function\r\n\r\n  /**\r\n   * 在 webix 还没有初始化 (webix.ui) 的时候\r\n   * 设置的属性就临时存放在这里. 最终会作为 webix 的属性来渲染\r\n   */\r\n  protected _webixConfig: any\r\n\r\n  constructor(vjson: any) {\r\n    this.vjson = _.cloneDeep(vjson)\r\n\r\n    if (vjson.hasOwnProperty('debugger')) {\r\n      debugger\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 强制组件获得焦点\r\n   */\r\n  public focus(): void {\r\n    if (!this._webix) {\r\n      return\r\n    }\r\n    this._webix.focus()\r\n  }\r\n\r\n  /**\r\n   * 设置正在读取中的状态\r\n   */\r\n  set loading(nv: boolean) {\r\n    if (nv) {\r\n      webix.extend(this._webix, webix.OverlayBox)\r\n      //this._webix.showOverlay(\"<div style='...'>There is no data</div>\");\r\n      this._webix.showOverlay('Loading...')\r\n    } else {\r\n      this._webix.hideOverlay()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取模块\r\n   */\r\n  public getModule() {\r\n    return this._module\r\n  }\r\n\r\n  /**\r\n   * 组件被渲染后触发\r\n   */\r\n  protected attachHandle(webixHandler: any) {\r\n    this._webix = webixHandler\r\n    this._module = this._webix.$scope\r\n\r\n    YvEventDispatch(this.onRender, this, undefined)\r\n    this.refreshState()\r\n  }\r\n\r\n  /**\r\n   * 组件被移除后触发\r\n   */\r\n  protected removeHandle() {\r\n    const d = this._webix\r\n    if (!d) {\r\n      return\r\n    }\r\n\r\n    this._webix = undefined\r\n    if (d) {\r\n      d.destructor()\r\n    }\r\n    this.refreshState()\r\n  }\r\n\r\n  /**\r\n   * 控件 value 值发生变化后，设置 entityName 对应的值\r\n   */\r\n  protected changeToEntity(value: any) {\r\n    if (this.entityName) {\r\n      // 带 entityName 实体绑定\r\n      _.set(this._module, this.entityName, value)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * vue 或 webix 组件被设置后触发\r\n   */\r\n  protected refreshState() {\r\n    if (isDesignMode()) {\r\n      return\r\n    }\r\n    if (this._webix) {\r\n      /* ================================ 安装 ================================ */\r\n      if (this.ctlName) {\r\n        // 带 ctlName 控件属性\r\n        this._module.refs[this.ctlName] = this\r\n      }\r\n\r\n      if (this.entityName) {\r\n        // 带 entityName 实体绑定\r\n        this._entityWatch = this._module.$watch(\r\n          this.entityName,\r\n          (nv: any, ov: any) => {\r\n            _.set(this, 'value', nv)\r\n          },\r\n          { immediate: true }\r\n        )\r\n      }\r\n\r\n      return\r\n    }\r\n\r\n    /* ================================ 卸载 ================================ */\r\n    if (this.ctlName) {\r\n      // 删除控件\r\n      if (this._module) {\r\n        delete this._module.refs[this.ctlName]\r\n      }\r\n    }\r\n\r\n    if (this._entityWatch) {\r\n      // 解除绑定\r\n      this._entityWatch()\r\n      delete this._entityWatch\r\n    }\r\n\r\n    delete this._module\r\n  }\r\n\r\n  /**\r\n   * 设置隐藏\r\n   */\r\n  set hidden(nv: boolean) {\r\n    this._webixConfig.hidden = nv\r\n    if (!this._webix) {\r\n      return\r\n    }\r\n\r\n    if (nv) {\r\n      this._webix.hide()\r\n    } else {\r\n      this._webix.show()\r\n    }\r\n  }\r\n\r\n  get hidden(): boolean {\r\n    return this._webixConfig.hidden\r\n  }\r\n}\r\n","/**\r\n * 内部函数\r\n * 将 vjson 中，属于 yvanui 的属性从 vjson 中删掉。\r\n * 并返回 yvanProp 属性\r\n */\r\nexport function parseYvanPropChangeVJson(vjson: any, names: string[]): any {\r\n\r\n    const yvanProp: any = {};\r\n\r\n    _.forEach([\r\n        ...names,\r\n        'debugger',\r\n        'ctlName',\r\n        'entityName',\r\n        'onRender'\r\n\r\n    ], name => {\r\n        if (_.has(vjson, name)) {\r\n            yvanProp[name] = vjson[name];\r\n            delete vjson[name]\r\n        }\r\n    });\r\n\r\n    return yvanProp\r\n}\r\n","import {Ajax} from './YvanUIAjax';\r\nimport {Db} from './YvanUIDb';\r\n\r\nexport type FormatterFunction = (id: string) => string;\r\n\r\nexport type ValidFunction = (value: string) => string | ValidFunction | undefined;\r\n\r\nexport type ComplexValidFunction = (valid: string, value: string) => string | undefined;\r\n\r\nexport interface DictItem {\r\n    id: string;\r\n    text: string;\r\n\r\n    [id: string]: string;\r\n}\r\n\r\nexport type Dict = DictItem[];\r\n\r\n/**\r\n * YvanUI 全局扩展配置\r\n */\r\nexport interface ExtendOption {\r\n    /**\r\n     * 扩展自定义的 ajax 方法\r\n     */\r\n    ajax: Ajax.Function;\r\n\r\n    /**\r\n     * serverJS 请求前缀\r\n     */\r\n    serverJsPrefix: string;\r\n\r\n    /**\r\n     * 扩展自定义的数据库\r\n     */\r\n    dbs: { [db: string]: Db.Client };\r\n\r\n    /**\r\n     * 扩展全局 formatter 函数\r\n     */\r\n    formatter: { [db: string]: FormatterFunction };\r\n\r\n    /**\r\n     * 扩展全局 dict 字典\r\n     */\r\n    dict: { [dictName: string]: Dict };\r\n\r\n    /**\r\n     * 扩展全局 校验方法\r\n     */\r\n    validType: { [validName: string]: ValidFunction };\r\n\r\n    complexValid: { [validName: string]: ComplexValidFunction };\r\n}\r\n\r\nexport const version = \"3.0.2\"\r\n\r\n/**\r\n * 全局 ajax 方法\r\n */\r\nexport let ajax: Ajax.Function;\r\n\r\n/**\r\n * 全局 数据库连接\r\n */\r\nexport const dbs: { [db: string]: Db.Client } = {};\r\n\r\n/**\r\n * 全局 formatter 函数\r\n */\r\nexport const formatter: { [db: string]: FormatterFunction } = {};\r\n\r\n/**\r\n * 全局 dict 字典\r\n */\r\nexport const dict: { [dictName: string]: Dict } = {};\r\n\r\n/**\r\n * 全局 校验方法\r\n */\r\nexport const validType: { [validName: string]: ValidFunction } = {};\r\n\r\nexport const complexValid: { [validName: string]: ComplexValidFunction } = {};\r\n\r\n\r\n/**\r\n * YvanUI 全局扩展配置\r\n * @param option 配置信息\r\n */\r\nexport function extend(option: Partial<ExtendOption>) {\r\n    if (option.ajax) {\r\n        ajax = option.ajax\r\n    }\r\n\r\n    if (option.serverJsPrefix) {\r\n        _.extend(window, {_YvanUI_serverJSPrefix: option.serverJsPrefix});\r\n    }\r\n\r\n    if (option.dbs) {\r\n        _.extend(dbs, option.dbs);\r\n    }\r\n\r\n    if (option.dict) {\r\n        _.extend(dict, option.dict);\r\n    }\r\n\r\n    if (option.validType) {\r\n        _.extend(validType, option.validType);\r\n    }\r\n\r\n    if (option.formatter) {\r\n        _.extend(formatter, option.formatter);\r\n    }\r\n\r\n    if (option.complexValid) {\r\n        _.extend(complexValid, option.complexValid);\r\n    }\r\n}\r\n","import {\r\n  DataSource,\r\n  DataSourceStaticFunction,\r\n  DataSourceDb,\r\n  DataSourceProcessFunction\r\n} from './YvanDataSource'\r\nimport { YvEvent, YvEventDispatch } from './YvanEvent'\r\nimport * as YvanUI from './YvanUIExtend'\r\nimport { isDesignMode } from './DesignHelper'\r\n\r\nexport class YvDataSource<T> {\r\n  private readonly module: any\r\n  private option: DataSource<T>\r\n  private dataSourceProcess?: DataSourceProcessFunction\r\n  private ctl: any\r\n  private watches: Function[] = []\r\n  public reload: undefined | (() => void)\r\n\r\n  /**\r\n   * 自定义函数式取值\r\n   */\r\n  setCustomFunctionMode(option: DataSourceStaticFunction<T>) {\r\n    const that = this\r\n    this.reload = () => {\r\n      that.ctl.loading = true\r\n      option.call(that.module, that.ctl, {\r\n        successCallback(data: any[]) {\r\n          if (that.dataSourceProcess) {\r\n            //自定义的数据处理过程\r\n            that.ctl.dataReal = that.dataSourceProcess(data)\r\n          } else {\r\n            that.ctl.dataReal = data\r\n          }\r\n\r\n          that.ctl.loading = false\r\n          YvEventDispatch(that.ctl.onDataComplete, that.ctl, undefined)\r\n        },\r\n        failCallback() {\r\n          that.ctl.dataReal = []\r\n          that.ctl.loading = false\r\n          YvEventDispatch(that.ctl.onDataComplete, that.ctl, undefined)\r\n        }\r\n      })\r\n    }\r\n    this.reload()\r\n  }\r\n\r\n  /**\r\n   * SQL取值\r\n   */\r\n  setSqlMode(option: DataSourceDb) {\r\n    const that = this\r\n    this.reload = () => {\r\n      //异步请求数据内容\r\n      that.ctl.loading = true\r\n\r\n      YvanUI.dbs[option.db]\r\n        .query({\r\n          params: option.params,\r\n          needCount: false,\r\n          sqlId: option.sqlId\r\n        })\r\n        .then(res => {\r\n          const { data: resultData, params: resParams } = res\r\n\r\n          if (this.dataSourceProcess) {\r\n            //自定义的数据处理过程\r\n            that.ctl.dataReal = this.dataSourceProcess(resultData)\r\n          } else {\r\n            that.ctl.dataReal = resultData\r\n          }\r\n          YvEventDispatch(that.ctl.onDataComplete, that.ctl, undefined)\r\n        })\r\n        .catch(r => {\r\n          that.ctl.dataReal = []\r\n        })\r\n        .finally(() => {\r\n          that.ctl.loading = false\r\n        })\r\n    }\r\n    this.reload()\r\n  }\r\n\r\n  constructor(\r\n    ctl: any,\r\n    option: DataSource<T>,\r\n    dataSourceProcess?: DataSourceProcessFunction\r\n  ) {\r\n    if (isDesignMode()) {\r\n      return\r\n    }\r\n    this.ctl = ctl\r\n    this.option = option\r\n    this.dataSourceProcess = dataSourceProcess\r\n    this.module = ctl._webix.$scope\r\n  }\r\n\r\n  public init() {\r\n    if (!this.option) {\r\n      //没有设值，退出\r\n      this.reload = undefined\r\n      return\r\n    }\r\n\r\n    if (typeof this.option === 'function') {\r\n      //以 function 方式运行\r\n      this.setCustomFunctionMode(this.option)\r\n      return\r\n    }\r\n\r\n    if (_.isArray(this.option)) {\r\n      //结果就是数组\r\n      this.reload = () => {\r\n        this.ctl.dataReal = this.option\r\n        this.ctl.$yvDispatch(this.ctl.onDataComplete)\r\n      }\r\n      this.reload()\r\n      return\r\n    }\r\n\r\n    // 使 watch 生效\r\n    _.each(this.option.watch, watchExp => {\r\n      const unwatch = this.module.$watch(watchExp, () => {\r\n        if (this.reload) {\r\n          this.reload()\r\n        }\r\n      })\r\n      this.watches.push(unwatch)\r\n    })\r\n\r\n    if (this.option.type === 'function') {\r\n      // 取 bind 函数\r\n      if (typeof this.option.bind === 'function') {\r\n        this.setCustomFunctionMode(this.option.bind)\r\n      } else {\r\n        const bindFunction: DataSourceStaticFunction<T> = _.get(\r\n          this.module,\r\n          this.option.bind\r\n        ) as DataSourceStaticFunction<T>\r\n        if (!bindFunction) {\r\n          console.error(`没有找到名称为 ${this.option.bind} 的方法`)\r\n          return\r\n        }\r\n        this.setCustomFunctionMode(bindFunction)\r\n      }\r\n    } else if (this.option.type === 'SQL') {\r\n      this.setSqlMode(this.option)\r\n    } else {\r\n      console.error(`其他方式没有实现`)\r\n    }\r\n  }\r\n\r\n  destory() {\r\n    // 解除全部 watch\r\n    _.each(this.watches, unwatch => {\r\n      unwatch()\r\n    })\r\n    this.reload = undefined\r\n    this.ctl.dataReal = []\r\n  }\r\n}\r\n","export const CtlButtonDefault: any = {\r\n    text: '',\r\n    icon: '',\r\n    // width: 120,\r\n    type: 'text',\r\n    autowidth: true,\r\n    // cssType: 'primary'\r\n};\r\n\r\nexport const CtlDataviewDefault: any = {};\r\n\r\nexport const CtlTreeDefault: any = {\r\n    showCheckbox: false,\r\n    showLeftIcon: true,\r\n    showIcon: true,\r\n};\r\n\r\nexport const CtlCodeMirrorDefault = {\r\n    mode: 'sql',\r\n    indentWithTabs: true,\r\n    smartIndent: true,\r\n    lineNumbers: true,\r\n    matchBrackets: true,\r\n    autofocus: true,\r\n    extraKeys: {\"Ctrl-Space\": \"autocomplete\"},\r\n    hintOptions: {\r\n        tables: {\r\n            users: [\"name\", \"score\", \"birthDate\"],\r\n            countries: [\"name\", \"population\", \"size\"]\r\n        }\r\n    }\r\n};\r\n\r\nconst CtlInputDefault: any = {\r\n    labelWidth: 110,\r\n    labelAlign: 'right',\r\n    // width: 250,\r\n    prompt: '请输入'\r\n};\r\n\r\nexport const CtlTextDefault: any = {\r\n    ...CtlInputDefault\r\n};\r\n\r\nexport const CtlNumberDefault: any = {\r\n    ...CtlInputDefault,\r\n    precision: 0,\r\n};\r\n\r\nexport const CtlDateDefault: any = {\r\n    ...CtlInputDefault,\r\n    prompt: '请选择'\r\n};\r\n\r\nexport const CtlDateTimeDefault: any = {\r\n    ...CtlInputDefault,\r\n    //width: 300,\r\n    prompt: '请选择'\r\n};\r\n\r\nexport const CtlDateRangeDefault: any = {\r\n    ...CtlInputDefault,\r\n    //width: 430,\r\n    separator: ' 至 ',\r\n    prompt: '请选择日期范围'\r\n};\r\n\r\nexport const CtlDateTimeRangeDefault: any = {\r\n    ...CtlInputDefault,\r\n    //width: 430,\r\n    separator: ' 至 ',\r\n    prompt: '请选择时间范围'\r\n};\r\n\r\nexport const CtlComboDefault: any = {\r\n    ...CtlInputDefault,\r\n    prompt: '请选择'\r\n};\r\n\r\nexport const CtlMultiComboDefault: any = {\r\n    ...CtlInputDefault,\r\n    separator: ',',\r\n    prompt: '请选择'\r\n};\r\n\r\nexport const CtlSearchDefault: any = {\r\n    ...CtlInputDefault,\r\n    prompt: '回车键查询'\r\n};\r\n\r\n\r\nexport const CtlCheckboxDefault: any = {\r\n    // labelWidth: 110,\r\n    labelAlign: 'right',\r\n    checkValue: 'T',\r\n    uncheckValue: 'F'\r\n};\r\n\r\nexport const CtlSwitchDefault: any = {\r\n    // labelWidth: 110,\r\n    labelAlign: 'right',\r\n    checkValue: 'T',\r\n    uncheckValue: 'F'\r\n};\r\n\r\nexport const CtlRadioDefault: any = {\r\n    labelWidth: 110,\r\n    labelAlign: 'right',\r\n};\r\n","export function getFirstPinyin(msg: string): string {\r\n    return _.get(window, 'getFirstPinyin')(msg);\r\n}\r\n","import { CtlBase } from './CtlBase'\r\nimport { parseYvanPropChangeVJson } from './CtlUtils'\r\nimport { YvDataSource } from './YvanDataSourceImp'\r\nimport { YvEvent, YvEventDispatch } from './YvanEvent'\r\nimport { DataSource } from './YvanDataSource'\r\nimport { CtlTreeDefault } from './CtlDefaultValue'\r\nimport { getFirstPinyin } from './Utils'\r\n\r\nexport class CtlTree extends CtlBase<CtlTree> {\r\n  static create(vjson: any): CtlTree {\r\n    const that = new CtlTree(vjson)\r\n\r\n    _.defaultsDeep(vjson, CtlTreeDefault)\r\n\r\n    const yvanProp = parseYvanPropChangeVJson(vjson, [\r\n      // 'data',\r\n      'dataSource',\r\n      'onNodeClick',\r\n      'onNodeDblClick',\r\n      'onDataComplete',\r\n      'showCheckbox',\r\n      'showLeftIcon',\r\n      'showIcon'\r\n    ])\r\n\r\n    // 将 vjson 存至 _webixConfig\r\n    that._webixConfig = vjson\r\n\r\n    // 将 yvanProp 合并至当前 Ctl 对象, 期间会操作 _webixConfig\r\n    _.assign(that, yvanProp)\r\n\r\n    // 将 事件与 _webixConfig 一起存至 vjson 交给 webix 框架做渲染\r\n    _.merge(vjson, that._webixConfig, {\r\n      select: true,\r\n      filterMode: {\r\n        showSubItems: false\r\n      },\r\n      on: {\r\n        onInited(this: any) {\r\n          that.attachHandle(this)\r\n        },\r\n        onAfterDelete() {\r\n          that.removeHandle()\r\n        },\r\n        onItemClick(this: any, id: any) {\r\n          const item = this.getItem(id)\r\n          YvEventDispatch(that.onNodeClick, that, item)\r\n        },\r\n        onItemDblClick(this: any, id: any) {\r\n          const item = this.getItem(id)\r\n          YvEventDispatch(that.onNodeDblClick, that, item)\r\n        }\r\n      },\r\n      template: function (obj: any, common: any) {\r\n        let t = ''\r\n        if (that.showCheckbox) {\r\n          t += common.checkbox(obj, common)\r\n        }\r\n        if (that.showIcon) {\r\n          t += common.folder(obj, common)\r\n        }\r\n        if (that.showLeftIcon) {\r\n          t += common.icon(obj, common)\r\n        }\r\n        t += obj.value\r\n        return t\r\n      },\r\n      // 树的左侧图标\r\n      type: {\r\n        folder: function (obj: any) {\r\n          if (obj.icon) {\r\n            return (\r\n              \"<span style='padding-left: 5px; padding-right: 5px; color: #5fa2dd; font-size: 16px' class='\" +\r\n              obj.icon +\r\n              \"'></span>\"\r\n            )\r\n          }\r\n          return ''\r\n        }\r\n      }\r\n    })\r\n\r\n    if (vjson.threeState !== false && that.showCheckbox) {\r\n      vjson.threeState = true;\r\n    } else {\r\n      vjson.threeState = false;\r\n    }\r\n\r\n    return that\r\n  }\r\n\r\n  /**\r\n   * 拼音方式过滤查找树\r\n   */\r\n  filter(nv: string) {\r\n    if (!nv) {\r\n      this._webix.filter('')\r\n      return\r\n    }\r\n\r\n    this._webix.filter((node: any) => {\r\n      const value = node.value\r\n      const nodePy = getFirstPinyin(value).toLowerCase()\r\n      return nodePy.indexOf(nv.toLowerCase()) >= 0 || value.indexOf(nv) >= 0\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 树上的数据\r\n   */\r\n  data?: any[]\r\n\r\n  /**\r\n   * 树节点被点击后触发\r\n   */\r\n  onNodeClick?: YvEvent<CtlTree, any>\r\n\r\n  /**\r\n   * 树节点被双击后触发\r\n   */\r\n  onNodeDblClick?: YvEvent<CtlTree, any>\r\n\r\n  /**\r\n   * 数据绑定完成后触发\r\n   */\r\n  onDataComplete?: YvEvent<CtlTree, any>\r\n\r\n  /**\r\n   * 显示勾选框\r\n   */\r\n  showCheckbox: boolean = false\r\n\r\n  /**\r\n   * 显示左侧展开图标\r\n   */\r\n  showLeftIcon: boolean = true\r\n\r\n  /**\r\n   * 显示图标\r\n   */\r\n  showIcon: boolean = true\r\n\r\n  /**\r\n   * 设置值\r\n   */\r\n  set value(nv: any) {\r\n    if (!this._webix) {\r\n      this._webixConfig.value = nv\r\n    } else {\r\n      this._webix.setValue(nv)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取值\r\n   */\r\n  get value(): any {\r\n    if (!this._webix) {\r\n      return this._webixConfig.value\r\n    }\r\n    return this._webix.getValue()\r\n  }\r\n\r\n  /**\r\n   * 设置数据\r\n   */\r\n  set dataReal(nv: any[]) {\r\n    // dataSource call back\r\n    this._webix.clearAll()\r\n    this._webix.parse(nv)\r\n  }\r\n\r\n  /**\r\n   * 获取数据源设置\r\n   */\r\n  get dataSource(): DataSource<CtlTree> {\r\n    return this._dataSource\r\n  }\r\n\r\n  /**\r\n   * 设置数据源\r\n   */\r\n  set dataSource(nv: DataSource<CtlTree>) {\r\n    this._dataSource = nv\r\n    this._rebindDataSource()\r\n  }\r\n\r\n  /**\r\n   * 重新请求数据\r\n   */\r\n  public reload(): void {\r\n    if (this.dataSourceBind && this.dataSourceBind.reload) {\r\n      this.dataSourceBind.reload()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取第一个节点\r\n   */\r\n  public getFirstId(): any {\r\n    return this._webix.getFirstId()\r\n  }\r\n\r\n  /**\r\n   * 展开某个节点\r\n   */\r\n  public open(id: any) {\r\n    this._webix.open(id)\r\n  }\r\n\r\n  /**\r\n   * 清空所有数据\r\n   */\r\n  public clear() {\r\n    this._webix.clearAll()\r\n  }\r\n\r\n  /**\r\n   * 取消选择所有节点\r\n   */\r\n  public uncheckAll() {\r\n    this._webix.uncheckAll()\r\n  }\r\n\r\n  /**\r\n   * 根据id获取一行数据\r\n   */\r\n  public getItem(id: any) {\r\n    return this._webix.getItem(id)\r\n  }\r\n\r\n  /**\r\n   * 获取某 id 下树节点所有的子节点\r\n   */\r\n  public getChildItems(id: any): any[] {\r\n    const ret = []\r\n    let c = this._webix.getFirstChildId(id)\r\n    while (c) {\r\n      ret.push(this._webix.getItem(c))\r\n      c = this._webix.getNextSiblingId(c)\r\n    }\r\n    return ret\r\n  }\r\n\r\n  /**\r\n   * 获取某 id 下树节点所有的子节点的编号\r\n   */\r\n  public getChildIds(id: any): any[] {\r\n    const ret = []\r\n    let c = this._webix.getFirstChildId(id)\r\n    while (c) {\r\n      ret.push(c)\r\n      c = this._webix.getNextSiblingId(c)\r\n    }\r\n    return ret\r\n  }\r\n\r\n  /**\r\n   * 获取被选中的一行编号\r\n   */\r\n  public getSelectedId(): any {\r\n    return this._webix.getSelectedId()\r\n  }\r\n\r\n  /**\r\n   * 获取被选中的一行\r\n   */\r\n  public getSelectedItem(): any {\r\n    return this._webix.getSelectedItem()\r\n  }\r\n\r\n  /**\r\n   * 勾选选中一行\r\n   */\r\n  public checkItem(id: any) {\r\n    this._webix.checkItem(id)\r\n  }\r\n\r\n  /**\r\n   * 选中一行\r\n   * @param id\r\n   */\r\n  public select(id: any) {\r\n    // this._webix.showItem(id);\r\n    let pid = id\r\n    while (pid) {\r\n      this._webix.open(pid)\r\n      pid = this._webix.getParentId(pid)\r\n    }\r\n\r\n    this._webix.select(id)\r\n  }\r\n\r\n  /**\r\n   * 选中多行\r\n   */\r\n  public checkItems(ids: any[]) {\r\n    for (let id of ids) {\r\n      this._webix.checkItem(id)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 取消选中一行\r\n   */\r\n  public uncheckItem(id: any) {\r\n    this._webix.uncheckItem(id)\r\n  }\r\n\r\n  /**\r\n   * 获取选中的ID 数组\r\n   */\r\n  public getCheckedIds() {\r\n    return this._webix.getChecked()\r\n  }\r\n\r\n  /**\r\n   * 获取选中的行数组\r\n   */\r\n  public getCheckedItems() {\r\n    return _.map(this._webix.getChecked(), v => this._webix.getItem(v))\r\n  }\r\n\r\n  /**\r\n   * 查看是否被选中\r\n   */\r\n  public isChecked(id: any) {\r\n    return this._webix.isChecked(id)\r\n  }\r\n\r\n  /**\r\n   * 展开全部节点\r\n   */\r\n  public expandAll() {\r\n    this._webix.openAll()\r\n  }\r\n\r\n  /**\r\n   * 收起所有节点\r\n   */\r\n  public collapseAll() {\r\n    this._webix.closeAll()\r\n  }\r\n\r\n  /* =============================================== 以下部分为私有函数 =============================================== */\r\n\r\n  //数据源设置\r\n  private _dataSource: DataSource<CtlTree>\r\n\r\n  //数据源管理器\r\n  private dataSourceBind?: YvDataSource<CtlTree>\r\n\r\n  //重新绑定数据源\r\n  private _rebindDataSource() {\r\n    if (this.dataSourceBind) {\r\n      this.dataSourceBind.destory()\r\n      this.dataSourceBind = undefined\r\n    }\r\n\r\n    if (this._webix && this.getModule()) {\r\n      this.dataSourceBind = new YvDataSource(\r\n        this,\r\n        this.dataSource,\r\n        this._dataSourceProcess.bind(this)\r\n      )\r\n      this.dataSourceBind.init()\r\n    }\r\n  }\r\n\r\n  private _dataSourceProcess(data: any[]) {\r\n    if (\r\n      !this.dataSource ||\r\n      _.isArray(this.dataSource) ||\r\n      _.isFunction(this.dataSource)\r\n    ) {\r\n      return data\r\n    }\r\n\r\n    if (this.dataSource.type !== 'SQL' && this.dataSource.type !== 'function') {\r\n      return data\r\n    }\r\n\r\n    if (\r\n      !this.dataSource.parentField ||\r\n      !this.dataSource.displayField ||\r\n      !this.dataSource.valueField\r\n    ) {\r\n      return data\r\n    }\r\n\r\n    const idField = this.dataSource.valueField\r\n    const textField = this.dataSource.displayField\r\n    const parentField = this.dataSource.parentField\r\n\r\n    data = _.cloneDeep(data)\r\n\r\n    // 第一遍扫描, 建立映射关系\r\n    const nodeMap: any = {}\r\n    const rootNode = []\r\n    for (let i = 0; i < data.length; i++) {\r\n      const row = data[i]\r\n      nodeMap[row[idField]] = {\r\n        value: row[textField],\r\n        id: row[idField],\r\n        row: row\r\n      }\r\n    }\r\n\r\n    // 第二遍扫描，建立父子关系\r\n    for (let i = 0; i < data.length; i++) {\r\n      const row = data[i]\r\n      const parent = row[parentField]\r\n      const id = row[idField]\r\n\r\n      if (!parent || parent === '0') {\r\n        // 没有父亲，作为根节点\r\n        rootNode.push(nodeMap[id])\r\n      } else if (nodeMap.hasOwnProperty(parent)) {\r\n        //找到父亲\r\n        const parentNode = nodeMap[parent]\r\n        if (parentNode.hasOwnProperty('data')) {\r\n          parentNode.data.push(nodeMap[id])\r\n        } else {\r\n          parentNode.data = [nodeMap[id]]\r\n        }\r\n      } else {\r\n        // 没有找到父亲，作为根节点\r\n        rootNode.push(nodeMap[id])\r\n      }\r\n    }\r\n\r\n    return rootNode\r\n  }\r\n\r\n  //刷新状态时，自动重绑数据源\r\n  protected refreshState() {\r\n    super.refreshState()\r\n    this._rebindDataSource()\r\n  }\r\n}\r\n","import { CtlBase } from './CtlBase'\r\nimport { parseYvanPropChangeVJson } from './CtlUtils'\r\nimport { YvDataSource } from './YvanDataSourceImp'\r\nimport { YvEvent, YvEventDispatch } from './YvanEvent'\r\nimport { DataSource } from './YvanDataSource'\r\n\r\nexport class CtlTreeTable extends CtlBase<CtlTreeTable> {\r\n  static create(vjson: any): CtlTreeTable {\r\n    const that = new CtlTreeTable(vjson)\r\n\r\n    if (vjson.hasOwnProperty('debugger')) {\r\n      debugger\r\n    }\r\n\r\n    const yvanProp = parseYvanPropChangeVJson(vjson, [\r\n      'data',\r\n      'dataSource',\r\n      'onNodeClick',\r\n      'onNodeDblClick',\r\n      'showCheckbox',\r\n      'showLeftIcon',\r\n      'showIcon'\r\n    ])\r\n\r\n    // 将 vjson 存至 _webixConfig\r\n    that._webixConfig = vjson\r\n\r\n    // 将 yvanProp 合并至当前 Ctl 对象, 期间会操作 _webixConfig\r\n    _.assign(that, yvanProp)\r\n\r\n    // 将 事件与 _webixConfig 一起存至 vjson 交给 webix 框架做渲染\r\n    _.merge(vjson, that._webixConfig, {\r\n      on: {\r\n        onInited(this: any) {\r\n          that.attachHandle(this)\r\n        },\r\n        onAfterDelete() {\r\n          that.removeHandle()\r\n        },\r\n        onItemClick(this: any, id: any) {\r\n          const item = this.getItem(id)\r\n          YvEventDispatch(that.onNodeClick, that, item)\r\n        },\r\n        onItemDblClick(this: any, id: any) {\r\n          const item = this.getItem(id)\r\n          YvEventDispatch(that.onNodeDblClick, that, item)\r\n        }\r\n      },\r\n      template: function(obj: any, common: any) {\r\n        let t = ''\r\n        if (that.showCheckbox) {\r\n          t += common.checkbox(obj, common)\r\n        }\r\n        if (that.showIcon) {\r\n          t += common.folder(obj, common)\r\n        }\r\n        if (that.showLeftIcon) {\r\n          t += common.icon(obj, common)\r\n        }\r\n        t += obj.value\r\n        return t\r\n      },\r\n      threeState: that.showCheckbox,\r\n      // 树的左侧图标\r\n      type: {\r\n        folder: function(obj: any) {\r\n          if (obj.icon) {\r\n            return (\r\n              \"<span style='padding-left: 5px; padding-right: 5px; color: #063978; font-size: 16px' class='\" +\r\n              obj.icon +\r\n              \"'></span>\"\r\n            )\r\n          }\r\n          return ''\r\n        }\r\n      }\r\n    })\r\n\r\n    return that\r\n  }\r\n\r\n  /**\r\n   * 树上的数据\r\n   */\r\n  data?: any[]\r\n\r\n  /**\r\n   * 树节点被点击后触发\r\n   */\r\n  onNodeClick?: YvEvent<CtlTreeTable, any>\r\n\r\n  /**\r\n   * 树节点被双击后触发\r\n   */\r\n  onNodeDblClick?: YvEvent<CtlTreeTable, any>\r\n\r\n  /**\r\n   * 显示勾选框\r\n   */\r\n  showCheckbox: boolean = false\r\n\r\n  /**\r\n   * 显示左侧展开图标\r\n   */\r\n  showLeftIcon: boolean = true\r\n\r\n  /**\r\n   * 显示图标\r\n   */\r\n  showIcon: boolean = true\r\n\r\n  /**\r\n   * 设置值\r\n   */\r\n  set value(nv: any) {\r\n    if (!this._webix) {\r\n      this._webixConfig.value = nv\r\n    } else {\r\n      this._webix.setValue(nv)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取值\r\n   */\r\n  get value(): any {\r\n    if (!this._webix) {\r\n      return this._webixConfig.value\r\n    }\r\n    return this._webix.getValue()\r\n  }\r\n\r\n  /**\r\n   * 设置数据\r\n   */\r\n  set dataReal(nv: any[]) {\r\n    this._webix.clearAll()\r\n    this._webix.parse(nv)\r\n  }\r\n\r\n  /**\r\n   * 获取数据源设置\r\n   */\r\n  get dataSource(): DataSource<CtlTreeTable> {\r\n    return this._dataSource\r\n  }\r\n\r\n  /**\r\n   * 设置数据源\r\n   */\r\n  set dataSource(nv: DataSource<CtlTreeTable>) {\r\n    this._dataSource = nv\r\n    this._rebindDataSource()\r\n  }\r\n\r\n  /**\r\n   * 重新请求数据\r\n   */\r\n  public reload(): void {\r\n    if (this.dataSourceBind && this.dataSourceBind.reload) {\r\n      this.dataSourceBind.reload()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 清空所有数据\r\n   */\r\n  public clear() {\r\n    this._webix.clearAll()\r\n  }\r\n\r\n  /**\r\n   * 取消选择所有节点\r\n   */\r\n  public uncheckAll() {\r\n    this._webix.uncheckAll()\r\n  }\r\n\r\n  /**\r\n   * 根据id获取一行数据\r\n   */\r\n  public getItem(id: any) {\r\n    return this._webix.getItem(id)\r\n  }\r\n\r\n  /**\r\n   * 勾选选中一行\r\n   */\r\n  public checkItem(id: any) {\r\n    this._webix.checkItem(id)\r\n  }\r\n\r\n  /**\r\n   * 选中一行\r\n   * @param id\r\n   */\r\n  public select(id: any) {\r\n    this._webix.showItem(id)\r\n    this._webix.select(id)\r\n  }\r\n\r\n  /**\r\n   * 选中多行\r\n   */\r\n  public checkItems(ids: any[]) {\r\n    for (let id of ids) {\r\n      this._webix.checkItem(id)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 取消选中一行\r\n   */\r\n  public uncheckItem(id: any) {\r\n    this._webix.uncheckItem(id)\r\n  }\r\n\r\n  /**\r\n   * 获取选中的行\r\n   */\r\n  public getChecked() {\r\n    return this._webix.getChecked()\r\n  }\r\n\r\n  /**\r\n   * 查看是否被选中\r\n   */\r\n  public isChecked(id: any) {\r\n    return this._webix.isChecked(id)\r\n  }\r\n\r\n  /**\r\n   * 展开全部节点\r\n   */\r\n  public expandAll() {\r\n    this._webix.openAll()\r\n  }\r\n\r\n  /**\r\n   * 收起所有节点\r\n   */\r\n  public collapseAll() {\r\n    this._webix.closeAll()\r\n  }\r\n\r\n  /* =============================================== 以下部分为私有函数 =============================================== */\r\n\r\n  //数据源设置\r\n  private _dataSource: DataSource<CtlTreeTable>\r\n\r\n  //数据源管理器\r\n  private dataSourceBind?: YvDataSource<CtlTreeTable>\r\n\r\n  //重新绑定数据源\r\n  private _rebindDataSource() {\r\n    if (this.dataSourceBind) {\r\n      this.dataSourceBind.destory()\r\n      this.dataSourceBind = undefined\r\n    }\r\n\r\n    if (this._webix && this.getModule()) {\r\n      this.dataSourceBind = new YvDataSource(this, this.dataSource)\r\n      this.dataSourceBind.init()\r\n    }\r\n  }\r\n\r\n  //刷新状态时，自动重绑数据源\r\n  protected refreshState() {\r\n    super.refreshState()\r\n    this._rebindDataSource()\r\n  }\r\n}\r\n","import { YvEventDispatch } from './YvanEvent'\r\nimport webix from 'webix'\r\n\r\n/**\r\n * 创建快捷菜单\r\n * <pre>\r\n *     {\r\n            text: '菜单1',\r\n            onClick: {\r\n                type: 'function',\r\n                bind: 'tabBar1'\r\n            }\r\n        },\r\n {\r\n            text: '菜单2',\r\n            children: [\r\n                {\r\n                    text: '菜单2.1',\r\n                    onClick: {\r\n                        type: 'function',\r\n                        bind: 'tabBar21'\r\n                    }\r\n                },\r\n                {\r\n                    text: '菜单2.2',\r\n                    onClick: {\r\n                        type: 'function',\r\n                        bind: 'tabBar22'\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n {\r\n            text: '菜单3',\r\n            onClick: {\r\n                type: 'function',\r\n                bind: 'tabBar3'\r\n            }\r\n        }\r\n * </pre>\r\n */\r\nexport function createContextMenu(config: any, scope: any): any {\r\n  const methodMap = new Map<String, any>()\r\n\r\n  function buildMenu(configArray: any): any {\r\n    const ret = new Array<any>()\r\n    _.each(configArray, menu => {\r\n      if (!menu) return\r\n      if (menu === '-' || menu.text === '-') {\r\n        ret.push({ $template: 'Separator' })\r\n      }\r\n      if (menu.text) {\r\n        const id = _.uniqueId('_cxm_')\r\n        methodMap.set(id, menu.onClick)\r\n\r\n        if (_.isArray(menu.children)) {\r\n          ret.push({ value: menu.text, submenu: buildMenu(menu.children) })\r\n        } else {\r\n          ret.push({ value: menu.text, id })\r\n        }\r\n      }\r\n    })\r\n    return ret\r\n  }\r\n\r\n  const handler = webix.ui({\r\n    view: 'contextmenu',\r\n    data: buildMenu(config),\r\n    on: {\r\n      onMenuItemClick: function(this: any, id: any) {\r\n        if (methodMap.has(id)) {\r\n          YvEventDispatch(\r\n            methodMap.get(id),\r\n            this,\r\n            this.getContext(),\r\n            this.$scope\r\n          )\r\n        }\r\n      }\r\n    },\r\n    $scope: scope\r\n  })\r\n  return handler\r\n\r\n  // return webix.ui({\r\n  //     view: \"contextmenu\",\r\n  //     data: [\r\n  //         {value: \"a\", id: 'UU_A'},\r\n  //         {value: \"b\", id: 'UU_B'},\r\n  //         // {$template: \"Spacer\"},\r\n  //         {$template: \"Separator\"},\r\n  //         {\r\n  //             value: \"Translate...\",\r\n  //             submenu: [\r\n  //                 {\r\n  //                     value: \"罗\", id: 'AAA', on: {\r\n  //                         onClick: function (id: any) {\r\n  //                             debugger\r\n  //                         }\r\n  //                     }\r\n  //                 },\r\n  //                 {value: \"三\", id: 'BBB'},\r\n  //             ]\r\n  //         }\r\n  //     ],\r\n  //     on: {\r\n  //         onMenuItemClick: function (id: any) {\r\n  //             debugger\r\n  //         }\r\n  //     }\r\n  // });\r\n}\r\n","import { CtlBase } from './CtlBase'\r\nimport { parseYvanPropChangeVJson } from './CtlUtils'\r\nimport { YvEvent, YvEventDispatch } from './YvanEvent'\r\nimport { wrapperWebixConfig } from './YvanRender'\r\nimport { createContextMenu } from './CtlContextMenu'\r\nimport webix from 'webix'\r\n\r\nexport class CtlTab extends CtlBase<CtlTab> {\r\n  static create(vjson: any): CtlTab {\r\n    const that = new CtlTab(vjson)\r\n\r\n    if (vjson.hasOwnProperty('debugger')) {\r\n      debugger\r\n    }\r\n\r\n    const yvanProp = parseYvanPropChangeVJson(vjson, [\r\n      'tabbarContextMenu',\r\n      'defaultTabIndex',\r\n      'onTabChanged'\r\n    ])\r\n\r\n    // 将 vjson 存至 _webixConfig\r\n    that._webixConfig = vjson\r\n\r\n    // 将 yvanProp 合并至当前 Ctl 对象, 期间会操作 _webixConfig\r\n    _.assign(that, yvanProp)\r\n\r\n    // 将 事件与 _webixConfig 一起存至 vjson 交给 webix 框架做渲染\r\n    _.merge(vjson, that._webixConfig, {\r\n      on: {\r\n        onInited(this: any) {\r\n          that.attachHandle(this)\r\n          _.defer(() => {\r\n            if (yvanProp.defaultTabIndex > 0) {\r\n              // 默认打开的 tab 序号\r\n              that._webix.getMultiview()._cells[yvanProp.defaultTabIndex].show()\r\n            }\r\n\r\n            if (that._menuConfig) {\r\n              const menuHandler = createContextMenu(\r\n                that._menuConfig,\r\n                that.getModule()\r\n              )\r\n              menuHandler.attachTo(that._webix.getTabbar().$view)\r\n            }\r\n          })\r\n        }\r\n      },\r\n      tabbar: {\r\n        // close: true,\r\n        on: {\r\n          onAfterDelete() {\r\n            that.removeHandle()\r\n          },\r\n          onChange(newBodyId: string) {\r\n            YvEventDispatch(that.onTabChanged, that, newBodyId)\r\n          }\r\n        }\r\n      },\r\n      multiview: {\r\n        keepViews: true // 没有显示的选项卡也要渲染DOM, 否则 aggrid 会出问题\r\n        // fitBiggest: true,    //始终以最大的 tab 页签为大小\r\n      }\r\n    })\r\n\r\n    return that\r\n  }\r\n\r\n  defaultTabIndex = 0\r\n\r\n  /**\r\n   * 当前选项卡发生变化时触发\r\n   */\r\n  onTabChanged?: YvEvent<CtlTab, any>\r\n\r\n  /**\r\n   * tabbar 上的快捷菜单\r\n   */\r\n  set tabbarContextMenu(config: any) {\r\n    this._menuConfig = config\r\n  }\r\n\r\n  /**\r\n   * 关闭所有允许关闭的标签\r\n   */\r\n  closeAll(butIds: Array<any>) {\r\n    const cellId = new Array<any>()\r\n    _.each(this._webix.getMultiview()._cells, cell => {\r\n      if (!_.includes(butIds, cell.config.id)) {\r\n        cellId.push(cell.config.id)\r\n      }\r\n    })\r\n\r\n    _.each(cellId, id => {\r\n      this._webix.removeView(id)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 添加一个模块到标签页执行\r\n   * @param text 标签标题\r\n   * @param id 标签id\r\n   * @param vue 模块(Class)\r\n   */\r\n  addModule(text: string, id: string, vue: any) {\r\n    const that = this\r\n    const cfg = vue.buildView()\r\n\r\n    const tabId = this._webix.addView({\r\n      header: text,\r\n      close: true,\r\n      body: _.merge(cfg, {\r\n        id: id,\r\n        on: {\r\n          onDestruct() {\r\n            vue.$destroy()\r\n            delete vue._isLoadInvoked\r\n          },\r\n          onViewShow(this: any) {\r\n            if (!vue._isLoadInvoked) {\r\n              vue._webixId = tabId\r\n              vue._isLoadInvoked = true\r\n              vue.onLoad()\r\n            }\r\n\r\n            vue.onShow()\r\n          }\r\n          // onViewShow: _.once(() => {\r\n          //     // 触发 onLoad 方法\r\n          //     // 注意这有个 bug, viewTab 的最后一个标签，千万不能删除\r\n          //     vue._webixId = tabId;\r\n          //     vue.onLoad();\r\n          // })\r\n        }\r\n      })\r\n    })\r\n\r\n    this._webix.setValue(tabId)\r\n    if (this.tabCount === 1) {\r\n      // 这里有个 bug\r\n      // 如果是第一个被打开的标签，会不触发 onTabChanged 事件\r\n      YvEventDispatch(that.onTabChanged, that, id)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 添加一个 Vjson 到标签\r\n   * @param text 标签标题\r\n   * @param id 标签id\r\n   * @param vjson 界面描述片段\r\n   */\r\n  addContent(text: string, id: string, vjson: any, opts?: any) {\r\n    const that = this\r\n\r\n    if (this.selectTab(id)) {\r\n      // 已经打开了页面\r\n      return\r\n    }\r\n\r\n    let close = true\r\n    if (opts && opts.close === false) {\r\n      close = false\r\n    }\r\n\r\n    wrapperWebixConfig(this.getModule(), vjson)\r\n\r\n    const tabId = this._webix.addView({\r\n      header: text,\r\n      close,\r\n      body: _.merge(vjson, {\r\n        id: id\r\n      })\r\n    })\r\n\r\n    this._webix.setValue(tabId)\r\n    if (this.tabCount === 1) {\r\n      // 这里有个 bug\r\n      // 如果是第一个被打开的标签，会不触发 onTabChanged 事件\r\n      YvEventDispatch(that.onTabChanged, that, id)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取 tab 标签数量\r\n   */\r\n  get tabCount(): number {\r\n    return this._webix.getMultiview()._cells.length\r\n  }\r\n\r\n  /**\r\n   * 选定某个标签\r\n   */\r\n  public selectTab(id: string): boolean {\r\n    if (webix.$$(id)) {\r\n      webix.$$(id).show()\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * 判断标签是否存在\r\n   */\r\n  public tabExsit(id: string): boolean {\r\n    if (webix.$$(id)) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * 获取当前选中的 tabId\r\n   */\r\n  public getSelectedTabId(): any {\r\n    return this._webix.getTabbar().getValue()\r\n  }\r\n\r\n  /* =============================================== 以下部分为私有函数 =============================================== */\r\n\r\n  /**\r\n   * 快捷菜单句柄\r\n   */\r\n  _menuConfig: any = undefined\r\n}\r\n","import { CtlBase } from './CtlBase'\r\nimport { parseYvanPropChangeVJson } from './CtlUtils'\r\nimport { YvDataSource } from './YvanDataSourceImp'\r\nimport { YvEvent, YvEventDispatch } from './YvanEvent'\r\nimport { DataSource } from './YvanDataSource'\r\nimport { CtlDataviewDefault } from './CtlDefaultValue'\r\n\r\nexport class CtlDataview extends CtlBase<CtlDataview> {\r\n  static create(vjson: any): CtlDataview {\r\n    const that = new CtlDataview(vjson)\r\n\r\n    _.defaultsDeep(vjson, CtlDataviewDefault)\r\n\r\n    const yvanProp = parseYvanPropChangeVJson(vjson, [\r\n      // 'data',\r\n      'dataSource',\r\n      'onItemSelect',\r\n      'onItemClick',\r\n      'onItemDblClick',\r\n      'onDataComplete'\r\n    ])\r\n\r\n    // 将 vjson 存至 _webixConfig\r\n    that._webixConfig = vjson\r\n\r\n    // 将 yvanProp 合并至当前 Ctl 对象, 期间会操作 _webixConfig\r\n    _.assign(that, yvanProp)\r\n\r\n    // 将 事件与 _webixConfig 一起存至 vjson 交给 webix 框架做渲染\r\n    _.merge(vjson, that._webixConfig, {\r\n      select: true,\r\n      on: {\r\n        onInited(this: any) {\r\n          that.attachHandle(this)\r\n        },\r\n        onAfterDelete() {\r\n          that.removeHandle()\r\n        },\r\n        onItemClick(this: any, id: any) {\r\n          const item = this.getItem(id)\r\n          YvEventDispatch(that.onItemClick, that, item)\r\n        },\r\n        onItemDblClick(this: any, id: any) {\r\n          const item = this.getItem(id)\r\n          YvEventDispatch(that.onItemDblClick, that, item)\r\n        },\r\n        onAfterSelect(this: any, id: any) {\r\n          const item = this.getItem(id)\r\n          YvEventDispatch(that.onItemSelect, that, item)\r\n        }\r\n      }\r\n    })\r\n\r\n    return that\r\n  }\r\n\r\n  /**\r\n   * 树上的数据\r\n   */\r\n  data?: any[]\r\n\r\n  /**\r\n   * 树节点被点击后触发\r\n   */\r\n  onItemSelect?: YvEvent<CtlDataview, any>\r\n\r\n  /**\r\n   * 树节点被点击后触发\r\n   */\r\n  onItemClick?: YvEvent<CtlDataview, any>\r\n\r\n  /**\r\n   * 树节点被双击后触发\r\n   */\r\n  onItemDblClick?: YvEvent<CtlDataview, any>\r\n\r\n  /**\r\n   * 数据绑定完成后触发\r\n   */\r\n  onDataComplete?: YvEvent<CtlDataview, any>\r\n\r\n  /**\r\n   * 设置值\r\n   */\r\n  set value(nv: any) {\r\n    if (!this._webix) {\r\n      this._webixConfig.value = nv\r\n    } else {\r\n      this._webix.setValue(nv)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取值\r\n   */\r\n  get value(): any {\r\n    if (!this._webix) {\r\n      return this._webixConfig.value\r\n    }\r\n    return this._webix.getValue()\r\n  }\r\n\r\n  /**\r\n   * 设置数据\r\n   */\r\n  set dataReal(nv: any[]) {\r\n    // dataSource call back\r\n    this._webix.clearAll()\r\n    this._webix.parse(nv)\r\n  }\r\n\r\n  /**\r\n   * 获取数据源设置\r\n   */\r\n  get dataSource(): DataSource<CtlDataview> {\r\n    return this._dataSource\r\n  }\r\n\r\n  /**\r\n   * 设置数据源\r\n   */\r\n  set dataSource(nv: DataSource<CtlDataview>) {\r\n    this._dataSource = nv\r\n    this._rebindDataSource()\r\n  }\r\n\r\n  /**\r\n   * 重新请求数据\r\n   */\r\n  public reload(): void {\r\n    if (this.dataSourceBind && this.dataSourceBind.reload) {\r\n      this.dataSourceBind.reload()\r\n    }\r\n  }\r\n\r\n  /* =============================================== 以下部分为私有函数 =============================================== */\r\n\r\n  //数据源设置\r\n  private _dataSource: DataSource<CtlDataview>\r\n\r\n  //数据源管理器\r\n  private dataSourceBind?: YvDataSource<CtlDataview>\r\n\r\n  //重新绑定数据源\r\n  private _rebindDataSource() {\r\n    if (this.dataSourceBind) {\r\n      this.dataSourceBind.destory()\r\n      this.dataSourceBind = undefined\r\n    }\r\n\r\n    if (this._webix && this.getModule()) {\r\n      this.dataSourceBind = new YvDataSource(\r\n        this,\r\n        this.dataSource,\r\n        this._dataSourceProcess.bind(this)\r\n      )\r\n      this.dataSourceBind.init()\r\n    }\r\n  }\r\n\r\n  private _dataSourceProcess(data: any[]) {\r\n    if (\r\n      !this.dataSource ||\r\n      _.isArray(this.dataSource) ||\r\n      _.isFunction(this.dataSource)\r\n    ) {\r\n      return data\r\n    }\r\n\r\n    if (this.dataSource.type !== 'SQL' && this.dataSource.type !== 'function') {\r\n      return data\r\n    }\r\n\r\n    if (!this.dataSource.idField) {\r\n      return data\r\n    }\r\n\r\n    const idField = this.dataSource.idField\r\n\r\n    data = _.cloneDeep(data)\r\n\r\n    // 第一遍扫描, 建立映射关系\r\n    _.each(data, item => {\r\n      item.id = item[idField]\r\n    })\r\n\r\n    return data\r\n  }\r\n\r\n  //刷新状态时，自动重绑数据源\r\n  protected refreshState() {\r\n    super.refreshState()\r\n    this._rebindDataSource()\r\n  }\r\n}\r\n","import { CtlBase } from './CtlBase'\r\nimport { YvEvent, YvEventDispatch } from './YvanEvent'\r\nimport { parseYvanPropChangeVJson } from './CtlUtils'\r\n\r\nexport class CtlECharts extends CtlBase<CtlECharts> {\r\n  static create(vjson: any): CtlECharts {\r\n    const that = new CtlECharts(_.cloneDeep(vjson))\r\n\r\n    if (vjson.hasOwnProperty('debugger')) {\r\n      debugger\r\n    }\r\n\r\n    // 提取基础属性 onRender / ctlName / entityName 等等\r\n    const yvanProp = parseYvanPropChangeVJson(vjson, [])\r\n\r\n    // 将 yvanProp 合并至当前 CtlBase 对象\r\n    _.assign(that, yvanProp)\r\n\r\n    // 删除 vjson 所有数据, 替换为 template 语法\r\n    _.forOwn(vjson, (value, key) => {\r\n      delete vjson[key]\r\n    })\r\n    _.merge(vjson, {\r\n      view: 'grid',\r\n      template: `<div role=\"echarts\"></div>`,\r\n      on: {\r\n        onAfterRender: function(this: any) {\r\n          that.attachHandle(this)\r\n          that._resetECharts()\r\n        },\r\n        onDestruct(this: any) {\r\n          if (that._echartsHandler) {\r\n            that._echartsHandler.dispose()\r\n            delete that._echartsHandler\r\n          }\r\n          that.removeHandle()\r\n        }\r\n      }\r\n    })\r\n    if (that.vjson.id) {\r\n      vjson.id = that.vjson.id\r\n    }\r\n    return that\r\n  }\r\n\r\n  /*============================ 公共属性部分 ============================*/\r\n  /**\r\n   * 数据绑定完毕后触发\r\n   */\r\n  onClick?: YvEvent<CtlECharts, any>\r\n\r\n  setOption(option: any, opts?: any): void {\r\n    this._echartsHandler.setOption(option, opts)\r\n    _.defer(() => {\r\n      this._echartsHandler.resize()\r\n    })\r\n  }\r\n\r\n  public get handle() {\r\n    return <any>this._echartsHandler\r\n  }\r\n\r\n  // setOption(option: echarts.EChartOption, opts?: echarts.EChartsOptionConfig): void {\r\n  //     this._echartsHandler.setOption(option, opts);\r\n  //     _.defer(() => {\r\n  //         this._echartsHandler.resize();\r\n  //     });\r\n  // }\r\n  //\r\n  // setOption2(option: echarts.EChartOption | echarts.EChartsResponsiveOption, notMerge?: boolean, lazyUpdate?: boolean): void {\r\n  //     this._echartsHandler.setOption(option, notMerge, lazyUpdate);\r\n  //     _.defer(() => {\r\n  //         this._echartsHandler.resize();\r\n  //     });\r\n  // }\r\n\r\n  resize() {\r\n    this._echartsHandler.resize()\r\n  }\r\n\r\n  clear() {\r\n    this._echartsHandler.clear()\r\n  }\r\n\r\n  /*============================ 私有属性部分 ============================*/\r\n  private _echartsHandler!: echarts.ECharts\r\n\r\n  private _resetECharts() {\r\n    const $el = $(this._webix._viewobj).find('[role=\"echarts\"]')[0]\r\n    let el: any = $el\r\n    this._echartsHandler = echarts.init(el)\r\n\r\n    this._echartsHandler.on('click', (params: any) => {\r\n      YvEventDispatch(this.onClick, this, params)\r\n    })\r\n  }\r\n}\r\n","import { CtlBase } from './CtlBase'\r\nimport { parseYvanPropChangeVJson } from './CtlUtils'\r\nimport { YvEvent, YvEventDispatch } from './YvanEvent'\r\nimport { CtlButtonDefault } from './CtlDefaultValue'\r\nimport { isDesignMode } from './DesignHelper'\r\n\r\ntype CtlButtonType =\r\n  | 'default'\r\n  | 'primary'\r\n  | 'success'\r\n  | 'danger'\r\n  | string\r\n  | undefined\r\n\r\n/**\r\n * 按钮组件\r\n * @author yvan\r\n */\r\nexport class CtlButton extends CtlBase<CtlButton> {\r\n  static create(vjson: any): CtlButton {\r\n    const that = new CtlButton(vjson)\r\n\r\n    _.defaultsDeep(vjson, CtlButtonDefault)\r\n\r\n    const yvanProp = parseYvanPropChangeVJson(vjson, [\r\n      'onClick',\r\n      'cssType',\r\n      'icon',\r\n      'width',\r\n      'badge',\r\n      'text'\r\n    ])\r\n\r\n    // 将 vjson 存至 _webixConfig\r\n    that._webixConfig = vjson\r\n\r\n    // 将 yvanProp 合并至当前 Ctl 对象\r\n    _.assign(that, yvanProp)\r\n\r\n    // 将 _webixConfig 合并至 vjson, 最终合交给 webix 做渲染\r\n    _.merge(vjson, that._webixConfig, {\r\n      type: 'text',\r\n      on: {\r\n        onInited: function(this: any) {\r\n          that.attachHandle(this)\r\n        },\r\n        onDestruct() {\r\n          that.removeHandle()\r\n        },\r\n        onItemClick: function(this: any) {\r\n          if (isDesignMode()) {\r\n            return\r\n          }\r\n          YvEventDispatch(that.onClick, that, undefined)\r\n        }\r\n      }\r\n    })\r\n\r\n    return that\r\n  }\r\n\r\n  /*============================ 公共属性部分 ============================*/\r\n\r\n  /**\r\n   * 按下按钮后触发\r\n   */\r\n  onClick?: YvEvent<CtlButton, void>\r\n\r\n  /**\r\n   * 设置标记\r\n   */\r\n  set badge(nv: number | string | undefined) {\r\n    if (!this._webix) {\r\n      if (nv) {\r\n        this._webixConfig.badge = nv\r\n      } else {\r\n        delete this._webixConfig.css\r\n      }\r\n      return\r\n    }\r\n\r\n    this._webix.define('badge', nv)\r\n    this._webix.render()\r\n  }\r\n\r\n  /**\r\n   * 设置宽度\r\n   */\r\n  set width(nv: number | undefined) {\r\n    if (!this._webix) {\r\n      if (nv) {\r\n        this._webixConfig.width = nv\r\n      } else {\r\n        delete this._webixConfig.width\r\n      }\r\n      return\r\n    }\r\n\r\n    this._webix.define('width', nv)\r\n    this._webix.resize()\r\n  }\r\n\r\n  /**\r\n   * 显示样式\r\n   */\r\n  set cssType(nv: CtlButtonType) {\r\n    let css = nv\r\n    switch (nv) {\r\n      case 'success':\r\n        css = 'yvan_success'\r\n        break\r\n\r\n      case 'danger':\r\n        css = 'yvan_danger'\r\n        break\r\n\r\n      case 'primary':\r\n        css = 'yvan_primary'\r\n        break\r\n\r\n      case 'default':\r\n        css = ''\r\n        break\r\n    }\r\n\r\n    if (!this._webix) {\r\n      if (css) {\r\n        this._webixConfig.css = css\r\n      } else {\r\n        delete this._webixConfig.css\r\n      }\r\n      return\r\n    }\r\n\r\n    $(this._webix.$view).removeClass('webix_danger webix_primary')\r\n    this._webix.define('css', css)\r\n  }\r\n\r\n  /**\r\n   * 设置按钮图标\r\n   */\r\n  set icon(nv: string) {\r\n    this._icon = nv\r\n    this._refreshText()\r\n  }\r\n\r\n  /**\r\n   * 获取按钮图标\r\n   */\r\n  get icon(): string {\r\n    return this._icon\r\n  }\r\n\r\n  /**\r\n   * 设置按钮文本\r\n   */\r\n  set text(nv: string) {\r\n    this._text = nv\r\n    this._refreshText()\r\n  }\r\n\r\n  /**\r\n   * 获取按钮文本\r\n   */\r\n  get text(): string {\r\n    return this._text\r\n  }\r\n\r\n  /*============================ 私有属性部分 ============================*/\r\n\r\n  private _text: string = ''\r\n  private _icon: string = ''\r\n\r\n  private _refreshText(): void {\r\n    const nv = `<i class=\"${this._icon}\"></i><span>${this._text}</span>`\r\n    if (!this._webix) {\r\n      this._webixConfig.value = nv\r\n      return\r\n    }\r\n    this._webix.setValue(nv)\r\n  }\r\n}\r\n","import { CtlBase } from '../../CtlBase'\r\nimport { parseYvanPropChangeVJson } from '../../CtlUtils'\r\nimport * as YvanUI from '../../YvanUIExtend'\r\nimport { YvEvent, YvEventDispatch } from '../../YvanEvent'\r\n\r\ntype CtlInputWidth = number | undefined | 'auto'\r\n\r\nexport class CtlInput<M> extends CtlBase<M> {\r\n  protected _create<M extends CtlInput<M>>(vjson: any, me: M) {\r\n    const that: M = me\r\n\r\n    // 提取想要的属性\r\n    const yvanProp = parseYvanPropChangeVJson(vjson, [\r\n      'id',\r\n      'gravity',\r\n      'validate',\r\n      'onInput',\r\n      'onKeydown',\r\n      'onClick',\r\n      'onEnter',\r\n      'width',\r\n      'onFocus',\r\n      'onChange',\r\n      'onBlur',\r\n      'maxlength',\r\n      'changeValueImplete',\r\n      'ff',\r\n      'label',\r\n      'labelWidth',\r\n      'labelAlign',\r\n      'readonly',\r\n      'disabled',\r\n      'required',\r\n      'value',\r\n      'prompt'\r\n    ])\r\n\r\n    // 将 vjson 存至 _webixConfig\r\n    that._webixConfig = vjson\r\n    if (!vjson.id) {\r\n      that.id = _.uniqueId('input_')\r\n    }\r\n\r\n    // 将 yvanProp 合并至当前 Ctl 对象\r\n    _.assign(that, yvanProp)\r\n\r\n    function onKeydown(event: any) {\r\n      YvEventDispatch(that.onKeydown, that, event)\r\n    }\r\n\r\n    // 将 _webixConfig 合并至 vjson, 最终合交给 webix 做渲染\r\n    _.merge(vjson, that._webixConfig, {\r\n      on: {\r\n        onInited: function(this: any) {\r\n          that.attachHandle(this)\r\n        },\r\n        onAfterRender: function(this: any) {\r\n          const $input = $(this.$view).find('input')\r\n          $input.on('input', that.onInputEvent.bind(that))\r\n          $input.on('keydown', onKeydown)\r\n          if (\r\n            that.constructor.name !== 'CtlSelect' &&\r\n            that._webixConfig.required\r\n          ) {\r\n            if (that.constructor.name === 'CtlDateRangePicker') {\r\n              that._showValidate(\r\n                !this.getValue().end || this.getValue().end.length <= 0,\r\n                'requiredValidate'\r\n              )\r\n            } else {\r\n              that._showValidate(\r\n                !this.getValue() || this.getValue().length <= 0,\r\n                'requiredValidate'\r\n              )\r\n            }\r\n          }\r\n          this.callEvent('onCtlRender', [])\r\n          if (that.ff > 0) {\r\n            setTimeout(() => {\r\n              that.focus()\r\n              that.ff = 0\r\n            }, that.ff)\r\n          }\r\n        },\r\n        onDestruct: function(this: any) {\r\n          this.callEvent('onCtlRemove', [])\r\n          const $input = $(this.$view).find('input')\r\n          $input.off('input')\r\n          $input.off('keydown')\r\n          that.removeHandle()\r\n        },\r\n        onItemClick(this: any) {\r\n          YvEventDispatch(that.onClick, that, undefined)\r\n        },\r\n        onEnter(this: any) {\r\n          YvEventDispatch(that.onEnter, that, undefined)\r\n        },\r\n        onFocus(this: any) {\r\n          YvEventDispatch(that.onFocus, that, undefined)\r\n        },\r\n        onChange(this: any, newValue: any, oldValue: any) {\r\n          if (!that.valueValid(newValue)) {\r\n            // 不允许触发更改\r\n            return\r\n          }\r\n          if (that.onValueChange && typeof that.onValueChange === 'function') {\r\n            that.onValueChange(newValue, oldValue)\r\n          }\r\n          newValue = that.valueProcess(newValue)\r\n          that.changeToEntity(newValue)\r\n          if (that._webixConfig.required) {\r\n            if (that.constructor.name === 'CtlDateRangePicker') {\r\n              that._showValidate(\r\n                !this.getValue().end || this.getValue().end.length <= 0,\r\n                'requiredValidate'\r\n              )\r\n            } else {\r\n              that._showValidate(\r\n                !this.getValue() || this.getValue().length <= 0,\r\n                'requiredValidate'\r\n              )\r\n            }\r\n          }\r\n\r\n          YvEventDispatch(that.onChange, that, newValue)\r\n        },\r\n        onBlur(this: any) {\r\n          if (that._webixConfig.required) {\r\n            if (that.constructor.name === 'CtlDateRangePicker') {\r\n              that._showValidate(\r\n                !this.getValue().end || this.getValue().end.length <= 0,\r\n                'requiredValidate'\r\n              )\r\n            } else {\r\n              that._showValidate(\r\n                !this.getValue() || this.getValue().length <= 0,\r\n                'requiredValidate'\r\n              )\r\n            }\r\n          }\r\n          YvEventDispatch(that.onBlur, that, undefined)\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  //是否允许触发 onChange\r\n  protected valueValid(value: any): boolean {\r\n    return true\r\n  }\r\n\r\n  //更改 onChange 或实体时的值\r\n  protected valueProcess(value: any): any {\r\n    return value\r\n  }\r\n\r\n  inputCheck!: (newValue: any, oldValue: any) => boolean\r\n\r\n  onInputEvent(event: Event) {\r\n    if (this.onInputValue && typeof this.onInputValue === 'function') {\r\n      this.onInputValue((event.target as any).value)\r\n    }\r\n\r\n    if (\r\n      this.constructor.name === 'CtlText' &&\r\n      this.maxlength &&\r\n      _.size((event.target as any).value) > this.maxlength\r\n    ) {\r\n      ;(event.target as any).value = (event.target as any).value.substring(\r\n        0,\r\n        this.maxlength\r\n      )\r\n    }\r\n    if (this.changeValueImplete) {\r\n      // 改变后立刻提交值\r\n      this.value = (event.target as any).value\r\n    }\r\n\r\n    // @ts-ignore\r\n    YvEventDispatch(this.onInput, this, event)\r\n  }\r\n\r\n  /*============================ 公共属性部分 ============================*/\r\n\r\n  /**\r\n   * 更改任何内容时触发\r\n   */\r\n  onInput?: YvEvent<M, Event>\r\n\r\n  /**\r\n   * 离开焦点或按下回车键之后触发更改时触发\r\n   */\r\n  onChange?: YvEvent<M, string>\r\n\r\n  /**\r\n   * 鼠标点击后触发\r\n   */\r\n  onClick?: YvEvent<M, void>\r\n\r\n  /**\r\n   * 按下回车键之后触发\r\n   */\r\n  onEnter?: YvEvent<M, void>\r\n\r\n  /**\r\n   * 获取焦点后触发\r\n   */\r\n  onFocus?: YvEvent<M, void>\r\n\r\n  /**\r\n   * 离开焦点后触发\r\n   */\r\n  onBlur?: YvEvent<M, void>\r\n\r\n  /**\r\n   * 按下任何键之后触发事件\r\n   */\r\n  onKeydown?: YvEvent<M, Event>\r\n\r\n  /**\r\n   * 输入内容时是否立刻提交 value\r\n   */\r\n  changeValueImplete: boolean = false\r\n\r\n  _gravity: string = ''\r\n\r\n  set gravity(nv: any) {\r\n    this._gravity = nv\r\n\r\n    let v: any\r\n    if (!nv) {\r\n      v = undefined\r\n    } else {\r\n      v = _.parseInt(nv)\r\n    }\r\n\r\n    if (!this._webix) {\r\n      if (v) {\r\n        this._webixConfig.gravity = v\r\n      } else {\r\n        delete this._webixConfig.gravity\r\n      }\r\n    } else {\r\n      this._webix.define('gravity', v)\r\n      this._webix.resize()\r\n    }\r\n  }\r\n\r\n  get gravity(): any {\r\n    return this._gravity\r\n  }\r\n\r\n  set id(nv: any) {\r\n    this._id = nv\r\n    if (!this._webix) {\r\n      this._webixConfig.id = nv\r\n    } else {\r\n      // 运行后不允许修改 id\r\n      console.error('can\\'t set \"ID\" at runtime!')\r\n    }\r\n  }\r\n\r\n  get id(): any {\r\n    return this._id\r\n  }\r\n\r\n  /**\r\n   * 设置值\r\n   */\r\n  set value(nv: any) {\r\n    if (!this._webix) {\r\n      this._webixConfig.value = nv\r\n    } else {\r\n      this._webix.setValue(nv)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取值\r\n   */\r\n  get value(): any {\r\n    if (!this._validateResult) {\r\n      throw new Error('invalidate!')\r\n    }\r\n\r\n    if (!this._webix) {\r\n      return this._webixConfig.value\r\n    }\r\n\r\n    return this._webix.getValue()\r\n  }\r\n\r\n  /**\r\n   * 定焦时间\r\n   */\r\n  ff: number = 0\r\n\r\n  /**\r\n   * 最大长度\r\n   */\r\n  maxlength?: number = undefined\r\n\r\n  // private _maxlength!:number;\r\n\r\n  /**\r\n   * 文本描述\r\n   */\r\n  set label(nv: string) {\r\n    if (!this._webix) {\r\n      this._webixConfig.label = nv\r\n      return\r\n    }\r\n\r\n    this._webix.define('label', nv)\r\n    this._webix.refresh()\r\n  }\r\n\r\n  /**\r\n   * 文本对齐方式\r\n   */\r\n  set labelAlign(nv: 'left' | 'right' | 'center') {\r\n    if (!this._webix) {\r\n      this._webixConfig.labelAlign = nv\r\n      return\r\n    }\r\n\r\n    this._webix.define('labelAlign', nv)\r\n    this._webix.refresh()\r\n  }\r\n\r\n  /**\r\n   * 必填\r\n   */\r\n  set required(nv: boolean) {\r\n    if (!this._webix) {\r\n      this._webixConfig.required = nv\r\n      return\r\n    }\r\n    this._webixConfig.required = nv\r\n    this._webix.define('required', nv)\r\n    this._webix.refresh()\r\n  }\r\n\r\n  /**\r\n   * 文本宽度\r\n   */\r\n  set labelWidth(nv: number) {\r\n    if (!this._webix) {\r\n      this._webixConfig.labelWidth = nv\r\n      return\r\n    }\r\n\r\n    this._webix.define('labelWidth', nv)\r\n    this._webix.refresh()\r\n  }\r\n\r\n  /**\r\n   * 禁用\r\n   */\r\n  set disabled(nv: boolean) {\r\n    if (!this._webix) {\r\n      this._webixConfig.disabled = nv\r\n      return\r\n    }\r\n\r\n    if (nv) {\r\n      this._webix.disable()\r\n    } else {\r\n      this._webix.enable()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 只读\r\n   */\r\n  set readonly(nv: boolean) {\r\n    if (!this._webix) {\r\n      this._webixConfig.readonly = nv\r\n      return\r\n    }\r\n\r\n    this._webix.define('readonly', nv)\r\n    this._webix.refresh()\r\n  }\r\n\r\n  /**\r\n   * 水印\r\n   */\r\n  set prompt(nv: string) {\r\n    if (!this._webix) {\r\n      this._webixConfig.placeholder = nv\r\n      return\r\n    }\r\n\r\n    this._webix.define('placeholder', nv)\r\n    this._webix.refresh()\r\n  }\r\n\r\n  /**\r\n   * 宽度\r\n   */\r\n  set width(nv: CtlInputWidth) {\r\n    if (nv === 'auto' || typeof nv === 'undefined') {\r\n      nv = undefined\r\n    }\r\n\r\n    if (!this._webix) {\r\n      this._webixConfig.width = nv\r\n      return\r\n    }\r\n\r\n    this._webix.define('width', nv)\r\n    this._webix.refresh()\r\n  }\r\n\r\n  onValueChange(newV: any, oldV: any) {\r\n    //validType[this.validType](newV);\r\n  }\r\n\r\n  onInputValue(value: any) {\r\n    if (this.validate && typeof this.validate === 'function') {\r\n      this._validateResult = this.validate(value)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 验证\r\n   * @param nv  div.webix_inp_static\r\n   */\r\n  set validate(nv: any) {\r\n    const that = this\r\n    if (typeof nv === 'function') {\r\n      this._validate = nv\r\n    } else if (typeof nv === 'string') {\r\n      const vl = function(value: any, data: any) {\r\n        let msg = YvanUI.complexValid['fun'](nv, value)\r\n\r\n        return that._showValidate(msg, 'inputValidate')\r\n      }\r\n      this._validate = vl\r\n    }\r\n  }\r\n\r\n  get validate(): any {\r\n    return this._validate\r\n  }\r\n\r\n  /**================ 私有属性 ===================**/\r\n  _validateResult: boolean = true\r\n\r\n  _validate: any\r\n\r\n  _id: any\r\n\r\n  _maxlength: any\r\n\r\n  _showValidate(\r\n    msg: any,\r\n    type: 'inputValidate' | 'changedValidate' | 'requiredValidate'\r\n  ): boolean {\r\n    let $input!: any\r\n    if (\r\n      this.constructor.name === 'CtlText' ||\r\n      this.constructor.name === 'CtlSearch' ||\r\n      this.constructor.name === 'CtlCombo'\r\n    ) {\r\n      $input = $(this._webix.$view).find('input')\r\n    } else if (\r\n      this.constructor.name === 'CtlDatePicker' ||\r\n      this.constructor.name === 'CtlDateRangePicker' ||\r\n      this.constructor.name === 'CtlMultiCombo' ||\r\n      this.constructor.name === 'CtlMultiSelect'\r\n    ) {\r\n      $input = $(this._webix.$view).find('div.webix_inp_static')\r\n    } else if (this.constructor.name === 'CtlSelect') {\r\n      $input = $(this._webix.$view).find('select')\r\n    } else {\r\n      return true\r\n    }\r\n\r\n    switch (type) {\r\n      case 'inputValidate': {\r\n        if (msg) {\r\n          $input.each((index: any, item: any) => {\r\n            $(item).css({\r\n              'background-color': '#ffdedb',\r\n              'border-color': '#ff8d82'\r\n            })\r\n          })\r\n          $(`#${this.id}_validate`).remove()\r\n          $(this._webix.$view).append(\r\n            `<div id=\"${this.id}_validate\" style=\"position:relative; border: 1px #ff8d82; float:right; top:-38px; color: #FF5C4C;\">${msg}</div>`\r\n          )\r\n          return false\r\n        } else {\r\n          $input.each((index: any, item: any) => {\r\n            $(item).css({\r\n              'background-color': '',\r\n              'border-color': ''\r\n            })\r\n          })\r\n          $(`#${this.id}_validate`).remove()\r\n          return true\r\n        }\r\n      }\r\n      case 'changedValidate': {\r\n        if (msg) {\r\n          $input.each((index: any, item: any) => {\r\n            $(item).css({\r\n              'background-color': '#ffdedb',\r\n              'border-color': '#ff8d82'\r\n            })\r\n          })\r\n          $(`#${this.id}_validate`).remove()\r\n          $(this._webix.$view).append(\r\n            `<div id=\"${this.id}_validate\" style=\"position:relative; border: 1px #ff8d82; float:right; top:-38px; color: #FF5C4C;\">${msg}</div>`\r\n          )\r\n          return false\r\n        } else {\r\n          $input.each((index: any, item: any) => {\r\n            $(item).css({\r\n              'background-color': '',\r\n              'border-color': ''\r\n            })\r\n          })\r\n          $(`#${this.id}_validate`).remove()\r\n          return true\r\n        }\r\n      }\r\n      case 'requiredValidate': {\r\n        if (msg) {\r\n          $input.each((index: any, item: any) => {\r\n            $(item).css({\r\n              'border-color': '#ff8d82'\r\n            })\r\n          })\r\n          // $(`#${this.id}_validate`).remove();\r\n          // $(this._webix.$view).append(`<div id=\"${this.id}_validate\" style=\"position:relative; border: 1px #ff8d82; float:right; top:-38px; color: #FF5C4C;\">必填项</div>`);\r\n          return false\r\n        } else {\r\n          $input.each((index: any, item: any) => {\r\n            $(item).css({\r\n              'border-color': ''\r\n            })\r\n          })\r\n          // $(`#${this.id}_validate`).remove();\r\n          return true\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import * as YvanUI from '../../YvanUIExtend'\r\nimport { CtlInput } from './CtlInput'\r\nimport { parseYvanPropChangeVJson } from '../../CtlUtils'\r\nimport { CtlTextDefault } from '../../CtlDefaultValue'\r\n\r\nexport class CtlText extends CtlInput<CtlText> {\r\n  static create(vjson: any): CtlText {\r\n    const that = new CtlText(vjson)\r\n\r\n    _.defaultsDeep(vjson, CtlTextDefault)\r\n\r\n    // 基础属性先执行\r\n    that._create(vjson, that)\r\n\r\n    const yvanProp = parseYvanPropChangeVJson(vjson, ['validate'])\r\n\r\n    // 将 yvanProp 合并至当前 Ctl 对象\r\n    _.assign(that, yvanProp)\r\n\r\n    _.merge(vjson, that._webixConfig)\r\n\r\n    return that\r\n  }\r\n\r\n  /*============================ 公共属性部分 ============================*/\r\n\r\n  set validate(nv: any) {\r\n    const that = this\r\n    if (typeof nv === 'function') {\r\n      this._validate = nv\r\n    } else if (typeof nv === 'string') {\r\n      const vl = function(value: any, data: any) {\r\n        let msg = YvanUI.complexValid['fun'](nv, value)\r\n        const $input = $(that._webix.$view).find('input')\r\n        if (msg) {\r\n          $input.each((index, item) => {\r\n            $(item).css({\r\n              'background-color': '#ffdedb',\r\n              'border-color': '#ff8d82'\r\n            })\r\n          })\r\n          $(`#${that.id}_validate`).remove()\r\n          $(that._webix.$view).append(\r\n            `<div id=\"${that.id}_validate\" style=\"position:relative; border: 1px #ff8d82; float:right; top:-38px; color: #FF5C4C;\">${msg}</div>`\r\n          )\r\n          return false\r\n        } else {\r\n          $input.each((index, item) => {\r\n            $(item).css({\r\n              'background-color': '',\r\n              'border-color': ''\r\n            })\r\n          })\r\n          $(`#${that.id}_validate`).remove()\r\n          return true\r\n        }\r\n      }\r\n      this._validate = vl\r\n    }\r\n  }\r\n}\r\n","import { CtlInput } from '../input/CtlInput'\r\nimport { parseYvanPropChangeVJson } from '../../CtlUtils'\r\nimport { CtlCheckboxDefault } from '../../CtlDefaultValue'\r\n\r\nexport class CtlCheckBox extends CtlInput<CtlCheckBox> {\r\n  static create(vjson: any): CtlCheckBox {\r\n    const that = new CtlCheckBox(vjson)\r\n\r\n    _.defaultsDeep(vjson, CtlCheckboxDefault)\r\n\r\n    // 基础属性先执行\r\n    that._create(vjson, that)\r\n\r\n    const yvanProp = parseYvanPropChangeVJson(vjson, ['labelAtRight', 'value'])\r\n\r\n    // 将 yvanProp 合并至当前 Ctl 对象\r\n    _.assign(that, yvanProp)\r\n\r\n    // 将 _webixConfig 合并至 vjson, 最终合交给 webix 做渲染\r\n    _.merge(vjson, that._webixConfig, {\r\n      view: 'checkbox',\r\n      on: {}\r\n    })\r\n\r\n    return that\r\n  }\r\n\r\n  private _labelAtRight: boolean = true\r\n  private _label: string = ''\r\n\r\n  /**\r\n   * label 是否在右边\r\n   */\r\n  get labelAtRight(): boolean {\r\n    return this._labelAtRight\r\n  }\r\n\r\n  set labelAtRight(nv: boolean) {\r\n    this._labelAtRight = nv\r\n    this._refreshLabel()\r\n  }\r\n\r\n  /**\r\n   * label 显示内容\r\n   */\r\n  get label(): string {\r\n    return this._label\r\n  }\r\n\r\n  set label(nv: string) {\r\n    this._label = nv\r\n    this._refreshLabel()\r\n  }\r\n\r\n  private _refreshLabel() {\r\n    const nv = this._label\r\n    if (!this._webix) {\r\n      if (this._labelAtRight) {\r\n        this._webixConfig.label = ''\r\n        this._webixConfig.labelRight = nv\r\n        this._webixConfig.labelWidth = 0\r\n      } else {\r\n        this._webixConfig.label = nv\r\n        this._webixConfig.labelRight = ''\r\n      }\r\n    } else {\r\n      if (this._labelAtRight) {\r\n        this._webix.define({\r\n          label: '',\r\n          labelRight: nv\r\n        })\r\n      } else {\r\n        this._webix.define({\r\n          label: nv,\r\n          labelRight: ''\r\n        })\r\n      }\r\n      this._webix.refresh()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 交换状态\r\n   */\r\n  toggle() {\r\n    this._webix.toggle()\r\n  }\r\n\r\n  /**\r\n   * 设置值\r\n   */\r\n  set value(nv: any) {\r\n    if (!this._webix) {\r\n      this._webixConfig.value = nv\r\n    } else {\r\n      this._webix.setValueHere(nv)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取值\r\n   */\r\n  get value(): any {\r\n    if (!this._webix) {\r\n      return this._webixConfig.value\r\n    }\r\n    return this._webix.getValue()\r\n  }\r\n}\r\n","import { CtlInput } from '../input/CtlInput'\r\nimport { parseYvanPropChangeVJson } from '../../CtlUtils'\r\nimport { CtlComboDefault } from '../../CtlDefaultValue'\r\nimport { getFirstPinyin } from '../../Utils'\r\nimport { DataSource } from '../../YvanDataSource'\r\nimport { YvEvent } from '../../YvanEvent'\r\nimport { YvDataSource } from '../../YvanDataSourceImp'\r\n\r\n/**\r\n * 下拉框组件\r\n */\r\nexport class CtlCombo extends CtlInput<CtlCombo> {\r\n  static create(vjson: any): CtlCombo {\r\n    const that = new CtlCombo(vjson)\r\n\r\n    _.defaultsDeep(vjson, CtlComboDefault)\r\n\r\n    // 基础属性先执行\r\n    that._create(vjson, that)\r\n\r\n    const yvanProp = parseYvanPropChangeVJson(vjson, ['options', 'dataSource'])\r\n\r\n    // 将 yvanProp 合并至当前 Ctl 对象\r\n    _.assign(that, yvanProp)\r\n\r\n    _.merge(vjson, that._webixConfig)\r\n\r\n    return that\r\n  }\r\n\r\n  /**\r\n   * 数据绑定完成后触发\r\n   */\r\n  onDataComplete?: YvEvent<CtlCombo, any>\r\n\r\n  /**\r\n   * 修改下拉选项\r\n   */\r\n  set options(nv: any[]) {\r\n    const options: any = {\r\n      filter(item: any, filterWord: string) {\r\n        if (_.size(filterWord) <= 0) {\r\n          return true\r\n        }\r\n        const nodePy = getFirstPinyin(item.text).toLowerCase()\r\n        return (\r\n          nodePy.indexOf(filterWord.toLowerCase()) >= 0 ||\r\n          item.text.indexOf(filterWord) >= 0\r\n        )\r\n      },\r\n      body: {\r\n        template: '#text#',\r\n        type: {\r\n          height: 36\r\n        },\r\n        data: nv\r\n      }\r\n    }\r\n\r\n    if (!this._webix) {\r\n      _.merge(this._webixConfig, {\r\n        view: 'combo',\r\n        options\r\n      })\r\n      return\r\n    }\r\n    this._webix.define('options', options)\r\n    this._webix.refresh()\r\n  }\r\n\r\n  /**\r\n   * 获取显示的值\r\n   */\r\n  getText(): string {\r\n    return this._webix.getText()\r\n  }\r\n\r\n  /**\r\n   * 下拉选项\r\n   */\r\n  set dataReal(nv: any[]) {\r\n    this.options = nv\r\n  }\r\n\r\n  /**\r\n   * 获取数据源设置\r\n   */\r\n  get dataSource(): DataSource<CtlCombo> {\r\n    return this._dataSource\r\n  }\r\n\r\n  /**\r\n   * 设置数据源\r\n   */\r\n  set dataSource(nv: DataSource<CtlCombo>) {\r\n    this._dataSource = nv\r\n    this._rebindDataSource()\r\n  }\r\n\r\n  /**\r\n   * 重新请求数据\r\n   */\r\n  public reload(): void {\r\n    if (this.dataSourceBind && this.dataSourceBind.reload) {\r\n      this.dataSourceBind.reload()\r\n    }\r\n  }\r\n\r\n  /* =============================================== 以下部分为私有函数 =============================================== */\r\n\r\n  //数据源设置\r\n  private _dataSource: DataSource<CtlCombo>\r\n\r\n  //数据源管理器\r\n  private dataSourceBind?: YvDataSource<CtlCombo>\r\n\r\n  //重新绑定数据源\r\n  private _rebindDataSource() {\r\n    if (this.dataSourceBind) {\r\n      this.dataSourceBind.destory()\r\n      this.dataSourceBind = undefined\r\n    }\r\n\r\n    if (this._webix && this.getModule()) {\r\n      this.dataSourceBind = new YvDataSource(\r\n        this,\r\n        this.dataSource,\r\n        this._dataSourceProcess.bind(this)\r\n      )\r\n      this.dataSourceBind.init()\r\n    }\r\n  }\r\n\r\n  private _dataSourceProcess(data: any[]) {\r\n    if (\r\n      !this.dataSource ||\r\n      _.isArray(this.dataSource) ||\r\n      _.isFunction(this.dataSource)\r\n    ) {\r\n      return data\r\n    }\r\n\r\n    if (this.dataSource.type !== 'SQL') {\r\n      return data\r\n    }\r\n\r\n    const displayField = this.dataSource.displayField || 'text'\r\n    const valueField = this.dataSource.valueField || 'id'\r\n    return _.map(data, item => {\r\n      return {\r\n        id: item[valueField],\r\n        text: item[displayField]\r\n      }\r\n    })\r\n  }\r\n\r\n  //刷新状态时，自动重绑数据源\r\n  protected refreshState() {\r\n    super.refreshState()\r\n    this._rebindDataSource()\r\n  }\r\n}\r\n","import { CtlInput } from './CtlInput'\r\nimport { parseYvanPropChangeVJson } from '../../CtlUtils'\r\nimport { CtlDateDefault, CtlDateTimeDefault } from '../../CtlDefaultValue'\r\n\r\nexport class CtlDatePicker extends CtlInput<CtlDatePicker> {\r\n  static create(vjson: any): CtlDatePicker {\r\n    const that = new CtlDatePicker(vjson)\r\n\r\n    const baseConfig: any = {}\r\n    if (vjson.view === 'datetime') {\r\n      // 日期+时间输入\r\n      baseConfig.format = '%Y-%m-%d %H:%i:%s'\r\n      baseConfig.timepicker = true\r\n      _.defaultsDeep(vjson, CtlDateTimeDefault)\r\n    } else {\r\n      // 日期输入\r\n      baseConfig.format = '%Y-%m-%d'\r\n      baseConfig.timepicker = false\r\n      _.defaultsDeep(vjson, CtlDateDefault)\r\n    }\r\n\r\n    // 基础属性先执行\r\n    that._create(vjson, that)\r\n\r\n    const yvanProp = parseYvanPropChangeVJson(vjson, [])\r\n\r\n    // 将 yvanProp 合并至当前 Ctl 对象\r\n    _.assign(that, yvanProp)\r\n\r\n    _.merge(vjson, that._webixConfig, {\r\n      editable: true,\r\n      stringResult: true,\r\n      view: 'datepicker',\r\n      ...baseConfig,\r\n      on: {}\r\n    })\r\n\r\n    return that\r\n  }\r\n\r\n  /*============================ 公共属性部分 ============================*/\r\n  /**\r\n   * 设置值 (如果不符合规定的格式 会清空)\r\n   */\r\n  set value(nv: any) {\r\n    if (!this._webix) {\r\n      this._webixConfig.value = nv\r\n    } else {\r\n      this._webix.setValue(nv)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取值(可能取到空值)\r\n   */\r\n  get value(): any {\r\n    const value = this._webix ? this._webix.getValue() : this._webixConfig.value\r\n    if (this.vjson.view === 'datetime') {\r\n      // 日期+时间输入\r\n      return _.toString(value).substr(0, 19)\r\n    } else {\r\n      // 日期输入\r\n      return _.toString(value).substr(0, 10)\r\n    }\r\n  }\r\n\r\n  /*============================ 私有部分 ============================*/\r\n\r\n  //更改 onChange 或实体时的值\r\n  protected valueProcess(value: any): any {\r\n    const moment: any = _.get(window, 'moment')\r\n    if (_.isDate(value)) {\r\n      value = moment(value)\r\n\r\n      if (this.vjson.view === 'datetime') {\r\n        // 日期+时间输入\r\n        value = value.isValid() ? value.format('YYYY-MM-DD HH:mm:ss') : ''\r\n      } else {\r\n        // 日期输入\r\n        value = value.isValid() ? value.format('YYYY-MM-DD') : ''\r\n      }\r\n\r\n      return value\r\n    }\r\n    return value\r\n  }\r\n}\r\n","import { CtlInput } from './CtlInput'\r\nimport { parseYvanPropChangeVJson } from '../../CtlUtils'\r\nimport {\r\n  CtlDateRangeDefault,\r\n  CtlDateTimeRangeDefault\r\n} from '../../CtlDefaultValue'\r\n\r\nexport class CtlDateRangePicker extends CtlInput<CtlDateRangePicker> {\r\n  static create(vjson: any): CtlDateRangePicker {\r\n    const that = new CtlDateRangePicker(vjson)\r\n\r\n    const baseConfig: any = {}\r\n    if (vjson.view === 'datetimerange') {\r\n      // 日期+时间输入\r\n      baseConfig.format = '%Y-%m-%d %H:%i:%s'\r\n      baseConfig.timepicker = true\r\n      _.defaultsDeep(vjson, CtlDateTimeRangeDefault)\r\n    } else {\r\n      // 日期输入\r\n      baseConfig.format = '%Y-%m-%d'\r\n      baseConfig.timepicker = false\r\n      _.defaultsDeep(vjson, CtlDateRangeDefault)\r\n    }\r\n\r\n    // 基础属性先执行\r\n    that._create(vjson, that)\r\n\r\n    const yvanProp = parseYvanPropChangeVJson(vjson, [\r\n      'value',\r\n      'separator',\r\n      'entityNameStart',\r\n      'entityNameEnd'\r\n    ])\r\n\r\n    // 将 yvanProp 合并至当前 Ctl 对象\r\n    _.assign(that, yvanProp)\r\n\r\n    _.merge(vjson, that._webixConfig, {\r\n      editable: true,\r\n      stringResult: true,\r\n      view: 'daterangepicker',\r\n      ...baseConfig,\r\n      on: {}\r\n    })\r\n\r\n    return that\r\n  }\r\n\r\n  /*============================ 公共部分 ============================*/\r\n  entityNameStart: string = ''\r\n  entityNameEnd: string = ''\r\n\r\n  get separator(): string {\r\n    if (!this._webix) {\r\n      return this._webixConfig.separator\r\n    }\r\n    return this._webix.config['separator']\r\n  }\r\n\r\n  set separator(nv: string) {\r\n    if (!this._webix) {\r\n      this._webixConfig.separator = nv\r\n    } else {\r\n      this._webix.define('separator', nv)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 设置值 (如果不符合规定的格式 会清空)\r\n   */\r\n  set value(nv: any) {\r\n    if (!this._webix) {\r\n      if (typeof nv === 'string') {\r\n        const [start, end] = nv.split(this.separator)\r\n        this._webixConfig.value = { start, end }\r\n      } else {\r\n        this._webixConfig.value = nv\r\n      }\r\n    } else {\r\n      let value: any = nv\r\n      if (typeof nv === 'string') {\r\n        const [start, end] = nv.split(this.separator)\r\n        value = { start, end }\r\n      }\r\n      this._webix.setValue(value)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取值(可能取到空值)\r\n   */\r\n  get value(): any {\r\n    const value = this._webix ? this._webix.getValue() : this._webixConfig.value\r\n    if (!value) {\r\n      return ''\r\n    }\r\n    const { start, end } = value\r\n    return start + this.separator + end\r\n  }\r\n\r\n  /*============================ 私有部分 ============================*/\r\n\r\n  //是否允许触发 onChange\r\n  protected valueValid(value: any): boolean {\r\n    const moment: any = _.get(window, 'moment')\r\n\r\n    if (_.isPlainObject(value)) {\r\n      let { start, end } = value\r\n      if (!moment(start).isValid() || !moment(end).isValid()) {\r\n        return false\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  //更改 onChange 或实体时的值\r\n  protected valueProcess(value: any): any {\r\n    const moment: any = _.get(window, 'moment')\r\n    if (_.isPlainObject(value)) {\r\n      let { start, end } = value\r\n      start = moment(start)\r\n      end = moment(end)\r\n\r\n      if (this.vjson.view === 'datetimerange') {\r\n        // 日期+时间输入\r\n        start = start.isValid() ? start.format('YYYY-MM-DD HH:mm:ss') : ''\r\n        end = end.isValid() ? end.format('YYYY-MM-DD HH:mm:ss') : ''\r\n      } else {\r\n        // 日期输入\r\n        start = start.isValid() ? start.format('YYYY-MM-DD') : ''\r\n        end = end.isValid() ? end.format('YYYY-MM-DD') : ''\r\n      }\r\n\r\n      if (this.entityNameStart) {\r\n        // 带 entityNameStart 实体绑定\r\n        _.set(this._module, this.entityNameStart, start)\r\n      }\r\n\r\n      if (this.entityNameEnd) {\r\n        // 带 entityNameEnd 实体绑定\r\n        _.set(this._module, this.entityNameEnd, end)\r\n      }\r\n\r\n      return start + this.separator + end\r\n    }\r\n    return value\r\n  }\r\n}\r\n","import { CtlBase } from '../CtlBase'\r\nimport { parseYvanPropChangeVJson } from '../CtlUtils'\r\n\r\nexport class CtlForm extends CtlBase<CtlForm> {\r\n  static create(vjson: any): CtlForm {\r\n    const that = new CtlForm(vjson)\r\n\r\n    if (vjson.hasOwnProperty('debugger')) {\r\n      debugger\r\n    }\r\n\r\n    const yvanProp = parseYvanPropChangeVJson(vjson, [])\r\n\r\n    // 将 vjson 存至 _webix (此时 _webix 还只是 vjson 代理对象)\r\n    that._webixConfig = vjson\r\n\r\n    // 将 yvanProp 合并至当前 Ctl 对象\r\n    _.assign(that, yvanProp)\r\n\r\n    // 将 yvanProxy 版的 _webix 合并至 webixProp, 最终合并至 vjson\r\n    _.merge(vjson, that._webixConfig, {\r\n      on: {\r\n        onInited: function(this: any) {\r\n          that.attachHandle(this)\r\n        },\r\n        onAfterLoad: function(this: any) {\r\n          that.attachHandle(this)\r\n        },\r\n        onBeforeLoad: function(this: any) {\r\n          that.attachHandle(this)\r\n        },\r\n        onChange: function(this: any) {\r\n          that.attachHandle(this)\r\n        },\r\n        onViewShow: function(this: any) {\r\n          that.attachHandle(this)\r\n        },\r\n        onDestruct: function() {\r\n          that.removeHandle()\r\n        }\r\n      }\r\n    })\r\n\r\n    return that\r\n  }\r\n\r\n  setValues(data: any) {\r\n    this._webix.setValues(data)\r\n  }\r\n}\r\n","import { CtlInput } from '../input/CtlInput'\r\nimport { parseYvanPropChangeVJson } from '../../CtlUtils'\r\nimport { CtlMultiComboDefault } from '../../CtlDefaultValue'\r\nimport { getFirstPinyin } from '../../Utils'\r\n\r\nexport class CtlMultiCombo extends CtlInput<CtlMultiCombo> {\r\n  static create(vjson: any): CtlMultiCombo {\r\n    const that = new CtlMultiCombo(vjson)\r\n\r\n    _.defaultsDeep(vjson, CtlMultiComboDefault)\r\n\r\n    // 基础属性先执行\r\n    that._create(vjson, that)\r\n\r\n    const yvanProp = parseYvanPropChangeVJson(vjson, ['options'])\r\n\r\n    // 将 yvanProp 合并至当前 Ctl 对象\r\n    _.assign(that, yvanProp)\r\n\r\n    _.merge(vjson, that._webixConfig)\r\n\r\n    return that\r\n  }\r\n\r\n  /**\r\n   * 修改下拉选项\r\n   */\r\n  set options(nv: any[]) {\r\n    const options: any = {\r\n      filter(item: any, filterWord: string) {\r\n        if (_.size(filterWord) <= 0) {\r\n          return true\r\n        }\r\n        const nodePy = getFirstPinyin(item.text).toLowerCase()\r\n        return (\r\n          nodePy.indexOf(filterWord.toLowerCase()) >= 0 ||\r\n          item.text.indexOf(filterWord) >= 0\r\n        )\r\n      },\r\n      body: {\r\n        template: '#text#',\r\n        type: {\r\n          height: 36\r\n        },\r\n        data: nv\r\n      }\r\n    }\r\n\r\n    if (!this._webix) {\r\n      _.merge(this._webixConfig, {\r\n        view: 'multicombo',\r\n        options\r\n      })\r\n      return\r\n    }\r\n    this._webix.define('options', options)\r\n    this._webix.refresh()\r\n  }\r\n\r\n  /**\r\n   * 修改下拉选项\r\n   */\r\n  set dataReal(nv: any[]) {\r\n    this.options = nv\r\n  }\r\n\r\n  /**\r\n   * 值分隔符\r\n   */\r\n  get separator(): string {\r\n    if (!this._webix) {\r\n      return this._webixConfig.separator\r\n    }\r\n    return this._webix.config['separator']\r\n  }\r\n\r\n  /**\r\n   * 值分隔符\r\n   */\r\n  set separator(nv: string) {\r\n    if (!this._webix) {\r\n      this._webixConfig.separator = nv\r\n    } else {\r\n      this._webix.define('separator', nv)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 设置值 (如果不符合规定的格式 会清空)\r\n   */\r\n  set value(nv: any) {\r\n    if (!this._webix) {\r\n      this._webixConfig.value = nv\r\n    } else {\r\n      this._webix.setValue(nv)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取值(可能取到空值)\r\n   */\r\n  get value(): any {\r\n    return this._webix.getValue()\r\n  }\r\n}\r\n","import { parseYvanPropChangeVJson } from '../../CtlUtils'\r\nimport { YvEventDispatch, YvEvent } from '../../YvanEvent'\r\nimport { BaseDialog } from '../../YvanUIModule'\r\nimport { CtlSearchDefault } from '../../CtlDefaultValue'\r\nimport { CtlInput } from './CtlInput'\r\n\r\n/**\r\n * search widget 接口配置\r\n */\r\ninterface WidgetOption {\r\n  /**\r\n   * 要弹出的 widget 窗口实例\r\n   */\r\n  content: any\r\n\r\n  /**\r\n   * 默认要 子对话框带的参数\r\n   */\r\n  params: any\r\n\r\n  /**\r\n   * 写会数据时所带的映射关系\r\n   */\r\n  bind?: {\r\n    /**\r\n     * 本模块的实体对象+属性名 = 弹出框附属的属性名\r\n     */\r\n    [name: string]: string\r\n  }\r\n\r\n  /**\r\n   * 读取数据时的回调\r\n   */\r\n  onLoadData?: YvEvent<CtlSearch, void>\r\n  /**\r\n   * 回写时的回调\r\n   */\r\n  onConfirm?: YvEvent<CtlSearch, any>\r\n  /**\r\n   * 清空时的回调\r\n   */\r\n  onClear?: YvEvent<CtlSearch, void>\r\n}\r\n\r\nexport class CtlSearch extends CtlInput<CtlSearch> {\r\n  static create(vjson: any): CtlSearch {\r\n    const that = new CtlSearch(vjson)\r\n\r\n    _.defaultsDeep(vjson, CtlSearchDefault)\r\n\r\n    // 基础属性先执行\r\n    that._create(vjson, that)\r\n\r\n    const yvanProp = parseYvanPropChangeVJson(vjson, ['widget', 'value'])\r\n\r\n    // 将 vjson 存至 _webix (此时 _webix 还只是 vjson 代理对象)\r\n    that._webixConfig = vjson\r\n\r\n    if (!vjson.id) {\r\n      that.id = _.uniqueId('input_')\r\n    }\r\n\r\n    // 将 yvanProp 合并至当前 Ctl 对象\r\n    _.assign(that, yvanProp)\r\n\r\n    _.merge(vjson, that._webixConfig, {\r\n      on: {\r\n        onInited(this: any) {\r\n          that.attachHandle(this)\r\n          that._refreshIcon()\r\n        },\r\n        // onAfterRender(this: any) {\r\n        //     const $dom: any = $(this.$view);\r\n        //     $dom.on('keydown', (event: KeyboardEvent) => {\r\n        //         if (event.keyCode === 13) {\r\n        //             // 从键盘响应查询\r\n        //             event.stopPropagation();\r\n        //             event.preventDefault();\r\n        //\r\n        //             that.suppressRestore = true;\r\n        //             that._searchRequest(that._webix.getValue(), that.valueOrigin);\r\n        //             return;\r\n        //         }\r\n        //\r\n        //         YvEventDispatch(this.onKeydown, this, event);\r\n        //     });\r\n        // },\r\n        onEnter() {\r\n          // 从键盘响应查询\r\n          that.suppressRestore = true\r\n          that._searchRequest(that._webix.getValue(), that.valueOrigin)\r\n        },\r\n        onFocus(this: any) {\r\n          //进入焦点时，用户输入的值既为有效值\r\n          that.valueOrigin = that._webix.getValue()\r\n          YvEventDispatch(that.onFocus, that, undefined)\r\n        },\r\n        onBlur(this: any) {\r\n          //离开焦点时，用户输入的置为无效\r\n          if (!that.suppressRestore) {\r\n            that._webix.setValue(that.valueOrigin)\r\n          }\r\n          YvEventDispatch(that.onBlur, that, undefined)\r\n        },\r\n        // onDestruct(this: any) {\r\n        //     const $dom: any = $(this.$view);\r\n        //     $dom.off('keydown');\r\n        // },\r\n        onSearchIconClick(e: Event) {\r\n          // 从鼠标响应查询\r\n          e.stopPropagation()\r\n          e.preventDefault()\r\n\r\n          const $span = $(e.target as any)\r\n          if ($span.hasClass('wxi-close')) {\r\n            // 清空\r\n            that.clear()\r\n          } else {\r\n            // 查询\r\n            that.suppressRestore = true\r\n            that._searchRequest(that._webix.getValue(), that.valueOrigin)\r\n          }\r\n        }\r\n      }\r\n    })\r\n\r\n    return that\r\n  }\r\n\r\n  /*============================ 公共属性部分 ============================*/\r\n\r\n  /**\r\n   * 弹框配置\r\n   */\r\n  widget?: WidgetOption\r\n\r\n  /**\r\n   * 清空值\r\n   */\r\n  clear() {\r\n    if (!this.widget) {\r\n      return\r\n    }\r\n\r\n    YvEventDispatch(this.widget.onClear, this, undefined)\r\n\r\n    //清空\r\n    _.forOwn(this.widget.bind, (value, key) => {\r\n      _.set(this._module, key, '')\r\n    })\r\n  }\r\n\r\n  get value(): string | undefined {\r\n    if (!this._webix) {\r\n      return this._webixConfig.value\r\n    }\r\n    return this.valueOrigin\r\n  }\r\n\r\n  set value(nv: string | undefined) {\r\n    if (!this._webix) {\r\n      this._webixConfig.value = nv\r\n    } else {\r\n      this._webix.setValue(nv)\r\n      this.valueOrigin = nv\r\n    }\r\n\r\n    YvEventDispatch(this.onChange, this, nv)\r\n    this._refreshIcon()\r\n  }\r\n\r\n  _refreshIcon() {\r\n    const value = this._webix ? this._webix.getValue() : this._webixConfig.value\r\n    const icon = value ? 'wxi-close' : 'wxi-search'\r\n    let $span: any = this._webix ? $(this._webix.$view).find('span') : undefined\r\n\r\n    if (!$span || $span.length <= 0) {\r\n      if (this._webix) {\r\n        this._webix.define('icon', icon)\r\n      } else {\r\n        this._webixConfig.icon = icon\r\n      }\r\n    } else {\r\n      $span\r\n        .removeClass('wxi-close')\r\n        .removeClass('wxi-search')\r\n        .addClass(icon)\r\n    }\r\n  }\r\n\r\n  /*============================ 私有部分 ============================*/\r\n  // 原始值\r\n  private valueOrigin?: string = undefined\r\n  //抑制还原动作\r\n  private suppressRestore: boolean = false\r\n\r\n  /**\r\n   * 进入查询框\r\n   */\r\n  _searchRequest(queryValue: any, restoreValue: any) {\r\n    queryValue = _.toString(queryValue)\r\n    const searchCtl = this\r\n\r\n    if (!searchCtl.widget) {\r\n      console.error('没有设置 widget 属性')\r\n      return\r\n    }\r\n\r\n    const widgetParamter: any = {\r\n      query: queryValue,\r\n      params: searchCtl.widget.params\r\n    }\r\n\r\n    //构造查询的对象\r\n    //从 bind 获取\r\n    const queryObj = {}\r\n    _.forOwn(searchCtl.widget.bind, (value, key) => {\r\n      _.set(queryObj, value, _.get(this._module, key))\r\n    })\r\n\r\n    widgetParamter.existObject = queryObj\r\n\r\n    widgetParamter.onWidgetConfirm = function(data: any) {\r\n      if (!searchCtl.widget) {\r\n        console.error('没有设置 widget 属性')\r\n        return\r\n      }\r\n\r\n      YvEventDispatch(searchCtl.widget.onConfirm, searchCtl, undefined)\r\n\r\n      //写回\r\n      _.forOwn(searchCtl.widget.bind, (value, key) => {\r\n        _.set(searchCtl._module, key, _.get(data, value))\r\n      })\r\n\r\n      this.closeDialog()\r\n      searchCtl.focus()\r\n    }\r\n    widgetParamter.onClose = function() {\r\n      //弹窗关闭后恢复原值，并开启还原\r\n      searchCtl.value = restoreValue\r\n      searchCtl.suppressRestore = false\r\n      searchCtl.focus()\r\n    }\r\n    const dlg: BaseDialog<any, any, any> = new searchCtl.widget.content()\r\n    dlg.showDialog(widgetParamter, searchCtl._module, true)\r\n    // YvanUI.showDialogWidget(this, new searchCtl.widget.content(), widgetParamter);\r\n  }\r\n}\r\n","import { CtlBase } from './CtlBase'\r\nimport { parseYvanPropChangeVJson } from './CtlUtils'\r\nimport { YvEvent, YvEventDispatch } from './YvanEvent'\r\n\r\nexport class CtlCarousel extends CtlBase<CtlCarousel> {\r\n  onShow?: YvEvent<CtlCarousel, string>\r\n\r\n  static create(vjson: any): CtlCarousel {\r\n    const that = new CtlCarousel(vjson)\r\n\r\n    const yvanProp = parseYvanPropChangeVJson(vjson, ['onShow'])\r\n\r\n    // 将 vjson 存至 _webix (此时 _webix 还只是 vjson 代理对象)\r\n    that._webixConfig = vjson\r\n\r\n    // 将 yvanProp 合并至当前 Ctl 对象\r\n    _.assign(that, yvanProp)\r\n\r\n    _.merge(vjson, that._webixConfig, {\r\n      on: {\r\n        onInited() {\r\n          that.attachHandle(this)\r\n        },\r\n        onDestruct: function() {\r\n          that.removeHandle()\r\n        },\r\n        onShow: function(this: any) {\r\n          const value = this.getActiveIndex()\r\n          YvEventDispatch(that.onShow, that, value)\r\n        }\r\n      }\r\n    })\r\n    return that\r\n  }\r\n}\r\n","const CtlGridLocale: any = {\r\n    rownumber: \" \",\r\n    page: \"页\",\r\n    more: \"更多\",\r\n    to: \"到\",\r\n    of: \"of\",\r\n    next: \"下一页\",\r\n    last: \"上一页\",\r\n    first: \"首页\",\r\n    previous: \"上一页\",\r\n    loadingOoo: \"加载中...\",\r\n    selectAll: \"查询全部\",\r\n    searchOoo: \"查询...\",\r\n    blanks: \"空白\",\r\n    filterOoo: \"过滤...\",\r\n    applyFilter: \"确定\",\r\n    clearFilter: \"清空\",\r\n    equals: \"相等\",\r\n    notEqual: \"不相等\",\r\n    lessThan: \"小于\",\r\n    greaterThan: \"大于\",\r\n    lessThanOrEqual: \"小于等于\",\r\n    greaterThanOrEqual: \"大于等于\",\r\n    inRange: \"范围查询\",\r\n    contains: \"包含\",\r\n    notContains: \"不包含\",\r\n    startsWith: \"开始于\",\r\n    endsWith: \"结束于\",\r\n    group: \"组\",\r\n    columns: \"列\",\r\n    filters: \"筛选\",\r\n    rowGroupColumns: \"laPivot Cols\",\r\n    rowGroupColumnsEmptyMessage: \"la drag cols to group\",\r\n    valueColumns: \"laValue Cols\",\r\n    pivotMode: \"laPivot-Mode\",\r\n    groups: \"laGroups\",\r\n    values: \"值\",\r\n    pivots: \"laPivots\",\r\n    valueColumnsEmptyMessage: \"la drag cols to aggregate\",\r\n    pivotColumnsEmptyMessage: \"la drag here to pivot\",\r\n    toolPanelButton: \"la tool panel\",\r\n    noRowsToShow: \"数据为空\",\r\n    pinColumn: \"laPin Column\",\r\n    valueAggregation: \"laValue Agg\",\r\n    autosizeThiscolumn: \"laAutosize Diz\",\r\n    autosizeAllColumns: \"laAutsoie em All\",\r\n    groupBy: \"排序\",\r\n    ungroupBy: \"不排序\",\r\n    resetColumns: \"重置列\",\r\n    expandAll: \"展开全部\",\r\n    collapseAll: \"关闭\",\r\n    toolPanel: \"工具面板\",\r\n    export: \"导出\",\r\n    csvExport: \"导出为CSV格式文件\",\r\n    excelExport: \"导出到Excel\",\r\n    pinLeft: \"laPin &lt;&lt;\",\r\n    pinRight: \"laPin &gt;&gt;\",\r\n    noPin: \"laDontPin &lt;&gt;\",\r\n    sum: \"总数\",\r\n    min: \"最小值\",\r\n    max: \"最大值\",\r\n    none: \"无\",\r\n    count: \"总\",\r\n    average: \"平均值\",\r\n    copy: \"复制\",\r\n    copyWithHeaders: \"携带表头复制\",\r\n    ctrlC: \"ctrl + C\",\r\n    paste: \"粘贴\",\r\n    ctrlV: \"ctrl + V\"\r\n};\r\n\r\nexport default CtlGridLocale\r\n","import { CtlGrid } from './CtlGrid'\r\n\r\nexport class CtlGridPage {\r\n  public grid: CtlGrid\r\n\r\n  public getPageData!: (currentPage: number, pageSize: number) => {}\r\n\r\n  private _currentPage: number = 1\r\n\r\n  private _pageSize: number = 100\r\n\r\n  private _pageCount: number = 0\r\n\r\n  private _itemCount: number = 0\r\n\r\n  get currentPage() {\r\n    return this._currentPage\r\n  }\r\n  set currentPage(cp: number) {\r\n    this._currentPage = cp\r\n    if (this._currentPage > this._pageCount) {\r\n      this._currentPage = this._pageCount\r\n    }\r\n    if (this._currentPage <= 0 && this._pageCount > 0) {\r\n      this._currentPage = 1\r\n    }\r\n    this.refreshPageViewInfo()\r\n  }\r\n\r\n  get pageSize() {\r\n    return this._pageSize\r\n  }\r\n  set pageSize(ps: number) {\r\n    if (ps <= 0) {\r\n      return\r\n    }\r\n\r\n    this._pageSize = ps\r\n    this.refreshPageViewInfo()\r\n  }\r\n\r\n  get pageCount() {\r\n    return this._pageCount\r\n  }\r\n\r\n  get itemCount() {\r\n    return this._itemCount\r\n  }\r\n\r\n  set itemCount(ic: number) {\r\n    this._itemCount = ic\r\n    this.refreshPageViewInfo()\r\n  }\r\n\r\n  public refreshGrid() {\r\n    this.getPageData(1, this.pageSize)\r\n  }\r\n\r\n  private firstButtomDom: any\r\n  private prevButtomDom: any\r\n  private nextButtomDom: any\r\n  private lastButtomDom: any\r\n  private currenpageDom: any\r\n  private gridpagerDom: any\r\n  private itemcountDom: any\r\n  private pageSizeDom: any\r\n  private gridpagerLeft: any\r\n  private gridpagerRight: any\r\n  private gridpagerCenter: any\r\n\r\n  constructor(grid: CtlGrid) {\r\n    this.grid = grid\r\n    this._pageSize = this.grid.pageSize\r\n\r\n    /** 找到aggrid 自带的pageview 替换子dom节点 **/\r\n\r\n    var dom = this.grid.webix.$view.getElementsByClassName(\r\n      'ag-paging-panel ag-unselectable'\r\n    )\r\n    var su_id = this.grid.webix.config.id\r\n    if (dom.length <= 0) {\r\n      return\r\n    }\r\n    /** 显示底部分页栏 **/\r\n    dom[0].className = 'ag-paging-panel ag-unselectable'\r\n\r\n    dom[0].innerHTML =\r\n      '<div id=\"wwww\" role=\"group\">' +\r\n      '    <table class=\"ui-pg-table\" style=\"width:100%;table-layout:fixed;height:100%;\">' +\r\n      '        <tbody><tr>' +\r\n      '            <td id=\"gridpager_left_' +\r\n      su_id +\r\n      '\" style=\"display: none\"></td>' +\r\n      '            <td id=\"gridpager_center_' +\r\n      su_id +\r\n      '\">' +\r\n      '                <table style=\"table-layout:auto;white-space: pre;margin-left:0;margin-right:auto;\">' +\r\n      '                    <tbody><tr>' +\r\n      '                        <td role=\"button\" tabindex=\"0\" class=\"ctl-grid-page ui-pg-button\" title=\"First Page\" style=\"cursor: default;\"><span id=\"first_' +\r\n      su_id +\r\n      '\" class=\"ctl-grid-page ui-icon fa fa-angle-double-left\"></span></td>' +\r\n      '                        <td role=\"button\" tabindex=\"0\" class=\"ctl-grid-page ui-pg-button\" title=\"Previous Page\" style=\"cursor: default;\"><span id=\"prev_' +\r\n      su_id +\r\n      '\" class=\"ctl-grid-page ui-icon fa fa-angle-left\"></span></td>' +\r\n      '                        <td><span style=\"color: #c0c0c0\">|</span></td>\\n' +\r\n      '                        <td dir=\"ltr\"><input aria-label=\"Page No.\" id=\"currenpage_' +\r\n      su_id +\r\n      '\" type=\"text\" size=\"2\" maxlength=\"7\" value=\"0\"> 共 <span id=\"gridpager_' +\r\n      su_id +\r\n      '\">219</span> 页 </td>' +\r\n      '                        <td><span style=\"color: #c0c0c0\">|</span></td>\\n' +\r\n      '                        <td role=\"button\" tabindex=\"0\" class=\"ctl-grid-page ui-pg-button\" title=\"Next Page\" style=\"cursor: default;\"><span id=\"next_' +\r\n      su_id +\r\n      '\" class=\"ctl-grid-page ui-icon fa fa-angle-right\"></span></td>' +\r\n      '                        <td role=\"button\" tabindex=\"0\" class=\"ctl-grid-page ui-pg-button\" title=\"Last Page\" style=\"cursor: default;\"><span id=\"last_' +\r\n      su_id +\r\n      '\" class=\"ctl-grid-page ui-icon fa fa-angle-double-right\"></span></td>' +\r\n      '                        <td dir=\"ltr\"><select id=\"pagesize_' +\r\n      su_id +\r\n      '\" title=\"Records per Page\"><option value=\"20\" selected=\"selected\">20</option><option value=\"50\">50</option><option value=\"100\">100</option><option value=\"200\">200</option><option value=\"500\">500</option><option value=\"1000\">1000</option></select></td>' +\r\n      '                    </tr></tbody>' +\r\n      '                </table>' +\r\n      '            </td>' +\r\n      '            <td id=\"gridpager_right_' +\r\n      su_id +\r\n      '\" style=\"text-align:right;\">' +\r\n      '               <span dir=\"ltr\" style=\"text-align:right\" id=\"itemcount_' +\r\n      su_id +\r\n      '\">41 - 60　共 4,367 条</span>' +\r\n      '            </td>' +\r\n      '        </tr></tbody>' +\r\n      '    </table>' +\r\n      '</div>'\r\n\r\n    this.firstButtomDom = document.getElementById('first_' + su_id)\r\n    this.prevButtomDom = document.getElementById('prev_' + su_id)\r\n    this.nextButtomDom = document.getElementById('next_' + su_id)\r\n    this.lastButtomDom = document.getElementById('last_' + su_id)\r\n    this.currenpageDom = document.getElementById('currenpage_' + su_id)\r\n    this.gridpagerDom = document.getElementById('gridpager_' + su_id)\r\n    this.itemcountDom = document.getElementById('itemcount_' + su_id)\r\n    this.pageSizeDom = document.getElementById('pagesize_' + su_id)\r\n    this.gridpagerCenter = document.getElementById('gridpager_center_' + su_id)\r\n    this.gridpagerLeft = document.getElementById('gridpager_left_' + su_id)\r\n    this.gridpagerRight = document.getElementById('gridpager_right_' + su_id)\r\n\r\n    if (this.grid.pagination) {\r\n      this.gridpagerCenter.style.display = ''\r\n    } else {\r\n      this.gridpagerCenter.style.display = 'none'\r\n    }\r\n\r\n    this.refreshPageViewInfo()\r\n\r\n    var me = this\r\n\r\n    this.currenpageDom.onkeydown = function(event: any) {\r\n      if (event.keyCode === 13) {\r\n        // enter键\r\n        let cp = parseInt(event.srcElement.value)\r\n        if (cp > me.pageCount) {\r\n          cp = me.pageCount\r\n        }\r\n        if (cp <= 0) {\r\n          cp = 1\r\n        }\r\n        me.getPageData(cp, me.pageSize)\r\n      } else {\r\n        if (event.keyCode !== 8 && (event.keyCode < 48 || event.keyCode > 57)) {\r\n          return false\r\n        }\r\n      }\r\n    }\r\n\r\n    this.pageSizeDom.onchange = function(v: any) {\r\n      me.pageSize = v.srcElement.value\r\n      me.grid.paginationSetPageSize(me.pageSize)\r\n      if (typeof me.getPageData === 'function') {\r\n        me.getPageData(1, me.pageSize)\r\n      }\r\n    }\r\n\r\n    var buttons = dom[0].getElementsByClassName('ctl-grid-page ui-icon')\r\n    var buttons1 = dom[0].getElementsByClassName(\r\n      'ctl-grid-page ui-icon-disable'\r\n    )\r\n    buttons = _.union(buttons, buttons1)\r\n    _.each(buttons, button => {\r\n      button.onclick = function(q: any) {\r\n        for (let i = 0; i < q.srcElement.classList.length; i++) {\r\n          if (q.srcElement.classList[i] === 'ui-icon-disable') {\r\n            return\r\n          }\r\n        }\r\n        const pre = _.split(q.srcElement.id, '_' + me.grid.webix.config.id)\r\n\r\n        let cp = me.currentPage\r\n        switch (pre[0]) {\r\n          case 'first': {\r\n            cp = 1\r\n            break\r\n          }\r\n          case 'prev': {\r\n            if (cp > 1) {\r\n              cp -= 1\r\n            }\r\n            break\r\n          }\r\n          case 'next': {\r\n            if (cp < me.pageCount) {\r\n              cp += 1\r\n            }\r\n            break\r\n          }\r\n          case 'last': {\r\n            cp = me.pageCount\r\n            me.disableButton(q.srcElement)\r\n            break\r\n          }\r\n        }\r\n\r\n        if (typeof me.getPageData === 'function') {\r\n          me.getPageData(cp, me.pageSize)\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  private disableButton(element: any) {\r\n    if (element.className.includes('ui-icon-disable')) {\r\n      return\r\n    }\r\n    element.className = _.replace(\r\n      element.className,\r\n      'ui-icon',\r\n      'ui-icon-disable'\r\n    )\r\n  }\r\n\r\n  private activeButton(element: any) {\r\n    if (\r\n      !element.className.includes('ui-icon-disable') &&\r\n      element.className.includes('ui-icon')\r\n    ) {\r\n      return\r\n    }\r\n    element.className = _.replace(\r\n      element.className,\r\n      'ui-icon-disable',\r\n      'ui-icon'\r\n    )\r\n  }\r\n\r\n  private refreshPageViewInfo() {\r\n    if (this.grid.pagination) {\r\n      if (this._itemCount > 0 && this._pageSize > 0) {\r\n        this._pageCount = Math.ceil(this._itemCount / this._pageSize)\r\n      }\r\n\r\n      this.pageSizeDom.value = this._pageSize\r\n      this.currenpageDom.value = this._currentPage\r\n      this.gridpagerDom.innerText = this._pageCount\r\n\r\n      if (this.currentPage <= 0) {\r\n        this.itemcountDom.innerText = '0 - 0　共 0 条'\r\n      } else {\r\n        let min = (this.currentPage - 1) * this.pageSize + 1\r\n        let max = this.currentPage * this.pageSize\r\n\r\n        if (min > this._itemCount) {\r\n          min = this._itemCount\r\n        }\r\n        if (max > this._itemCount) {\r\n          max = this._itemCount\r\n        }\r\n        this.itemcountDom.innerText =\r\n          min + ' - ' + max + '  共 ' + this.itemCount + ' 条'\r\n      }\r\n\r\n      if (this.currentPage > 1) {\r\n        this.activeButton(this.firstButtomDom)\r\n        this.activeButton(this.prevButtomDom)\r\n      } else {\r\n        this.disableButton(this.firstButtomDom)\r\n        this.disableButton(this.prevButtomDom)\r\n      }\r\n\r\n      if (this.currentPage < this.pageCount) {\r\n        this.activeButton(this.nextButtomDom)\r\n        this.activeButton(this.lastButtomDom)\r\n      } else {\r\n        this.disableButton(this.nextButtomDom)\r\n        this.disableButton(this.lastButtomDom)\r\n      }\r\n    } else {\r\n      this.itemcountDom.innerText = '共 ' + this.itemCount + ' 条'\r\n    }\r\n  }\r\n}\r\n","export default function (params: any, grid?: any) {\r\n    if (params.node.cstate) {\r\n        if (params.node.cstate === 'validate' || params.node.cstate === 'pending') {\r\n            return '<i class=\"fa fa-spinner fa-spin\"></i>'\r\n        }\r\n\r\n        if (params.node.cstate === 'editing') {\r\n            return '<i class=\"fa fa-edit\"></i>'\r\n        }\r\n\r\n        if (params.node.cstate === 'ok') {\r\n            return '<i class=\"fa fa-check\" style=\"color: green;\"></i>'\r\n        }\r\n\r\n        if (params.node.cstate === 'error') {\r\n            return '<i class=\"fa fa-exclamation-circle\" style=\"color: red;\"></i>'\r\n        }\r\n    }\r\n\r\n    if (params.node.rowPinned === 'top') {\r\n        return '+'\r\n    }\r\n\r\n    if (_.size(params.data) <= 0) {\r\n        //数据还没刷出来\r\n        return '<i class=\"fa fa-spinner fa-spin\"></i>'\r\n    }\r\n    if (grid && grid.pagination && grid.gridPage) {\r\n        return 1 + params.node.rowIndex + grid.gridPage.pageSize * (grid.gridPage.currentPage - 1);\r\n    }\r\n    return 1 + params.node.rowIndex\r\n}\r\n","export const YvGridProp: any = {\r\n    editable: false,\r\n    checkbox: false,\r\n    editSingleClick: true,\r\n    allowNewRow: true,\r\n    filterable: true,\r\n    loading: false,\r\n    showRowNumber: true,\r\n    autoSizeColumns: false,\r\n    allowCellSelection: false,\r\n    allowRowSelection: true,\r\n    idField: undefined,\r\n    valueSep: true,\r\n    saveOn: 'rowChanged',\r\n    newRowData: undefined,\r\n    stopEditingWhenGridLosesFocus: false,\r\n    columns: [],\r\n    columnGroup: [],\r\n    data: undefined\r\n};\r\n\r\nexport const YvGridColumnProp: any = {\r\n    hidden: false,\r\n    field: '',\r\n    title: '',\r\n    width: undefined,\r\n    maxwidth: 800,\r\n    minwidth: 0,\r\n    sortable: false,\r\n    resizable: true,\r\n    editable: false,\r\n    filterable: false,\r\n    calcExpr: undefined,\r\n    editMode: 'text'\r\n};\r\n\r\nexport const YvGridColumnEditProp: any = {\r\n    widget: undefined,\r\n    bind: [],\r\n    on: true,\r\n    off: false,\r\n    precision: 0,\r\n    idField: 'id',\r\n    textField: 'text',\r\n    maxlength: undefined,\r\n    dateformat: 'yyyy-MM-dd',\r\n    datetimeformat: 'yyyy-MM-dd HH:mm:ss',\r\n    data: []\r\n};\r\n","export default class CtlGridCellCheckbox {\r\n\r\n    checkedToggle(vue: any, childSpan: any, id: any) {\r\n        return function () {\r\n            if (childSpan.classList.contains('checked')) {\r\n                const index = vue.checkedIds.indexOf(id)\r\n                if (index >= 0) {\r\n                    vue.checkedIds.splice(index, 1)\r\n                }\r\n                childSpan.classList.remove('checked')\r\n\r\n            } else {\r\n                vue.checkedIds.push(id)\r\n                childSpan.classList.add('checked')\r\n            }\r\n\r\n            // 观测，是否显示\"全选\"框的函数\r\n            if (vue.allCheckedBoxStateChanged) {\r\n                vue.allCheckedBoxStateChanged();\r\n            }\r\n        }\r\n    }\r\n\r\n    innerRefresh(this: any, gridOptions: any) {\r\n        const vue = gridOptions.api.vue\r\n        const data = gridOptions.data\r\n        const id = vue._getIdByRow(data)\r\n        const childSpan = this.$el.querySelectorAll('.yvan-checkbox-switch')[0]\r\n        if (!childSpan) {\r\n            return\r\n        }\r\n\r\n        if (gridOptions.isCheckedIds) {\r\n            //用来做勾选数据行用 checkedIds\r\n            if (vue.checkedIds.indexOf(id) >= 0) {\r\n                childSpan.classList.add('checked')\r\n            } else {\r\n                childSpan.classList.remove('checked')\r\n            }\r\n\r\n            // 观测，是否显示\"全选\"框的函数\r\n            if (vue.allCheckedBoxStateChanged) {\r\n                vue.allCheckedBoxStateChanged();\r\n            }\r\n\r\n        } else {\r\n            //用来做数据展示用\r\n            childSpan.classList.add('disabled')\r\n            if (typeof gridOptions.on === 'string') {\r\n                //on 是个字符串\r\n                if (gridOptions.on === '' + gridOptions.value) {\r\n                    childSpan.classList.add('checked')\r\n                }\r\n\r\n            } else if (typeof gridOptions.on === 'function') {\r\n                //on 是个函数\r\n                if (gridOptions.on.call(vue, gridOptions.value, data)) {\r\n                    childSpan.classList.add('checked')\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    init(this: any, gridOptions: any) {\r\n        this.$el = document.createElement('div')\r\n        if (gridOptions.node.rowPinned) {\r\n            //这是在添加行或结尾行的数据，不用任何展示\r\n            return\r\n        }\r\n\r\n        this.$el.classList.add('yvan-checkbox')\r\n        this.$el.innerHTML =\r\n            '<span class=\"yvan-checkbox-switch\"><span class=\"yvan-checkbox-status\"></span></span>'\r\n\r\n        this.innerRefresh(gridOptions)\r\n\r\n        const vue = gridOptions.api.vue;\r\n        const childSpan = this.$el.querySelectorAll('.yvan-checkbox-switch')[0];\r\n        const data = gridOptions.data\r\n        const id = vue._getIdByRow(data)\r\n        this.$el.addEventListener('click', this.checkedToggle(vue, childSpan, id))\r\n    }\r\n\r\n    getGui(this: any) {\r\n        return this.$el\r\n    }\r\n\r\n    destroy() {\r\n    }\r\n\r\n    refresh(gridOptions: any) {\r\n        this.innerRefresh(gridOptions)\r\n    }\r\n}\r\n","export default class CtlGridHeadCheckbox {\r\n\r\n    checkedToggle(ctlGrid: any, gridOptions: any) {\r\n        const that: any = this;\r\n        return function () {\r\n            if (ctlGrid.idField) {\r\n\r\n                const domSpan = $(that.$el).find('.yvan-checkbox-switch');\r\n                const isChecked = domSpan.is('.checked');\r\n                // 当前表格的 全部行ID\r\n                const dataIds = _.map(ctlGrid.getData(), v => _.get(v, ctlGrid.idField));\r\n\r\n                if (isChecked) {\r\n                    // 取消全选\r\n                    for (let i = 0; i < dataIds.length; i++) {\r\n                        const id = dataIds[i];\r\n                        const index = ctlGrid.checkedIds.indexOf(id)\r\n                        if (index >= 0) {\r\n                            ctlGrid.checkedIds.splice(index, 1)\r\n                        }\r\n                    }\r\n\r\n                } else {\r\n                    // 全选\r\n                    for (let i = 0; i < dataIds.length; i++) {\r\n                        const id = dataIds[i];\r\n                        if (!_.includes(ctlGrid.checkedIds, id)) {\r\n                            ctlGrid.checkedIds.push(id);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // 刷新\r\n                ctlGrid.gridApi.refreshCells({\r\n                    columns: ['__CB__'],\r\n                    force: true\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    innerRefresh(this: any, gridOptions: any) {\r\n        const ctlGrid = gridOptions.api.vue\r\n        const domSpan = $(this.$el).find('.yvan-checkbox-switch');\r\n\r\n        if (ctlGrid.idField) {\r\n            ctlGrid.allCheckedBoxStateChanged = () => {\r\n                // 当前表格的 全部行ID\r\n                const dataIds = _.map(ctlGrid.getData(), v => _.get(v, ctlGrid.idField));\r\n\r\n                let allIn = true;\r\n                for (let i = 0; i < dataIds.length; i++) {\r\n                    const id = dataIds[i];\r\n                    if (!_.includes(ctlGrid.checkedIds, id)) {\r\n                        // 不是全部都包含\r\n                        allIn = false;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                const isChecked = domSpan.is('.checked');\r\n                if (isChecked) {\r\n                    if (!allIn) {\r\n                        domSpan.removeClass('checked');\r\n                    }\r\n                } else {\r\n                    if (allIn) {\r\n                        domSpan.addClass('checked');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    init(this: any, gridOptions: any) {\r\n        this.$el = document.createElement('div')\r\n\r\n        this.$el.classList.add('yvan-checkbox')\r\n        this.$el.innerHTML =\r\n            '<span class=\"yvan-checkbox-switch\"><span class=\"yvan-checkbox-status\"></span></span>'\r\n\r\n        _.defer(() => {\r\n            const ctlGrid = gridOptions.api.vue\r\n            this.$el.addEventListener('click', this.checkedToggle(ctlGrid, gridOptions))\r\n            this.innerRefresh(gridOptions)\r\n        });\r\n\r\n        // clearInterval(this.intervalHandle)\r\n    }\r\n\r\n    getGui(this: any) {\r\n        return this.$el\r\n    }\r\n\r\n    destroy() {\r\n    }\r\n\r\n    refresh(gridOptions: any) {\r\n        this.innerRefresh(gridOptions)\r\n    }\r\n}","import * as YvanUI from './YvanUIExtend'\r\nimport {\r\n  GridDataSource,\r\n  GridDataSourceSql,\r\n  GridDataSourceStaticFunction,\r\n  WatchParam,\r\n  GetParam\r\n} from './YvanDataSourceGrid'\r\nimport { isDesignMode } from './DesignHelper'\r\n\r\nexport class YvanDataSourceGrid {\r\n  private option: GridDataSource\r\n  private ctl: any\r\n  private readonly module: any\r\n  private watches: Function[] = []\r\n  private isFirstAutoLoad: boolean = true //是否为第一次自动读取\r\n\r\n  private reload: undefined | (() => void)\r\n  private rowCount: number | undefined\r\n  private lastFilterModel: any\r\n\r\n  serverQuery = _.debounce(\r\n    (\r\n      option: GridDataSourceSql,\r\n      paramFunction: undefined | (() => any),\r\n      params: any\r\n    ) => {\r\n      const that = this\r\n\r\n      //异步请求数据内容\r\n      that.ctl.loading = true\r\n      let needCount = false\r\n      if (typeof that.rowCount === 'undefined') {\r\n        //从来没有统计过 rowCount(记录数)\r\n        needCount = true\r\n        that.lastFilterModel = _.cloneDeep(params.filterModel)\r\n      } else {\r\n        if (!_.isEqual(that.lastFilterModel, params.filterModel)) {\r\n          //深度对比，如果 filter 模型更改了，需要重新统计 rowCount(记录数)\r\n          needCount = true\r\n          that.lastFilterModel = _.cloneDeep(params.filterModel)\r\n        }\r\n      }\r\n      const queryParams = {\r\n        ...(typeof paramFunction === 'function' ? paramFunction() : undefined)\r\n      }\r\n      YvanUI.dbs[option.db]\r\n        .query({\r\n          params: queryParams,\r\n          limit: params.startRow,\r\n          limitOffset: params.endRow - params.startRow,\r\n          needCount,\r\n          orderByModel: params.sortModel,\r\n          filterModel: params.filterModel,\r\n          sqlId: option.sqlId\r\n        })\r\n        .then(res => {\r\n          const { data: resultData, totalCount, params: resParams } = res\r\n          if (needCount) {\r\n            that.rowCount = totalCount\r\n          }\r\n          params.successCallback(resultData, that.rowCount)\r\n          /** 如果不分页就在这里设置总条目数量，避免多次刷新分页栏 **/\r\n          if (!that.ctl.pagination) {\r\n            that.ctl.gridPage.itemCount = that.rowCount\r\n          }\r\n          that.ctl._bindingComplete()\r\n          if (that.ctl.entityName) {\r\n            _.set(\r\n              that.module,\r\n              that.ctl.entityName + '.selectedRow',\r\n              that.ctl.getSelectedRow()\r\n            )\r\n          }\r\n        })\r\n        .catch(r => {\r\n          params.failCallback()\r\n        })\r\n        .finally(() => {\r\n          this.ctl.loading = false\r\n        })\r\n    }\r\n  )\r\n\r\n  /**\r\n   * SQL取值\r\n   */\r\n  setSqlMode(\r\n    option: GridDataSourceSql,\r\n    paramFunction: undefined | (() => any)\r\n  ) {\r\n    const that = this\r\n    this.reload = () => {\r\n      this.ctl.loading = true\r\n      that.clearRowCount()\r\n      if (that.ctl.entityName) {\r\n        _.set(that.module, that.ctl.entityName + '.selectedRow', undefined)\r\n      }\r\n      that.ctl.gridApi.hasDataSource = true\r\n\r\n      if (that.ctl.pagination) {\r\n        /** 分页模式 **/\r\n        that.ctl.gridPage.getPageData = (\r\n          currentPage: number,\r\n          pageSize: number\r\n        ) => {\r\n          let params: any = {}\r\n          params.successCallback = (data: [], rowCount: number) => {\r\n            if (data.length > 0) {\r\n              that.ctl.setData(data)\r\n              that.ctl.gridPage.itemCount = rowCount\r\n              that.ctl.gridPage.currentPage = currentPage\r\n            }\r\n          }\r\n          params.failCallback = () => {\r\n            console.error('error')\r\n          }\r\n          params.startRow = (currentPage - 1) * pageSize\r\n          params.endRow = currentPage * pageSize\r\n          that.serverQuery(option, paramFunction, params)\r\n        }\r\n        that.ctl.gridPage.getPageData(1, that.ctl.gridPage.pageSize)\r\n      } else {\r\n        /** 无限滚动模式 **/\r\n\r\n        that.ctl.gridApi.setDatasource({\r\n          getRows: (params: any) => {\r\n            if (that.isFirstAutoLoad && that.ctl.autoLoad === false) {\r\n              that.rowCount = 0\r\n              params.successCallback([], that.rowCount)\r\n              that.ctl.loading = false\r\n              that.isFirstAutoLoad = false\r\n              return\r\n            }\r\n\r\n            that.serverQuery(option, paramFunction, params)\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    this.reload()\r\n  }\r\n\r\n  /**\r\n   * 自定义函数式取值\r\n   */\r\n  setCustomFunctionMode(\r\n    option: GridDataSourceStaticFunction,\r\n    paramFunction: undefined | (() => any)\r\n  ) {\r\n    const that = this\r\n    this.reload = () => {\r\n      that.clearRowCount()\r\n      if (that.ctl.entityName) {\r\n        _.set(that.module, that.ctl.entityName + '.selectedRow', undefined)\r\n      }\r\n      that.ctl.loading = true\r\n\r\n      // rowModelType = infinite\r\n      that.ctl.gridApi.setDatasource({\r\n        getRows: (params: any) => {\r\n          that.ctl.loading = true\r\n\r\n          if (that.isFirstAutoLoad && that.ctl.autoLoad === false) {\r\n            that.rowCount = 0\r\n            params.successCallback([], that.rowCount)\r\n            that.ctl.loading = false\r\n            that.isFirstAutoLoad = false\r\n            return\r\n          }\r\n\r\n          option.call(that.module, that.ctl, {\r\n            param:\r\n              typeof paramFunction === 'function' ? paramFunction() : undefined,\r\n\r\n            failCallback: () => {\r\n              params.failCallback()\r\n            },\r\n\r\n            successCallback: (data: any[], dataLength: number | undefined) => {\r\n              params.successCallback(data, dataLength)\r\n\r\n              that.ctl.loading = false\r\n              that.ctl._bindingComplete()\r\n              if (that.ctl.entityName) {\r\n                _.set(\r\n                  that.module,\r\n                  that.ctl.entityName + '.selectedRow',\r\n                  that.ctl.getSelectedRow()\r\n                )\r\n              }\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n\r\n    this.reload()\r\n  }\r\n\r\n  setCodeArrayMode(option: Array<any>) {\r\n    const that = this\r\n    const rowCount = option.length\r\n    this.reload = () => {\r\n      this.ctl.loading = true\r\n      that.clearRowCount()\r\n      if (that.ctl.entityName) {\r\n        _.set(that.module, that.ctl.entityName + '.selectedRow', undefined)\r\n      }\r\n      that.ctl.gridApi.hasDataSource = true\r\n\r\n      if (that.ctl.pagination) {\r\n        /** 分页模式 **/\r\n\r\n        that.ctl.gridPage.getPageData = (\r\n          currentPage: number,\r\n          pageSize: number\r\n        ) => {\r\n          let d = []\r\n          const startRow = (currentPage - 1) * pageSize\r\n          let endRow = currentPage * pageSize\r\n          endRow = endRow > rowCount ? rowCount : endRow\r\n\r\n          for (let i = startRow; i < endRow; i++) {\r\n            d.push(option[i])\r\n          }\r\n          that.ctl.setData(d)\r\n          that.ctl.gridPage.itemCount = rowCount\r\n          that.ctl.gridPage.currentPage = currentPage\r\n        }\r\n\r\n        that.ctl.gridPage.getPageData(1, that.ctl.gridPage.pageSize)\r\n      } else {\r\n        /** 不分页模式 **/\r\n        that.ctl.setData(option)\r\n        that.ctl.gridPage.itemCount = rowCount\r\n      }\r\n    }\r\n\r\n    this.reload()\r\n  }\r\n\r\n  constructor(ctl: any, option: GridDataSource) {\r\n    if (isDesignMode()) {\r\n      return\r\n    }\r\n    this.ctl = ctl\r\n    this.option = option\r\n    this.module = ctl._webix.$scope\r\n\r\n    if (!option) {\r\n      //没有设值，退出\r\n      this.reload = undefined\r\n      return\r\n    }\r\n\r\n    if (_.isArray(option)) {\r\n      this.setCodeArrayMode(option)\r\n      return\r\n    }\r\n\r\n    if (typeof option === 'function') {\r\n      //以 function 方式运行\r\n      this.setCustomFunctionMode(option, undefined)\r\n      return\r\n    }\r\n\r\n    // 使 watch 生效\r\n    _.forOwn(option.params, value => {\r\n      if (!_.has(value, '$watch')) {\r\n        return\r\n      }\r\n      const watchOption: WatchParam = value\r\n      this.module.$watch(watchOption.$watch, () => {\r\n        if (this.reload) {\r\n          this.reload()\r\n        }\r\n      })\r\n    })\r\n\r\n    // params 函数\r\n    let paramFunction = () => {\r\n      const result: any = {}\r\n      _.forOwn(option.params, (value, key) => {\r\n        if (_.has(value, '$get')) {\r\n          const getOption: GetParam = value\r\n          result[key] = _.get(this.module, getOption.$get)\r\n        } else if (_.has(value, '$watch')) {\r\n          const watchOption: WatchParam = value\r\n          result[key] = _.get(this.module, watchOption.$watch)\r\n        } else {\r\n          result[key] = value\r\n        }\r\n      })\r\n      return result\r\n    }\r\n\r\n    if (option.type === 'function') {\r\n      if (typeof option.bind === 'function') {\r\n        this.setCustomFunctionMode(option.bind, paramFunction)\r\n      } else {\r\n        // 取 bind 函数\r\n        const bindFunction: GridDataSourceStaticFunction = _.get(\r\n          this.module,\r\n          option.bind\r\n        ) as GridDataSourceStaticFunction\r\n        if (!bindFunction) {\r\n          console.error(`没有找到名称为 ${option.bind} 的方法`)\r\n          return\r\n        }\r\n        this.setCustomFunctionMode(bindFunction, paramFunction)\r\n      }\r\n      return\r\n    }\r\n\r\n    if (option.type === 'SQL') {\r\n      this.setSqlMode(option, paramFunction)\r\n      return\r\n    }\r\n\r\n    console.error(`其他方式没有实现`)\r\n  }\r\n\r\n  /**\r\n   * 释放与 YvGrid 的绑定\r\n   */\r\n  destory() {\r\n    // 解除全部 watch\r\n    _.each(this.watches, unwatch => {\r\n      unwatch()\r\n    })\r\n    this.reload = undefined\r\n  }\r\n\r\n  /**\r\n   * 清空 rowCount, 下次重新统计总行数\r\n   */\r\n  clearRowCount() {\r\n    delete this.rowCount\r\n  }\r\n\r\n  updateSupport(): boolean {\r\n    return false\r\n  }\r\n\r\n  _updateRow(param: any) {\r\n    throw new Error('not implements')\r\n  }\r\n}\r\n","import { YvEventDispatch } from './YvanEvent'\r\n\r\nexport default class CtlGridCellButton {\r\n  $el: any\r\n  $btns!: any[]\r\n  func!: any[]\r\n\r\n  init(params: any) {\r\n    this.$el = document.createElement('div')\r\n    this._buildHTML.call(this, params)\r\n  }\r\n\r\n  getGui() {\r\n    return this.$el\r\n  }\r\n\r\n  destroy() {\r\n    for (let i = 0; i < this.$btns.length; i++) {\r\n      const btn = this.$btns[i]\r\n      btn.removeEventListener('click', this.func[i])\r\n    }\r\n  }\r\n\r\n  refresh(params: any) {\r\n    this._buildHTML.call(this, params)\r\n  }\r\n\r\n  private _buildHTML(this: any, params: any) {\r\n    const arr: Array<any> = []\r\n    const func: Array<any> = []\r\n\r\n    const { buttons, rowIndex, data, api, column } = params\r\n\r\n    if (typeof buttons === 'object' && buttons.constructor === Array) {\r\n      _.each(buttons, btn => {\r\n        if (typeof btn.render === 'function') {\r\n          const r = btn.render.call(this, rowIndex, data)\r\n          if (r !== true) {\r\n            return\r\n          }\r\n        } else if (typeof btn.render === 'boolean' && !btn.render) {\r\n          return\r\n        }\r\n\r\n        arr.push(\r\n          `<a class=\"yv-grid-button ${btn.cssType}\">` +\r\n            (typeof btn.iconCls === 'string'\r\n              ? '<i class=\"' + btn.iconCls + '\"></i>'\r\n              : '') +\r\n            btn.text +\r\n            '</a>'\r\n        )\r\n        func.push(btn.onClick)\r\n      })\r\n    }\r\n\r\n    this.$el.innerHTML =\r\n      '<div class=\"yv-grid-buttons\">' + arr.join('') + '</div>'\r\n\r\n    const $btns = this.$el.querySelectorAll('.yv-grid-button')\r\n    for (let i = 0; i < $btns.length; i++) {\r\n      const btn = $btns[i]\r\n      const fun = func[i]\r\n      btn.addEventListener('click', () => {\r\n        const ctl = api.vue\r\n        const module = api.vue._webix.$scope\r\n        YvEventDispatch(\r\n          fun,\r\n          ctl,\r\n          { data, rowIndex, colId: column.colId },\r\n          module\r\n        )\r\n      })\r\n    }\r\n    this.$btns = $btns\r\n    this.func = func\r\n  }\r\n}\r\n","export default class CtlGridFilterSet {\r\n\r\n    $el: any;\r\n    $selectAll: any;\r\n    data!: any[];\r\n    checkedData!: any[];\r\n    $container: any;\r\n    $clear: any;\r\n    $apply: any;\r\n    hidePopup: any;\r\n\r\n    // The init(params) method is called on the filter once. See below for details on the\r\n    // parameters.\r\n    init(params: any) {\r\n        this.setupDOM(params);\r\n        const that = this;\r\n        const data = params.data;\r\n\r\n        //======================= 全选按钮 =======================\r\n        const $selectAll = $(this.$el).find('[ref=\"eSelectAll\"]')\r\n        $selectAll.on('click', () => {\r\n            if (this.checkedData.length >= this.data.length) {\r\n                //全选状态，点击后属于全不选\r\n                this.checkedData = []\r\n            } else {\r\n                //其他情况，都是全选\r\n                this.checkedData = _.clone(this.data)\r\n            }\r\n            this.refreshState()\r\n        });\r\n        this.$selectAll = $selectAll;\r\n\r\n        //======================= 确定/清空 =======================\r\n        const $clear = $(this.$el).find('[ref=\"eClearButton\"]');\r\n        const $apply = $(this.$el).find('[ref=\"eApplyButton\"]');\r\n        $clear.on('click', () => {\r\n            //清空就是全选\r\n            that.checkedData = _.clone(that.data);\r\n            that.refreshState();\r\n            params.filterChangedCallback();\r\n            if (typeof that.hidePopup === 'function') {\r\n                that.hidePopup()\r\n            }\r\n        });\r\n        $apply.on('click', () => {\r\n            //确定\r\n            params.filterChangedCallback();\r\n            if (typeof that.hidePopup === 'function') {\r\n                that.hidePopup()\r\n            }\r\n        });\r\n        this.$clear = $clear;\r\n        this.$apply = $apply;\r\n\r\n        //======================= 构建数据 =======================\r\n        const $container = $(this.$el).find('.ag-virtual-list-container');\r\n        $container.css('height', (data.length * 20 + 2) + 'px');\r\n\r\n        let h = 0;\r\n        _.each(data, item => {\r\n            $container.append(\r\n                '<div class=\"ag-virtual-list-item\" style=\"top: ' + h + 'px;\" RefDataValue=\"' + item.id + '\">' +\r\n                '  <label class=\"ag-set-filter-item\">\\n' +\r\n                '    <div class=\"ag-filter-checkbox\"><span class=\"ag-icon ag-icon-checkbox-checked\" unselectable=\"on\"></span></div>\\n' +\r\n                '    <span class=\"ag-filter-value\">' + item.text + '</span>\\n' +\r\n                '  </label>' +\r\n                '</div>'\r\n            );\r\n            h += 20\r\n        });\r\n\r\n        //ag-icon-checkbox-indeterminate\r\n        $container.on('click', '.ag-virtual-list-item', function () {\r\n            //const $cb = $(this).find('span.ag-icon');\r\n            const cv = $(this).attr('RefDataValue')\r\n            const fi = _.find(that.checkedData, item => _.toString(item.id) === cv);\r\n            if (fi) {\r\n                //已经勾选了，要删掉他\r\n                _.remove(that.checkedData, item => _.toString(item.id) === cv)\r\n\r\n            } else {\r\n                //没有勾选，要加上他\r\n                const af = _.find(that.data, item => _.toString(item.id) === cv);\r\n                that.checkedData.push({...af})\r\n            }\r\n\r\n            //刷新状态\r\n            that.refreshState()\r\n        });\r\n\r\n        this.data = data;\r\n        this.checkedData = _.clone(this.data);\r\n        this.$container = $container\r\n    }\r\n\r\n    refreshState() {\r\n        const $cb = this.$selectAll.find('span.ag-icon');\r\n\r\n        if (this.checkedData.length >= this.data.length) {\r\n            //已经全选\r\n            $cb.attr('class', 'ag-icon ag-icon-checkbox-checked');\r\n            this.$container.find('[RefDataValue]').find('span.ag-icon').attr('class', 'ag-icon ag-icon-checkbox-checked')\r\n\r\n        } else if (this.checkedData.length === 0) {\r\n            //一个没选\r\n            $cb.attr('class', 'ag-icon ag-icon-checkbox-unchecked');\r\n            this.$container.find('[RefDataValue]').find('span.ag-icon').attr('class', 'ag-icon ag-icon-checkbox-unchecked')\r\n\r\n        } else {\r\n            //其他情况\r\n            $cb.attr('class', 'ag-icon ag-icon-checkbox-indeterminate');\r\n\r\n            const that = this;\r\n            this.$container.find('[RefDataValue]').each(function (this: any) {\r\n                const $dom = $(this);\r\n                const v = $dom.attr('RefDataValue');\r\n                const fi = _.find(that.checkedData, item => item.id === v);\r\n                if (fi) {\r\n                    //有属性，加上钩\r\n                    $dom.find('span.ag-icon').attr('class', 'ag-icon ag-icon-checkbox-checked')\r\n\r\n                } else {\r\n                    //没属性，不打勾\r\n                    $dom.find('span.ag-icon').attr('class', 'ag-icon ag-icon-checkbox-unchecked')\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    // Returns the GUI for this filter. The GUI can be a) a string of html or b) a DOM element or\r\n    // node.\r\n    getGui() {\r\n        return this.$el\r\n    }\r\n\r\n    // Return true if the filter is active. If active than 1) the grid will show the filter icon in the column\r\n    // header and 2) the filter will be included in the filtering of the data.\r\n    isFilterActive() {\r\n        //如果不是全选，就是没激活\r\n        return (this.checkedData.length < this.data.length)\r\n    }\r\n\r\n    // The grid will ask each active filter, in turn, whether each row in the grid passes. If any\r\n    // filter fails, then the row will be excluded from the final set. A params object is supplied\r\n    // with attributes node (the rowNode the grid creates that wraps the data) and data (the data\r\n    // object that you provided to the grid for that row).\r\n    doesFilterPass() {\r\n        // console.log('doesFilterPass')\r\n    }\r\n\r\n    // Gets the filter state. If filter is not active, then should return null/undefined.\r\n    // The grid calls getModel() on all active filters when gridApi.getFilterModel() is called.\r\n    getModel() {\r\n        if (this.checkedData.length >= this.data.length) {\r\n            //全选，不需要带任何条件\r\n            return\r\n        }\r\n        return {\r\n            filterType: 'set',\r\n            filter: this.checkedData,\r\n        }\r\n    }\r\n\r\n    // Restores the filter state. Called by the grid after gridApi.setFilterModel(model) is called.\r\n    // The grid will pass undefined/null to clear the filter.\r\n    setModel(model: any) {\r\n        if (!model) {\r\n            //清空筛选\r\n            this.checkedData = _.clone(this.data)\r\n        } else {\r\n            //设置筛选条件\r\n        }\r\n    }\r\n\r\n    // Gets called every time the popup is shown, after the gui returned in\r\n    // getGui is attached to the DOM. If the filter popup is closed and reopened, this method is\r\n    // called each time the filter is shown. This is useful for any logic that requires attachment\r\n    // before executing, such as putting focus on a particular DOM element. The params has one\r\n    // callback method 'hidePopup', which you can call at any later point to hide the popup - good\r\n    // if you have an 'Apply' button and you want to hide the popup after it is pressed.\r\n    afterGuiAttached(param: any) {\r\n        this.hidePopup = param.hidePopup;\r\n        this.refreshState()\r\n    }\r\n\r\n    // Gets called when the Column is destroyed. If your custom filter needs to do\r\n    // any resource cleaning up, do it here. A filter is NOT destroyed when it is\r\n    // made 'not visible', as the gui is kept to be shown again if the user selects\r\n    // that filter again. The filter is destroyed when the column it is associated with is\r\n    // destroyed, either new columns are set into the grid, or the grid itself is destroyed.\r\n    destroy() {\r\n        this.$selectAll.off();\r\n        this.$container.off();\r\n        this.$clear.off();\r\n        this.$apply.off()\r\n    }\r\n\r\n    // If floating filters are turned on for the grid, but you have no floating filter\r\n    // configured for this column, then the grid will check for this method. If this\r\n    // method exists, then the grid will provide a read only floating filter for you\r\n    // and display the results of this method. For example, if your filter is a simple\r\n    // filter with one string input value, you could just return the simple string\r\n    // value here.\r\n    getModelAsString() {\r\n        console.log('getModelAsString')\r\n    }\r\n\r\n    setupDOM(params: any) {\r\n\r\n        this.$el = document.createElement('div');\r\n        const html =\r\n            '<div class=\"ag-filter-body-wrapper\">\\n' +\r\n            '  <div>\\n' +\r\n            '    <div class=\"ag-filter-header-container\" role=\"presentation\" style=\"width: 200px;\">\\n' +\r\n            '      <label ref=\"eSelectAll\" class=\"ag-set-filter-item\">\\n' +\r\n            '        <div class=\"ag-filter-checkbox\">\\n' +\r\n            '          <span class=\"ag-icon ag-icon-checkbox-checked\" unselectable=\"on\"></span>\\n' +\r\n            '        </div>\\n' +\r\n            '        <span class=\"ag-filter-value\">全选</span>\\n' +\r\n            '      </label>\\n' +\r\n            '    </div>\\n' +\r\n            '    <div class=\"ag-set-filter-list\" role=\"presentation\">\\n' +\r\n            '      <div class=\"ag-virtual-list-viewport\">\\n' +\r\n            '\\n' +\r\n            '\\n' +\r\n            '        <div class=\"ag-virtual-list-container\" style=\"height: 180px;\">' +\r\n            '        </div>\\n' +\r\n            '\\n' +\r\n            '\\n' +\r\n            '      </div>\\n' +\r\n            '    </div>\\n' +\r\n            '  </div>\\n' +\r\n            '</div>\\n' +\r\n            '<div class=\"ag-filter-apply-panel\" ref=\"eButtonsPanel\">\\n' +\r\n            '  <button type=\"button\" ref=\"eClearButton\">清空</button>\\n' +\r\n            '  <button type=\"button\" ref=\"eApplyButton\">确定</button>\\n' +\r\n            '</div>';\r\n        this.$el.innerHTML = html\r\n    }\r\n}\r\n","export default class CtlGridEditor {\r\n    data: any;\r\n    colDef: any;\r\n    column: any;\r\n    focusAfterAttached: any;\r\n    field: any;\r\n    valid: any;\r\n    origin: any;\r\n    vue: any;\r\n\r\n    // gets called once after the editor is created\r\n    init(params: any): void {\r\n        this.data = params.data;\r\n        this.colDef = params.colDef;\r\n        this.column = params.column;\r\n        const {type, data, colDef, column, cellStartedEdit, value, editParams} = params;\r\n\r\n        _.assign(this, {\r\n            type, value, data, colDef, column, editParams\r\n        });\r\n\r\n        this.focusAfterAttached = cellStartedEdit;\r\n\r\n        this.field = colDef.field;\r\n        this.valid = params.valid;\r\n        this.origin = value;\r\n        this.vue = params.api.vue;\r\n    }\r\n\r\n    // Return the DOM element of your editor, this is what the grid puts into the DOM\r\n    getGui() {\r\n    }\r\n\r\n    // Gets called once after GUI is attached to DOM.\r\n    // Useful if you want to focus or highlight a component\r\n    // (this is not possible when the element is not attached)\r\n    afterGuiAttached() {\r\n    }\r\n\r\n    // Should return the final value to the grid, the result of the editing\r\n    getValue() {\r\n    }\r\n\r\n    setValue(newValue: any) {\r\n        console.error('不支持 setValue:' + newValue)\r\n    }\r\n\r\n    // Gets called once by grid after editing is finished\r\n    // if your editor needs to do any cleanup, do it here\r\n    destroy() {\r\n        if (typeof this.valid === 'undefined') {\r\n            return\r\n        }\r\n        const validMsg = this.valid(this.getValue(), this.vue.getEditRow());\r\n        if (validMsg) {\r\n            this.vue.currentEditValidMsg[this.field] = validMsg\r\n\r\n        } else {\r\n            this.vue.currentEditValidMsg[this.field] = undefined\r\n        }\r\n    }\r\n\r\n    // Gets called once after initialised.\r\n    // If you return true, the editor will appear in a popup\r\n    isPopup() {\r\n        return false\r\n    }\r\n\r\n    // Gets called once before editing starts, to give editor a chance to\r\n    // cancel the editing before it even starts.\r\n    isCancelBeforeStart() {\r\n        //如果这里返回 true, 就会取消编辑\r\n    }\r\n\r\n    // Gets called once when editing is finished (eg if enter is pressed).\r\n    // If you return true, then the result of the edit will be ignored.\r\n    isCancelAfterEnd() {\r\n        //这里返回 true, 就会取消该单元格编辑，还原其内容\r\n    }\r\n\r\n    // If doing full row edit, then gets called when tabbing into the cell.\r\n    focusIn() {\r\n    }\r\n\r\n    // If doing full row edit, then gets called when tabbing out of the cell.\r\n    focusOut() {\r\n    }\r\n}\r\n","import CtlGridEditor from './CtlGridEditor'\r\n\r\nvar isInput = false\r\n\r\nexport default class CtlGridEditorText extends CtlGridEditor {\r\n  isPinned: any\r\n  $el: any\r\n  $input: any\r\n  value: any\r\n  editParams: any\r\n  leaveReason: any\r\n  type: any\r\n\r\n  init(params: any) {\r\n    super.init(params)\r\n\r\n    if (params.node.rowPinned) {\r\n      this.isPinned = true\r\n    }\r\n    this.$el = document.createElement('div')\r\n    this.$el.classList.add('ag-input-wrapper')\r\n    this.$el.setAttribute('role', 'presentation')\r\n\r\n    this.$el.innerHTML =\r\n      '<input class=\"ag-cell-edit-input\" type=\"text\" autocomplete=\"off\">'\r\n\r\n    this.$input = this.$el.querySelectorAll('input')[0]\r\n    this.$input.value = _.toString(params.value)\r\n\r\n    this.$input.addEventListener('keydown', this._onKeyDown.bind(this))\r\n    this.$input.addEventListener('input', this._onInput.bind(this))\r\n    this.$input.addEventListener('change', this._onChange.bind(this))\r\n    this.$input.addEventListener(\r\n      'compositionstart',\r\n      this._onCompositionstart.bind(this)\r\n    )\r\n    this.$input.addEventListener(\r\n      'compositionend',\r\n      this._onCompositionend.bind(this)\r\n    )\r\n  }\r\n\r\n  _onCompositionstart() {\r\n    isInput = true\r\n  }\r\n\r\n  _onCompositionend(e: any) {\r\n    isInput = false\r\n    this._dealWithString(e)\r\n  }\r\n\r\n  _onKeyDown(e: any) {\r\n    if (e.code === 'Tab' || e.code === 'Enter') {\r\n      // Tab键/回车键, 完全拦截，跑下一个焦点控件\r\n      e.stopPropagation()\r\n      e.preventDefault()\r\n      this.value = e.target.value\r\n\r\n      if (typeof this.editParams.onValidate === 'function') {\r\n        const r = this.editParams.onValidate(this.value)\r\n        if (r) {\r\n          //有校验错误，不让跳转\r\n          return\r\n        }\r\n      }\r\n\r\n      //写入离开原因的 code 编码\r\n      this.leaveReason = e.code\r\n      //这里会触发 this.getValue() 方法\r\n      this.vue.gridApi.stopEditing()\r\n    }\r\n  }\r\n\r\n  _onInput(e: any) {\r\n    if (isInput) {\r\n      return\r\n    }\r\n    this._dealWithString(e)\r\n  }\r\n\r\n  _dealWithString(e: any) {\r\n    let value = e.target.value\r\n    if (this.type === 'number') {\r\n      if (this.editParams.precision > 0) {\r\n        value = value.replace(/[^\\d.-]/g, '') //清除\"数字\"和\".\"以外的字符\r\n        if (value.length > 1 && value.indexOf('.') > 1) {\r\n          let t\r\n          while (1) {\r\n            t = value\r\n            value = value.replace(/^0/g, '')\r\n            if (t.length === value.length) {\r\n              break\r\n            }\r\n          }\r\n          //value = value.replace(/^0/g, '') //验证第一个字符不是0.\r\n        }\r\n        value = value.replace(/^\\./g, '') //验证第一个字符是数字而不是.\r\n        value = value.replace(/\\.{2,}/g, '.') //只保留第一个. 清除多余的.\r\n        value = value\r\n          .replace('.', '$#$')\r\n          .replace(/\\./g, '')\r\n          .replace('$#$', '.') //只允许输入一个小数点\r\n\r\n        const r = eval(\r\n          '/^(\\\\-)*(\\\\d+)\\\\.(\\\\d{0,' + this.editParams.precision + '}).*$/'\r\n        )\r\n        value = value.replace(r, '$1$2.$3') //只能输入固定位数的小数\r\n      } else {\r\n        value = value.replace(/[^\\d-]/g, '') //清除\"数字\"和\"-\"以外的字符\r\n        if (value.length > 1) {\r\n          value = value.replace(/^0/g, '') //验证第一个字符不是0.\r\n        }\r\n        if (value.startsWith('-')) {\r\n          value = '-' + value.substr(1).replace(/[^\\d]/g, '')\r\n        } else {\r\n          value = value.replace(/[^\\d]/g, '')\r\n        }\r\n      }\r\n    }\r\n\r\n    e.target.value = value\r\n    if (this.value === value) {\r\n      //完全相等，不用通知更改\r\n      return\r\n    }\r\n    this.value = value\r\n\r\n    if (e.detail !== 'custom') {\r\n      if (typeof this.editParams.onInput === 'function') {\r\n        const r = this.editParams.onInput(this.value, e)\r\n        if (typeof r !== 'undefined') {\r\n          this.value = r\r\n          e.target.value = r\r\n        }\r\n\r\n        if (typeof this.editParams.onValidate === 'function') {\r\n          this.editParams.onValidate(value)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _onChange(e: any) {\r\n    this.value = e.target.value\r\n\r\n    if (typeof this.editParams.onChange === 'function') {\r\n      this.editParams.onChange(this.value, e)\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy()\r\n    this.$input.removeEventListener('keydown', this._onKeyDown.bind(this))\r\n    this.$input.removeEventListener('input', this._onInput.bind(this))\r\n    this.$input.removeEventListener('change', this._onChange.bind(this))\r\n    this.$input.removeEventListener(\r\n      'compositionstart',\r\n      this._onCompositionstart.bind(this)\r\n    )\r\n    this.$input.removeEventListener(\r\n      'compositionend',\r\n      this._onCompositionend.bind(this)\r\n    )\r\n  }\r\n\r\n  getGui() {\r\n    return this.$el\r\n  }\r\n\r\n  afterGuiAttached() {\r\n    super.afterGuiAttached()\r\n    this.$input.dispatchEvent(new CustomEvent('input', { detail: 'custom' }))\r\n\r\n    if (this.focusAfterAttached) {\r\n      this.$input.focus()\r\n    }\r\n  }\r\n\r\n  getValue() {\r\n    if (typeof this.leaveReason === 'undefined') {\r\n      //不是按导航键移动的\r\n      if (typeof this.editParams.onValidate === 'function') {\r\n        const r = this.editParams.onValidate(this.value)\r\n        if (r) {\r\n          //有校验错误，还原内容\r\n          return this.origin\r\n        }\r\n      }\r\n    }\r\n\r\n    if (typeof this.editParams.onCommit === 'function') {\r\n      this.editParams.onCommit({\r\n        data: this.data,\r\n        colDef: this.colDef,\r\n        column: this.column,\r\n        newValue: this.value,\r\n        isPinned: this.isPinned,\r\n        vue: this.vue,\r\n        leaveReason: this.leaveReason\r\n      })\r\n    }\r\n    return this.value\r\n  }\r\n\r\n  focusIn() {\r\n    super.focusIn()\r\n    this.$input.focus()\r\n    this.$input.select()\r\n  }\r\n\r\n  focusOut() {\r\n    super.focusOut()\r\n  }\r\n}\r\n","import CtlGridEditor from './CtlGridEditor'\r\n\r\nexport default class CtlGridEditorCombo extends CtlGridEditor {\r\n  isPinned: any\r\n  options: any\r\n  $el: any\r\n\r\n  init(params: any) {\r\n    super.init(params)\r\n    this.options = params.options\r\n    if (params.node.rowPinned) {\r\n      this.isPinned = true\r\n    }\r\n\r\n    const $dom = $('<input class=\"tmp-combo\" />')\r\n\r\n    this.$el = $dom[0]\r\n    const that = this\r\n  }\r\n\r\n  getGui() {\r\n    return this.$el\r\n  }\r\n\r\n  afterGuiAttached() {\r\n    // YvGridEditor.afterGuiAttached.apply(this, arguments)\r\n    // this.vv.focus()\r\n    //setTimeout(() => {\r\n    //    this.vv.open()\r\n    //    this.vv.$nextTick(() => {\r\n    //        debugger\r\n    //    })\r\n    //}, 1000)\r\n  }\r\n\r\n  getValue() {\r\n    // if (typeof this.leaveReason === 'undefined') {\r\n    //     //不是按导航键移动的, 需要触发校验\r\n    //     if (typeof this.editParams.onValidate === 'function') {\r\n    //         const r = this.editParams.onValidate(value)\r\n    //         if (r) {\r\n    //             //有校验错误，还原内容\r\n    //             return this.origin\r\n    //         }\r\n    //     }\r\n    // }\r\n    //\r\n    // //校验通过，调用 commit 并返回选定的新值\r\n    // if (typeof this.editParams.onCommit === 'function') {\r\n    //     this.editParams.onCommit({\r\n    //         data: this.data,\r\n    //         colDef: this.colDef,\r\n    //         column: this.column,\r\n    //         newValue: this.value,\r\n    //         leaveReason: this.leaveReason,\r\n    //     })\r\n    // }\r\n    // return this.value\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy()\r\n    // this.vv.$destroy()\r\n  }\r\n\r\n  focusIn() {\r\n    super.focusIn()\r\n    // this.vv.focus()\r\n  }\r\n\r\n  focusOut() {\r\n    super.focusOut()\r\n  }\r\n}\r\n","import * as YvanUI from './YvanUIExtend'\r\nimport CtlGridLocale from './CtlGridLocale'\r\nimport { CtlGridPage } from './CtlGridPage'\r\nimport agGrid from 'ag-grid'\r\nimport CtlGridIdRender from './CtlGridIdRender'\r\nimport {\r\n  YvGridColumnEditProp,\r\n  YvGridColumnProp,\r\n  YvGridProp\r\n} from './CtlGridDefault'\r\nimport CtlGridCellCheckbox from './CtlGridCellCheckbox'\r\nimport CtlGridHeadCheckbox from './CtlGridHeadCheckbox'\r\nimport { CtlBase } from './CtlBase'\r\nimport { parseYvanPropChangeVJson } from './CtlUtils'\r\nimport { GridDataSource } from './YvanDataSourceGrid'\r\nimport { YvEvent, YvEventDispatch } from './YvanEvent'\r\nimport { YvanDataSourceGrid } from './YvanDataSourceGridImp'\r\nimport CtlGridCellButton from './CtlGridCellButton'\r\nimport CtlGridFilterSet from './CtlGridFilterSet'\r\nimport CtlGridEditorText from './CtlGridEditorText'\r\nimport CtlGridEditorCombo from './CtlGridEditorCombo'\r\n\r\n/**\r\n * 表格中的行按钮被点击后触发的事件参数\r\n */\r\nexport interface CtlGridRowButtonClickArgs {\r\n  /**\r\n   * 行数据\r\n   */\r\n  data: any\r\n\r\n  /**\r\n   * 行序号\r\n   */\r\n  rowIndex: number\r\n\r\n  /**\r\n   * 列名称\r\n   */\r\n  colId: string\r\n}\r\n\r\nexport class CtlGrid extends CtlBase<CtlGrid> {\r\n  static create(vjson: any): CtlGrid {\r\n    const that = new CtlGrid(_.cloneDeep(vjson))\r\n\r\n    if (vjson.hasOwnProperty('debugger')) {\r\n      debugger\r\n    }\r\n\r\n    // 提取基础属性 onRender / ctlName / entityName 等等\r\n    const yvanProp = parseYvanPropChangeVJson(vjson, [])\r\n\r\n    // 将 yvanProp 合并至当前 CtlBase 对象\r\n    _.assign(that, yvanProp)\r\n\r\n    // 删除 vjson 所有数据, 替换为 template 语法\r\n    _.forOwn(vjson, (value, key) => {\r\n      delete vjson[key]\r\n    })\r\n    _.merge(vjson, {\r\n      view: 'grid',\r\n      template: `<div role=\"yvGrid\" class=\"ag-theme-blue\"></div>`,\r\n      on: {\r\n        onAfterRender: function (this: any) {\r\n          that.attachHandle(this)\r\n          that._resetGrid()\r\n        },\r\n        onDestruct(this: any) {\r\n          if (that.gridApi) {\r\n            that.gridApi.destroy()\r\n            that.gridApi = undefined\r\n          }\r\n          that.removeHandle()\r\n        }\r\n      }\r\n    })\r\n    if (that.vjson.id) {\r\n      vjson.id = that.vjson.id\r\n    }\r\n    return that\r\n  }\r\n\r\n  /*============================ 公共属性部分 ============================*/\r\n  gridApi: any\r\n  columnApi: any\r\n\r\n  get webix() {\r\n    return this._webix\r\n  }\r\n\r\n  /**\r\n   * 设置数据源\r\n   */\r\n  set dataSource(nv: GridDataSource) {\r\n    this.vjson.dataSource = nv\r\n  }\r\n\r\n  /**\r\n   * 获取数据源\r\n   */\r\n  get dataSource(): GridDataSource {\r\n    return this.vjson.dataSource\r\n  }\r\n\r\n  /**\r\n   * 初始化时的数据\r\n   */\r\n  readonly data?: any[]\r\n\r\n  /**\r\n   * 是否允许编辑\r\n   */\r\n  readonly editable!: boolean\r\n\r\n  /**\r\n   * 允许勾选\r\n   */\r\n  readonly checkbox!: boolean\r\n\r\n  /**\r\n   * 单击后立刻进入编辑\r\n   */\r\n  readonly editSingleClick!: boolean\r\n\r\n  /**\r\n   * 允许添加\r\n   */\r\n  readonly allowNewRow!: boolean\r\n\r\n  /**\r\n   * 允许过滤\r\n   */\r\n  readonly filterable!: boolean\r\n\r\n  /**\r\n   * 显示序号\r\n   */\r\n  readonly showRowNumber!: boolean\r\n\r\n  /**\r\n   * 自动调整列宽\r\n   */\r\n  readonly autoSizeColumns!: boolean\r\n\r\n  /**\r\n   * 单元格选中模式\r\n   */\r\n  readonly allowCellSelection!: boolean\r\n\r\n  /**\r\n   * 行选中模式\r\n   */\r\n  readonly allowRowSelection!: boolean\r\n\r\n  /**\r\n   * ID字段\r\n   */\r\n  readonly idField!: string\r\n\r\n  /**\r\n   * 值分隔符\r\n   */\r\n  readonly valueSep!: string\r\n\r\n  /**\r\n   * 保存时机(换行时/编辑完后)\r\n   */\r\n  readonly saveOn!: 'editFinish' | 'rowChanged'\r\n\r\n  /**\r\n   * 新添加行时，初始化的数据\r\n   */\r\n  readonly newRowData!: any\r\n\r\n  /**\r\n   * 失去焦点后立刻结束编辑\r\n   */\r\n  readonly stopEditingWhenGridLosesFocus!: boolean\r\n\r\n  /**\r\n   * 列定义\r\n   */\r\n  readonly columns!: any[] | undefined\r\n\r\n  /**\r\n   * 二纬表头\r\n   */\r\n  readonly columnGroup!: any[] | undefined\r\n\r\n  /**\r\n   * 是否自动读取数据\r\n   */\r\n  readonly autoLoad: boolean = true\r\n\r\n  /**\r\n   * 是否分页\r\n   */\r\n  readonly pagination: boolean = false\r\n\r\n  /**\r\n   * 分页大小\r\n   */\r\n  readonly pageSize: number = 100\r\n\r\n  public gridPage!: CtlGridPage\r\n\r\n  /**\r\n   * 行被选中后触发\r\n   */\r\n  onRowSelect?: YvEvent<CtlGrid, any>\r\n\r\n  /**\r\n   * 行被双击后触发\r\n   */\r\n  onRowDblClick?: YvEvent<CtlGrid, any>\r\n\r\n  /**\r\n   * 勾选项改变后触发\r\n   */\r\n  onCheckedChange?: YvEvent<CtlGrid, any>\r\n\r\n  /**\r\n   * 数据绑定完毕后触发\r\n   */\r\n  onBindingComplete?: YvEvent<CtlGrid, any>\r\n\r\n  /**\r\n   * 焦点单元格发生变化后触发\r\n   */\r\n  onCellFocused?: YvEvent<CtlGrid, any>\r\n\r\n  /**\r\n   * 单元格被点击后触发\r\n   */\r\n  onCellClicked?: YvEvent<CtlGrid, any>\r\n\r\n  /**\r\n   * 第一行有效数据被渲染后触发\r\n   */\r\n  onFirstDataRendered?: YvEvent<CtlGrid, any>\r\n\r\n  /**\r\n   * 按下键后触发\r\n   */\r\n  onKeyDown?: YvEvent<CtlGrid, any>\r\n\r\n  /**\r\n   * 获取被勾选的行ID集合\r\n   */\r\n  checkedIds: any[] = []\r\n\r\n  /**\r\n   * 选择一个指定行\r\n   * @param condition 可以是 key(主键), 也可以是 function 条件, 匹配到符合 condition 的第一条记录\r\n   */\r\n  selectRow(condition: GridSelectCondition) {\r\n    const node: any = this._findNode(condition)\r\n    if (node) {\r\n      this.gridApi.setFocusedCell(node.rowIndex, '__ID__')\r\n      node.setSelected(true)\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * 闪烁指定行\r\n   * @param condition 可以是 key(主键), 也可以是 function 条件, 匹配到符合 condition 的第一条记录\r\n   */\r\n  flashRow(condition: any) {\r\n    const node = this._findNode(condition)\r\n    if (node) {\r\n      this.gridApi.flashCells({ rowNodes: [node] })\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * 闪烁指定单元格\r\n   * @param cols 列数组\r\n   * @param condition 可以是 key(主键), 也可以是 function 条件, 匹配到符合 condition 的第一条记录\r\n   */\r\n  flashCell(cols: any, condition: any) {\r\n    const node = this._findNode(condition)\r\n    if (node) {\r\n      this.gridApi.flashCells({ columns: cols, rowNodes: [node] })\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * 获取全部数据\r\n   */\r\n  getData(): any[] | undefined {\r\n    const result: any[] = []\r\n    this.gridApi.forEachNode((node: any) => {\r\n      result.push(node.data)\r\n    })\r\n    return result\r\n  }\r\n\r\n  /**\r\n   * 为表格设置数据\r\n   * 注意，调用此方法，必须在初始化时，给一个空的 data: [] 属性\r\n   * 确保表格 rowModelType:clientSide 模式\r\n   */\r\n  setData(nv: any[] | undefined) {\r\n    this.gridApi.setRowData(nv)\r\n  }\r\n\r\n  /**\r\n   * 无感刷新\r\n   * 清空缓存，从后台重新拉取数据，表格上临时修改的内容都会被清空\r\n   *\r\n   * option:\r\n   *   clearFilter=true 是否清空筛选\r\n   */\r\n  reload(option?: any) {\r\n    this.loading = true\r\n\r\n    //无感刷新之前，清空所有状态\r\n    this._clearCache()\r\n\r\n    //需要重新请求 rowCount(总数据行)\r\n    if (this.dataSourceBind) {\r\n      this.dataSourceBind.clearRowCount()\r\n    }\r\n\r\n    if (this.entityName) {\r\n      _.set(this.getModule(), this.entityName + '.selectedRow', undefined)\r\n    }\r\n\r\n    if (option && option.clearFilter === true) {\r\n      this.gridApi.setFilterModel(null)\r\n    } else {\r\n      if (this.pagination) {\r\n        this.gridPage.refreshGrid()\r\n      } else {\r\n        this.gridApi.refreshInfiniteCache()\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取被选中的行主键\r\n   */\r\n  getSelectedId() {\r\n    const row = this.getSelectedRow()\r\n    if (row) {\r\n      return this._getIdByRow(row)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 设置勾选的数据行集合\r\n   */\r\n  setCheckedIds(ids: Array<any>) {\r\n    // 清空所有元素\r\n    this.checkedIds = ids;\r\n\r\n    // 刷新勾选单元格\r\n    this.gridApi.refreshCells({\r\n      columns: ['__CB__'],\r\n      force: true\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 获取被勾选的所有行\r\n   */\r\n  getCheckedRows() {\r\n    const selected: any[] = []\r\n    this._findNode((node: any) => {\r\n      if (_.indexOf(this.checkedIds, this._getIdByRow(node.data)) >= 0) {\r\n        selected.push(node.data)\r\n      }\r\n      return false\r\n    })\r\n    return selected\r\n  }\r\n\r\n  /**\r\n   * 获取被选中的行数据\r\n   */\r\n  getSelectedRow() {\r\n    const rows = this.getSelectedRows()\r\n    return rows.length > 0 ? rows[0] : undefined\r\n  }\r\n\r\n  /**\r\n   * 获取被选中的行数据(多选情况下回返回多行数据)\r\n   */\r\n  getSelectedRows() {\r\n    // 调用原生 getSelectedRows 方法有 bug\r\n    // return this.gridApi.getSelectedRows();\r\n    const selected: any[] = []\r\n    this._findNode((node: any) => {\r\n      if (node.selected) {\r\n        selected.push(node.data)\r\n      }\r\n      return false\r\n    })\r\n    return selected\r\n  }\r\n\r\n  /**\r\n   * 显示正在读取的状态\r\n   */\r\n  set loading(newValue: boolean) {\r\n    if (!this.isGridReadReady) {\r\n      return\r\n    }\r\n    if (newValue) {\r\n      this.gridApi.showLoadingOverlay()\r\n    } else {\r\n      this.gridApi.hideOverlay()\r\n    }\r\n  }\r\n\r\n  paginationSetPageSize(size: number) {\r\n    this.gridApi.paginationSetPageSize(size)\r\n  }\r\n\r\n  /** 设置行号, 兼容分页 **/\r\n  private setRowId(p: any) {\r\n    return CtlGridIdRender(p, this)\r\n  }\r\n\r\n  /*============================ 私有属性部分 ============================*/\r\n  private isGridReadReady: boolean = false\r\n  private dataSourceBind?: YvanDataSourceGrid = undefined\r\n\r\n  private _gridOptions(): any {\r\n    _.assign(this, {\r\n      ..._.clone(YvGridProp),\r\n      ...this.vjson\r\n    })\r\n    const resultCols = []\r\n\r\n    //显示序号列\r\n    if (this.showRowNumber) {\r\n      resultCols.push({\r\n        field: '__ID__',\r\n        headerName: CtlGridLocale.rownumber,\r\n        width: 52,\r\n        //minWidth: 52,\r\n        maxWidth: 160,\r\n        pinned: 'left',\r\n        resizable: true,\r\n        sortable: false,\r\n        cellRenderer: 'CtlGridIdRender'\r\n      })\r\n    }\r\n\r\n    //显示勾选框\r\n    if (this.checkbox) {\r\n      resultCols.push({\r\n        field: '__CB__',\r\n        headerName: '',\r\n        width: 40,\r\n        minWidth: 40,\r\n        maxWidth: 40,\r\n        pinned: 'left',\r\n        resizable: false,\r\n        sortable: false,\r\n        cellRenderer: 'CtlGridCellCheckbox',\r\n        headerComponent: 'CtlGridHeadCheckbox',\r\n        cellRendererParams: {\r\n          isCheckedIds: true\r\n        }\r\n      })\r\n    }\r\n\r\n    //添加自定义列\r\n    this._gridCols(resultCols)\r\n\r\n    let columnDefs = resultCols\r\n    if (!this.columnGroup || _.size(this.columnGroup) <= 0) {\r\n      //没有多级表头\r\n      columnDefs = resultCols\r\n    } else {\r\n      //二级表头\r\n      columnDefs = []\r\n      let j = 0\r\n      let currentGroup: any\r\n      let currentGroupSpan = -1\r\n\r\n      for (let i = 0; i < resultCols.length; i++) {\r\n        const { from, title, span, width } = this.columnGroup[j]\r\n        const f = resultCols[i]\r\n        if (!this.columnGroup[j]) {\r\n          columnDefs.push(f)\r\n        }\r\n\r\n        if (currentGroupSpan > 0) {\r\n          currentGroup.children.push(f)\r\n          currentGroupSpan--\r\n          if (currentGroupSpan <= 0) {\r\n            j++\r\n          }\r\n        } else if (f.field === from) {\r\n          currentGroup = {\r\n            width: width,\r\n            headerName: title,\r\n            children: [f]\r\n          }\r\n          currentGroupSpan = span - 1\r\n          columnDefs.push(currentGroup)\r\n        } else {\r\n          columnDefs.push(f)\r\n        }\r\n      }\r\n    }\r\n\r\n    const gridOptions = {\r\n      headerHeight: 35,\r\n      rowHeight: 33,\r\n      suppressRowHoverHighlight: true,\r\n      columnDefs,\r\n      animateRows: false,\r\n      suppressCellSelection: !this.allowCellSelection,\r\n      suppressRowClickSelection: !this.allowRowSelection,\r\n      suppressColumnMoveAnimation: true,\r\n      pagination: this.pagination,\r\n      paginationPageSize: this.pageSize,\r\n      localeText: CtlGridLocale,\r\n      rowModelType: 'infinite',\r\n      infiniteInitialRowCount: 200,\r\n      //maxConcurrentDatasourceRequests: 2,\r\n      maxBlocksInCache: 5,\r\n      //cacheOverflowSize\r\n      rowSelection: 'single',\r\n      enableBrowserTooltips: true,\r\n      //enableCellChangeFlash: true,\r\n      singleClickEdit: this.editSingleClick,\r\n      floatingFilter: false,\r\n      stopEditingWhenGridLosesFocus: this.stopEditingWhenGridLosesFocus,\r\n\r\n      onFirstDataRendered: this._firstDataRendered.bind(this),\r\n\r\n      onGridReady: this._gridReady.bind(this),\r\n      tabToNextCell: this._tabToNextCell.bind(this),\r\n      navigateToNextCell: this._navigateToNextCell.bind(this),\r\n      onCellKeyDown: this._cellKeyDown.bind(this),\r\n      onRowDoubleClicked: this._rowDoubleClicked.bind(this),\r\n      onCellEditingStarted: this._cellEditingStarted.bind(this),\r\n      onCellEditingStopped: this._cellEditingStopped.bind(this),\r\n      onRowSelected: this._rowSelected.bind(this),\r\n      onModelUpdated: this._modelUpdated.bind(this),\r\n      onCellFocused: this._cellFocused.bind(this),\r\n      onCellClicked: this._cellClicked.bind(this),\r\n      enterMovesDown: false,\r\n      enterMovesDownAfterEdit: false,\r\n\r\n      components: {\r\n        CtlGridCellButton: CtlGridCellButton,\r\n        CtlGridCellCheckbox: CtlGridCellCheckbox,\r\n        CtlGridHeadCheckbox: CtlGridHeadCheckbox,\r\n        CtlGridEditorText: CtlGridEditorText,\r\n        CtlGridEditorCombo: CtlGridEditorCombo,\r\n        // // YvGridEditorDate: YvGridEditorDate,\r\n        CtlGridFilterSet: CtlGridFilterSet,\r\n        CtlGridIdRender: this.setRowId.bind(this) //CtlGridIdRender.bind(this)\r\n      }\r\n    }\r\n\r\n    if (_.isArray(this.dataSource)) {\r\n      //有数据，按 client 模式加载数据\r\n      _.assign(gridOptions, {\r\n        rowModelType: 'clientSide',\r\n        rowData: this.data,\r\n        data: []\r\n      })\r\n    }\r\n\r\n    if (this.pagination) {\r\n      _.assign(gridOptions, {\r\n        rowModelType: 'clientSide',\r\n        rowData: [],\r\n        data: []\r\n      })\r\n    }\r\n\r\n    return gridOptions\r\n  }\r\n\r\n  private _gridReady() {\r\n    this.isGridReadReady = true\r\n    /** 分页视图 **/\r\n    this.gridPage = new CtlGridPage(this)\r\n    this._rebindDataSource()\r\n  }\r\n\r\n  private _resetGrid() {\r\n    this.isGridReadReady = false\r\n    const gridOptions = this._gridOptions()\r\n    const $el = $(this._webix._viewobj).find('[role=\"yvGrid\"]')[0]\r\n    const grid: any = new agGrid.Grid($el, gridOptions)\r\n    grid.gridOptions.api.vue = this\r\n    this.gridApi = grid.gridOptions.api\r\n    this.columnApi = grid.gridOptions.columnApi\r\n\r\n    //去掉 ag-unselectable 使表格允许被选定\r\n    if ($el) {\r\n      $($el)\r\n        .find('.ag-root.ag-unselectable')\r\n        .removeClass('ag-unselectable')\r\n    }\r\n  }\r\n\r\n  _rowDoubleClicked(e: any) {\r\n    YvEventDispatch(this.onRowDblClick, this, e.data)\r\n  }\r\n\r\n  /**\r\n   * 获取下拉框的数据选项\r\n   */\r\n  _getComboFilterData(easyuiCol: any) {\r\n    if (easyuiCol.editMode === 'combo') {\r\n      if (typeof easyuiCol.editParams.data === 'string') {\r\n        if (YvanUI.dict.hasOwnProperty(easyuiCol.editParams.data)) {\r\n          return YvanUI.dict[easyuiCol.editParams.data]\r\n        } else if (YvanUI.formatter.hasOwnProperty(easyuiCol.editParams.data)) {\r\n          return YvanUI.formatter[easyuiCol.editParams.data]\r\n        } else {\r\n          console.error(\r\n            '没有发现全局函数 YvanUI.formatter[dict].' +\r\n            easyuiCol.editParams.data\r\n          )\r\n        }\r\n      } else if (easyuiCol.editParams.data.constructor === Array) {\r\n        const editParams = easyuiCol.editParams\r\n        return _.map(editParams.data, item => {\r\n          return {\r\n            id: item[editParams.idField],\r\n            text: item[editParams.textField]\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    let formatter = easyuiCol.formatter\r\n    if (typeof easyuiCol.formatter === 'string') {\r\n      // formatter 是字符串，从全局 YvanUI.formatter 找方法\r\n      if (YvanUI.dict.hasOwnProperty(easyuiCol.formatter)) {\r\n        formatter = YvanUI.dict[easyuiCol.formatter]\r\n      } else if (YvanUI.formatter.hasOwnProperty(easyuiCol.formatter)) {\r\n        easyuiCol.formatter = YvanUI.formatter[easyuiCol.formatter]\r\n      } else {\r\n        console.error(\r\n          '没有发现全局函数 YvanUI.formatter[dict].' + easyuiCol.editParams.data\r\n        )\r\n      }\r\n    }\r\n\r\n    if (formatter && formatter.constructor === Array) {\r\n      // formatter 是数组，就是下拉数据本身\r\n      return formatter\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 第一次数据被渲染之后\r\n   */\r\n  _firstDataRendered() {\r\n    YvEventDispatch(this.onFirstDataRendered, this, undefined)\r\n  }\r\n\r\n  /**\r\n   * 接受更新\r\n   * 状态位显示 OK, 删除 origin 数据, 并闪烁当前行\r\n   */\r\n  _acceptChanges(node: any) {\r\n    if (node.origin) {\r\n      node.cstate = 'ok'\r\n      delete node.origin\r\n      this.flashRow(node)\r\n      node.setDataValue('__ID__', _.uniqueId())\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 清空所有状态，准备获取新数据\r\n   * 当前编辑都应该清空, 勾选也应该清空\r\n   */\r\n  _clearCache() {\r\n    this.checkedIds = []\r\n    this.gridApi.forEachNode((node: any) => {\r\n      delete node.cstate\r\n      delete node.origin\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 根据行，获取主键 ID, 当主键不存在时 返回 undefined\r\n   */\r\n  _getIdByRow(row: any) {\r\n    if (!row) return\r\n    if (this.idField) {\r\n      if (this.idField.constructor === Array) {\r\n        //联合组件，用valueSep分割\r\n        return _.map(this.idField, f => _.toString(row[f])).join(this.valueSep)\r\n      }\r\n\r\n      return row[this.idField]\r\n    }\r\n    console.error('表格没有设置主键！！')\r\n    return undefined\r\n  }\r\n\r\n  /**\r\n   * 重新绑定数据源\r\n   */\r\n  _rebindDataSource() {\r\n    if (this.dataSourceBind) {\r\n      this.dataSourceBind.destory()\r\n      this.dataSourceBind = undefined\r\n    }\r\n    this.dataSourceBind = new YvanDataSourceGrid(this, this.dataSource)\r\n  }\r\n\r\n  /**\r\n   * 每次 AJAX 请求完毕之后会回调这里\r\n   */\r\n  _bindingComplete() {\r\n    YvEventDispatch(this.onBindingComplete, this, undefined)\r\n  }\r\n\r\n  /**\r\n   * 找到某行的 node, （一旦匹配到 condition 就停止）\r\n   */\r\n  _findNode(condition: GridSelectCondition) {\r\n    if (!condition) {\r\n      //返回第一条被找到的数据\r\n      condition = () => true\r\n    } else if (typeof condition === 'string') {\r\n      //以主键查找的方式\r\n      const key = condition\r\n      condition = (n: any) => {\r\n        return this._getIdByRow(n.data) === key\r\n      }\r\n    } else if (typeof condition === 'object') {\r\n      //就是 node 对象, 直接返回\r\n      return condition\r\n    }\r\n\r\n    const me = this\r\n    let findNode = undefined\r\n    try {\r\n      this.gridApi.forEachNode((node: any) => {\r\n        if ((condition as any).call(me, node)) {\r\n          findNode = node\r\n          throw Error()\r\n        }\r\n      })\r\n    } catch (e) { }\r\n    return findNode\r\n  }\r\n\r\n  _cellKeyDown(param: any) {\r\n    //event.stopPropagation();\r\n    //event.preventDefault();\r\n\r\n    //通知外部\r\n    const r = YvEventDispatch(this.onKeyDown, this, param)\r\n    if (r === true) {\r\n      //已经被自定义函数处理掉\r\n      return\r\n    }\r\n\r\n    if (param.event.keyCode === 13) {\r\n      param.event.stopPropagation()\r\n      param.event.preventDefault()\r\n      return\r\n    }\r\n\r\n    if (param.event.keyCode === 27) {\r\n      //按下 ESC 还原数据到 origin 状态, 并删除所有编辑形式\r\n      if (param.node.origin) {\r\n        param.event.stopPropagation()\r\n        param.event.preventDefault()\r\n\r\n        const data = {\r\n          ...param.data,\r\n          ...param.node.origin\r\n        }\r\n        delete param.node.cstate\r\n        delete param.node.origin\r\n        param.node.updateData(data)\r\n        param.node.setDataValue('__ID__', _.uniqueId())\r\n      }\r\n    }\r\n    //console.log('cellKeyDown', param);\r\n  }\r\n\r\n  _modelUpdated() {\r\n    if (this.autoSizeColumns && this.gridApi) {\r\n      this.gridApi.sizeColumnsToFit()\r\n    }\r\n  }\r\n\r\n  _cellFocused(param: any) {\r\n    YvEventDispatch(this.onCellFocused, this, param)\r\n  }\r\n\r\n  _cellClicked(param: any) {\r\n    YvEventDispatch(this.onCellClicked, this, param)\r\n  }\r\n\r\n  _rowSelected(param: any) {\r\n    const { node } = param\r\n    const { selected, id } = node\r\n\r\n    if (!selected) {\r\n      //行离开事件,查看是否有数据正在编辑，提交校验\r\n      this._rowEditingStopped(id, param)\r\n      return\r\n    }\r\n\r\n    //触发 entity 改变\r\n    if (_.size(this.entityName) > 0) {\r\n      _.set(this.getModule(), this.entityName + '.selectedRow', param.data)\r\n      //this.vcxt.module.$set(this.vcxt.module[this.entityName], \"selectedRow\", param.data);\r\n    }\r\n\r\n    //触发 onRowSelect 事件\r\n    YvEventDispatch(this.onRowSelect, this, param.data)\r\n  }\r\n\r\n  _cellEditingStarted(param: any) {\r\n    let rowId\r\n    if (param.node.rowPinned === 'top') {\r\n      //在添加行上\r\n      rowId = -1\r\n    } else if (!param.node.rowPinned) {\r\n      //在数据行上\r\n      rowId = param.node.id\r\n    }\r\n    this._rowEditingStarted(rowId, param)\r\n  }\r\n\r\n  _cellEditingStopped(param: any) {\r\n    //触发单元格校验事件\r\n    if (this.saveOn !== 'editFinish') {\r\n      //保存时机，是不是结束编辑后立刻保存\r\n      return\r\n    }\r\n\r\n    const origin = param.node.origin\r\n    if (!origin) {\r\n      // 这一行没有进入过编辑模式\r\n      return\r\n    }\r\n\r\n    const data = _.cloneDeep(param.data)\r\n    delete data['__ID__']\r\n    delete data['__CB__']\r\n\r\n    _.forOwn(origin, (value, key) => {\r\n      if (typeof value === 'number') {\r\n        origin[key] = _.toString(value)\r\n      }\r\n    })\r\n    _.forOwn(data, (value, key) => {\r\n      if (typeof value === 'number') {\r\n        data[key] = _.toString(value)\r\n      }\r\n    })\r\n\r\n    if (_.isEqual(origin, data)) {\r\n      //相同，改变状态位 same\r\n      param.node.cstate = 'same'\r\n    } else {\r\n      //不相同, 提交校验\r\n      param.node.cstate = 'validate'\r\n\r\n      if (this.dataSourceBind) {\r\n        if (this.dataSourceBind.updateSupport()) {\r\n          this.dataSourceBind._updateRow(param)\r\n        }\r\n      }\r\n      //console.log(this.dataSource, param.node)\r\n      //setTimeout(() => {\r\n      //    this._acceptChanges(param.node)\r\n      //}, 2000)\r\n    }\r\n    param.node.setDataValue('__ID__', _.uniqueId())\r\n  }\r\n\r\n  _rowEditingStarted(rowId: any, param: any) {\r\n    if (!param.node.origin) {\r\n      // 以前从来没有编辑过这一行, 记录 origin\r\n      const data = _.cloneDeep(param.data)\r\n      delete data['__ID__']\r\n      delete data['__CB__']\r\n      param.node.origin = data\r\n    }\r\n\r\n    param.node.cstate = 'editing'\r\n    param.node.setDataValue('__ID__', _.uniqueId())\r\n  }\r\n\r\n  _rowEditingStopped(rowId: any, param: any) {\r\n    if (this.saveOn !== 'rowChanged') {\r\n      //保存时机，是不是行更改后立刻保存\r\n      return\r\n    }\r\n\r\n    const origin = param.node.origin\r\n    if (!origin) {\r\n      // 这一行没有进入过编辑模式\r\n      return\r\n    }\r\n\r\n    const data = _.cloneDeep(param.data)\r\n    delete data['__ID__']\r\n    delete data['__CB__']\r\n\r\n    _.forOwn(origin, (value, key) => {\r\n      if (typeof value === 'number') {\r\n        origin[key] = _.toString(value)\r\n      }\r\n    })\r\n    _.forOwn(data, (value, key) => {\r\n      if (typeof value === 'number') {\r\n        data[key] = _.toString(value)\r\n      }\r\n    })\r\n\r\n    if (_.isEqual(origin, data)) {\r\n      //相同，改变状态位 same\r\n      param.node.cstate = 'same'\r\n    } else {\r\n      //不相同, 提交校验\r\n      param.node.cstate = 'validate'\r\n\r\n      if (this.dataSourceBind) {\r\n        this.dataSourceBind._updateRow(param)\r\n      }\r\n      //console.log(this.dataSource, param.node)\r\n      //setTimeout(() => {\r\n      //    this._acceptChanges(param.node)\r\n      //}, 2000)\r\n    }\r\n    param.node.setDataValue('__ID__', _.uniqueId())\r\n  }\r\n\r\n  /**\r\n   * Tab键导航\r\n   */\r\n  _tabToNextCell(params: any) {\r\n    const previousCell = params.previousCellPosition\r\n    const nextCellPosition = params.nextCellPosition\r\n\r\n    //tab 永不换行\r\n    return {\r\n      ...nextCellPosition,\r\n      rowIndex: previousCell.rowIndex\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 上下左右键导航\r\n   */\r\n  _navigateToNextCell(params: any) {\r\n    const KEY_LEFT = 37\r\n    const KEY_UP = 38\r\n    const KEY_RIGHT = 39\r\n    const KEY_DOWN = 40\r\n\r\n    const previousCell = params.previousCellPosition\r\n    const suggestedNextCell = params.nextCellPosition\r\n    switch (params.key) {\r\n      case KEY_UP: {\r\n        const nextRowIndex = previousCell.rowIndex - 1\r\n        if (nextRowIndex < 0) {\r\n          // returning null means don't navigate\r\n          return null\r\n        }\r\n        this.selectRow(node => node.rowIndex === nextRowIndex)\r\n        return {\r\n          rowIndex: nextRowIndex,\r\n          column: previousCell.column,\r\n          floating: previousCell.floating\r\n        }\r\n      }\r\n\r\n      case KEY_DOWN: {\r\n        // return the cell below\r\n        const rowIndex = previousCell.rowIndex + 1\r\n        const renderedRowCount = this.gridApi.getModel().getRowCount()\r\n        if (rowIndex >= renderedRowCount) {\r\n          // returning null means don't navigate\r\n          return null\r\n        }\r\n        this.selectRow(node => node.rowIndex === rowIndex)\r\n        return {\r\n          rowIndex: rowIndex,\r\n          column: previousCell.column,\r\n          floating: previousCell.floating\r\n        }\r\n      }\r\n\r\n      case KEY_LEFT:\r\n      case KEY_RIGHT:\r\n        return suggestedNextCell\r\n      default:\r\n        throw 'this will never happen, navigation is always one of the 4 keys above'\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 列设置计算\r\n   */\r\n  _gridCols(resultCols: any[]): void {\r\n    _.each(this.columns, column => {\r\n      const easyuiCol = _.merge(\r\n        {\r\n          ..._.clone(YvGridColumnProp),\r\n          editParams: {\r\n            ..._.clone(YvGridColumnEditProp)\r\n          }\r\n        },\r\n        column\r\n      )\r\n\r\n      //=========================== 设计模式属性 ===========================\r\n      // if (this._isDesignMode) {\r\n      //     resultCols.push({\r\n      //         suppressMovable: true,\r\n      //         field: easyuiCol.field,\r\n      //         headerName: easyuiCol.title,\r\n      //         resizable: true,\r\n      //         filter: false,\r\n      //         editable: false,\r\n      //         sortable: false,\r\n      //         //unSortIcon: true,\r\n      //         hide: false,\r\n      //         width: easyuiCol.width,\r\n      //         minWidth: easyuiCol.minwidth,\r\n      //         maxWidth: easyuiCol.maxwidth\r\n      //     });\r\n      //     return;\r\n      // }\r\n\r\n      //=========================== 基本属性 ===========================\r\n      const col: any = {\r\n        suppressMovable: true,\r\n        field: easyuiCol.field,\r\n        headerName: easyuiCol.title,\r\n        resizable: easyuiCol.resizable,\r\n        filter: false,\r\n        editable: false,\r\n        sortable: easyuiCol.sortable,\r\n        //unSortIcon: true,\r\n        hide: easyuiCol.hidden\r\n      }\r\n\r\n      if (typeof easyuiCol.width !== 'undefined') col.width = easyuiCol.width\r\n      if (typeof easyuiCol.minwidth !== 'undefined')\r\n        col.minWidth = easyuiCol.minwidth\r\n      if (typeof easyuiCol.maxwidth !== 'undefined')\r\n        col.maxWidth = easyuiCol.maxwidth\r\n\r\n      if (typeof easyuiCol.align !== 'undefined') {\r\n        col.cellClass = function (params: any) {\r\n          return ['yv-align-' + easyuiCol.align]\r\n        }\r\n      }\r\n\r\n      if (_.size(easyuiCol.field) > 0) {\r\n        col.tooltipField = easyuiCol.field\r\n      }\r\n\r\n      //=========================== buttons 属性 ===========================\r\n      if (easyuiCol.buttons) {\r\n        //col.cellRendererFramework = 'yvGridButton'\r\n        col.cellRenderer = 'CtlGridCellButton'\r\n        col.cellRendererParams = {\r\n          buttons: easyuiCol.buttons\r\n        }\r\n      }\r\n\r\n      //=========================== 编辑与formatter属性 ===========================\r\n      const { editParams } = easyuiCol\r\n      let formatable = false\r\n      if (easyuiCol.editable) {\r\n        if (easyuiCol.editMode === 'checkbox') {\r\n          //勾选框编辑\r\n          formatable = false\r\n          col.cellRenderer = 'CtlGridCellCheckbox'\r\n          col.cellRendererParams = {\r\n            editParams: easyuiCol.editParams,\r\n            on: editParams.on,\r\n            off: editParams.off,\r\n            onChange: (newValue: any) => {\r\n              YvEventDispatch(editParams.onValidate, this, {\r\n                value: newValue\r\n              })\r\n            },\r\n            onValidate: (value: any) => {\r\n              YvEventDispatch(editParams.onValidate, this, {\r\n                value: value\r\n              })\r\n            }\r\n          }\r\n\r\n          if (easyuiCol.editable) {\r\n            //允许编辑\r\n            _.assign(col, {\r\n              editable: true,\r\n              cellEditor: 'CtlGridEditorCombo',\r\n              cellEditorParams: {\r\n                editParams: easyuiCol.editParams,\r\n                options: [\r\n                  { id: editParams.on, text: '勾选' },\r\n                  { id: editParams.off, text: '不勾' }\r\n                ],\r\n                onChange: (newValue: any) => {\r\n                  YvEventDispatch(editParams.onValidate, this, {\r\n                    value: newValue\r\n                  })\r\n                },\r\n                onValidate: (value: any) => {\r\n                  YvEventDispatch(editParams.onValidate, this, {\r\n                    value: value\r\n                  })\r\n                }\r\n              }\r\n            })\r\n          }\r\n        } else if (easyuiCol.editMode === 'combo') {\r\n          //下拉框编辑\r\n          formatable = false\r\n          _.assign(col, {\r\n            editable: true,\r\n            cellEditor: 'CtlGridEditorCombo',\r\n            cellEditorParams: {\r\n              editParams: easyuiCol.editParams,\r\n              options: this._getComboFilterData(easyuiCol),\r\n              onChange: (newValue: any) => {\r\n                YvEventDispatch(editParams.onValidate, this, {\r\n                  value: newValue\r\n                })\r\n              },\r\n              onValidate: (value: any) => {\r\n                YvEventDispatch(editParams.onValidate, this, {\r\n                  value: value\r\n                })\r\n              }\r\n            }\r\n          })\r\n          //下拉框的 formatter 逻辑是固定的\r\n          const data = this._getComboFilterData(easyuiCol)\r\n          if (typeof data === 'function') {\r\n            col.valueFormatter = (params: any) => {\r\n              return data(params.value)\r\n            }\r\n          } else {\r\n            col.valueFormatter = (params: any) => {\r\n              if (_.size(params.data) <= 0) return\r\n\r\n              const optionItem = _.find(data, item => {\r\n                const id = _.toString(item['id'])\r\n                return id && id === _.toString(params.value)\r\n              })\r\n\r\n              if (optionItem) {\r\n                //找到text属性值\r\n                return optionItem['text']\r\n              }\r\n              return params.value\r\n            }\r\n          }\r\n        } else if (easyuiCol.editMode === 'area') {\r\n          //大型富文本框编辑\r\n          formatable = true\r\n          _.assign(col, {\r\n            editable: true,\r\n            cellEditor: 'agLargeTextCellEditor',\r\n            cellEditorParams: {\r\n              editParams: easyuiCol.editParams,\r\n              maxLength: editParams.maxlength\r\n            }\r\n          })\r\n        } else if (\r\n          easyuiCol.editMode === 'text' ||\r\n          easyuiCol.editMode === 'number'\r\n        ) {\r\n          //普通文本框编辑\r\n          formatable = true\r\n          _.assign(col, {\r\n            editable: true,\r\n            cellEditor: 'CtlGridEditorText',\r\n            cellEditorParams: {\r\n              type: easyuiCol.editMode,\r\n              editParams: easyuiCol.editParams,\r\n              onChange: (newValue: any) => {\r\n                YvEventDispatch(editParams.onValidate, this, {\r\n                  value: newValue\r\n                })\r\n              },\r\n              onValidate: (value: any) => {\r\n                YvEventDispatch(editParams.onValidate, this, {\r\n                  value: value\r\n                })\r\n              },\r\n              onInput: (e: any) => {\r\n                YvEventDispatch(editParams.onInput, this, this, {\r\n                  event: e\r\n                })\r\n              }\r\n            }\r\n          })\r\n        } else if (\r\n          easyuiCol.editMode === 'date' ||\r\n          easyuiCol.editMode === 'datetime'\r\n        ) {\r\n          formatable = true\r\n          // _.assign(col, {\r\n          //     editable: true,\r\n          //     cellEditor: \"YvGridEditorDate\",\r\n          //     cellEditorParams: {\r\n          //         type: easyuiCol.editMode,\r\n          //         editParams: easyuiCol.editParams,\r\n          //         onChange: newValue => {\r\n          //             this.$yvDispatch(editParams.onValidate, newValue, this.getEditRow());\r\n          //         },\r\n          //         onValidate: value => {\r\n          //             this.$yvDispatch(editParams.onValidate, value, this.getEditRow());\r\n          //         },\r\n          //         onInput: e => {\r\n          //             this.$yvDispatch(editParams.onInput, e, this.getEditRow());\r\n          //         }\r\n          //     }\r\n          // });\r\n          console.error('not support date editor')\r\n        }\r\n      } else {\r\n        //不允许编辑的情况，全都允许格式化\r\n        formatable = true\r\n      }\r\n\r\n      //=========================== formatter属性 ===========================\r\n      if (formatable) {\r\n        const data = this._getComboFilterData(easyuiCol)\r\n        if (data) {\r\n          //从下拉框逻辑中找到了固定映射关系\r\n          col.valueFormatter = (params: any) => {\r\n            if (_.size(params.data) <= 0) return undefined\r\n            const optionItem = _.find(data, item => {\r\n              const id = _.toString(item['id'])\r\n              return id && id === _.toString(params.value)\r\n            })\r\n\r\n            if (optionItem) {\r\n              //找到text属性值\r\n              return optionItem['text']\r\n            }\r\n            return params.value\r\n          }\r\n        } else {\r\n          //以 function 方式获得显示逻辑\r\n          let formatter = easyuiCol.formatter\r\n          if (typeof easyuiCol.formatter === 'string') {\r\n            // formatter 是字符串，从全局 YvanUI.formatter 找方法\r\n            if (!YvanUI.formatter.hasOwnProperty(easyuiCol.formatter)) {\r\n              console.error(\r\n                '没有发现全局函数 YvanUI.formatter.' + easyuiCol.formatter\r\n              )\r\n            } else {\r\n              formatter = YvanUI.formatter[easyuiCol.formatter]\r\n            }\r\n          }\r\n\r\n          if (typeof formatter === 'function') {\r\n            //formatter 是函数，调用函数来显示\r\n            col.valueFormatter = (params: any) => {\r\n              if (_.size(params.data) <= 0) return undefined\r\n              return formatter.call(\r\n                this,\r\n                params.data[easyuiCol.field],\r\n                this,\r\n                params.data\r\n              )\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      //=========================== 过滤属性 ===========================\r\n      if (this.filterable && easyuiCol.filterable && !easyuiCol.hidden) {\r\n        const datas = this._getComboFilterData(easyuiCol)\r\n        if (typeof datas === 'object') {\r\n          //下拉框过滤\r\n          _.assign(col, {\r\n            filter: 'CtlGridFilterSet',\r\n            //suppressMenu: true,\r\n            filterParams: {\r\n              data: datas\r\n            }\r\n          })\r\n        } else if (easyuiCol.editMode === 'number') {\r\n          //数字过滤\r\n          _.assign(col, {\r\n            filter: 'agNumberColumnFilter',\r\n            //suppressMenu: true,\r\n            filterParams: {\r\n              applyButton: true,\r\n              clearButton: true,\r\n              suppressAndOrCondition: true\r\n              //filterOptions: [\r\n              //    'equals',\r\n              //    'notEqual',\r\n              //    'lessThan',\r\n              //    'greaterThan',\r\n              //    'lessThanOrEqual',\r\n              //    'greaterThanOrEqual',\r\n              //]\r\n            }\r\n          })\r\n        } else if (\r\n          easyuiCol.editMode === 'date' ||\r\n          easyuiCol.editMode === 'datetime'\r\n        ) {\r\n          //日期筛选\r\n          _.assign(col, {\r\n            filter: 'agDateColumnFilter',\r\n            filterParams: {\r\n              applyButton: true,\r\n              clearButton: true,\r\n              filterOptions: ['inRange'],\r\n              suppressAndOrCondition: true,\r\n              comparator: function (\r\n                filterLocalDateAtMidnight: any,\r\n                cellValue: any\r\n              ) {\r\n                const dateAsString = cellValue\r\n                if (dateAsString == null) return 0\r\n\r\n                // In the example application, dates are stored as dd/mm/yyyy\r\n                // We create a Date object for comparison against the filter date\r\n                const dateParts = dateAsString.split('/')\r\n                const day = Number(dateParts[2])\r\n                const month = Number(dateParts[1]) - 1\r\n                const year = Number(dateParts[0])\r\n                const cellDate = new Date(day, month, year)\r\n\r\n                // Now that both parameters are Date objects, we can compare\r\n                if (cellDate < filterLocalDateAtMidnight) {\r\n                  return -1\r\n                }\r\n                if (cellDate > filterLocalDateAtMidnight) {\r\n                  return 1\r\n                }\r\n                return 0\r\n              }\r\n            }\r\n          })\r\n        } else {\r\n          //其他情况都是字符串筛选\r\n          _.assign(col, {\r\n            filter: 'agTextColumnFilter',\r\n            filterParams: {\r\n              applyButton: true,\r\n              clearButton: true,\r\n              filterOptions: ['startsWith', 'equals', 'contains'],\r\n              suppressAndOrCondition: true,\r\n              textFormatter: function (r: any) {\r\n                if (r == null) return null\r\n                r = r.replace(new RegExp('[àáâãäå]', 'g'), 'a')\r\n                r = r.replace(new RegExp('æ', 'g'), 'ae')\r\n                r = r.replace(new RegExp('ç', 'g'), 'c')\r\n                r = r.replace(new RegExp('[èéêë]', 'g'), 'e')\r\n                r = r.replace(new RegExp('[ìíîï]', 'g'), 'i')\r\n                r = r.replace(new RegExp('ñ', 'g'), 'n')\r\n                r = r.replace(new RegExp('[òóôõøö]', 'g'), 'o')\r\n                r = r.replace(new RegExp('œ', 'g'), 'oe')\r\n                r = r.replace(new RegExp('[ùúûü]', 'g'), 'u')\r\n                r = r.replace(new RegExp('[ýÿ]', 'g'), 'y')\r\n                return r\r\n              }\r\n            }\r\n          })\r\n        }\r\n      }\r\n\r\n      //=========================== 渲染属性 ===========================\r\n      if (typeof easyuiCol.onStyle === 'function') {\r\n        _.assign(col, {\r\n          cellStyle: (param: any) => {\r\n            return easyuiCol.onStyle.call(this, param)\r\n          }\r\n        })\r\n      }\r\n\r\n      resultCols.push(col)\r\n    })\r\n  }\r\n}\r\n\r\nexport type GridSelectCondition = ((row: any) => boolean) | string\r\n","import { CtlInput } from '../input/CtlInput'\r\nimport { parseYvanPropChangeVJson } from '../../CtlUtils'\r\nimport { CtlSwitchDefault } from '../../CtlDefaultValue'\r\n\r\nexport class CtlSwitch extends CtlInput<CtlSwitch> {\r\n  static create(vjson: any): CtlSwitch {\r\n    const that = new CtlSwitch(vjson)\r\n\r\n    _.defaultsDeep(vjson, CtlSwitchDefault)\r\n\r\n    // 基础属性先执行\r\n    that._create(vjson, that)\r\n\r\n    const yvanProp = parseYvanPropChangeVJson(vjson, ['value'])\r\n\r\n    // 将 yvanProp 合并至当前 Ctl 对象\r\n    _.assign(that, yvanProp)\r\n\r\n    // 将 _webixConfig 合并至 vjson, 最终合交给 webix 做渲染\r\n    _.merge(vjson, that._webixConfig, {\r\n      view: 'switch',\r\n      on: {}\r\n    })\r\n\r\n    return that\r\n  }\r\n\r\n  /**\r\n   * 交换状态\r\n   */\r\n  toggle() {\r\n    this._webix.toggle()\r\n  }\r\n\r\n  /**\r\n   * 设置值\r\n   */\r\n  set value(nv: any) {\r\n    if (!this._webix) {\r\n      this._webixConfig.value = nv\r\n    } else {\r\n      this._webix.setValueHere(nv)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取值\r\n   */\r\n  get value(): any {\r\n    if (!this._webix) {\r\n      return this._webixConfig.value\r\n    }\r\n    return this._webix.getValue()\r\n  }\r\n}\r\n","import { CtlInput } from './CtlInput'\r\nimport { parseYvanPropChangeVJson } from '../../CtlUtils'\r\nimport { CtlNumberDefault } from '../../CtlDefaultValue'\r\n\r\nexport class CtlNumber extends CtlInput<CtlNumber> {\r\n  static create(vjson: any): CtlNumber {\r\n    const that = new CtlNumber(vjson)\r\n\r\n    _.defaultsDeep(vjson, CtlNumberDefault)\r\n\r\n    // 基础属性先执行\r\n    that._create(vjson, that)\r\n\r\n    const yvanProp = parseYvanPropChangeVJson(vjson, ['precision'])\r\n\r\n    // 将 yvanProp 合并至当前 Ctl 对象\r\n    _.assign(that, yvanProp)\r\n\r\n    // 将 _webixConfig 合并至 vjson, 最终合交给 webix 做渲染\r\n    _.merge(vjson, that._webixConfig, {\r\n      view: 'text',\r\n      type: 'number'\r\n      // attr: {\r\n      //     min: \"0.00\",\r\n      //     step: \"0.01\"\r\n      // }\r\n    })\r\n\r\n    return that\r\n  }\r\n\r\n  /*============================ 公共属性部分 ============================*/\r\n  public precision?: number\r\n\r\n  private _testNumber(value: any) {\r\n    if (this.precision && this.precision > 0) {\r\n      value = value.replace(/[^\\d.-]/g, '') //清除\"数字\"和\".\"以外的字符\r\n      if (value.length > 1 && value.indexOf('.') > 1) {\r\n        let t\r\n        while (1) {\r\n          t = value\r\n          value = value.replace(/^0/g, '')\r\n          if (t.length === value.length) {\r\n            break\r\n          }\r\n        }\r\n        //value = value.replace(/^0/g, '') //验证第一个字符不是0.\r\n      }\r\n      value = value.replace(/^\\./g, '') //验证第一个字符是数字而不是.\r\n      value = value.replace(/\\.{2,}/g, '.') //只保留第一个. 清除多余的.\r\n      value = value\r\n        .replace('.', '$#$')\r\n        .replace(/\\./g, '')\r\n        .replace('$#$', '.') //只允许输入一个小数点\r\n\r\n      const r = eval('/^(\\\\-)*(\\\\d+)\\\\.(\\\\d{0,' + this.precision + '}).*$/')\r\n      value = value.replace(r, '$1$2.$3') //只能输入固定位数的小数\r\n    } else {\r\n      value = value.replace(/[^\\d-]/g, '') //清除\"数字\"和\"-\"以外的字符\r\n      if (value.length > 1) {\r\n        value = value.replace(/^0/g, '') //验证第一个字符不是0.\r\n      }\r\n      if (value.startsWith('-')) {\r\n        value = '-' + value.substr(1).replace(/[^\\d]/g, '')\r\n      } else {\r\n        value = value.replace(/[^\\d]/g, '')\r\n      }\r\n    }\r\n    return value\r\n  }\r\n\r\n  onInputEvent(e: Event) {\r\n    let value = (e.target as any).value\r\n    ;(e.target as any).value = this._testNumber(value)\r\n    super.onInputEvent(e)\r\n  }\r\n\r\n  /**\r\n   * 设置值 (如果不符合数字或小数位数格式，会被清空)\r\n   */\r\n  set value(nv: any) {\r\n    nv = this._testNumber(nv)\r\n    if (!this._webix) {\r\n      this._webixConfig.value = nv\r\n    } else {\r\n      this._webix.setValue(nv)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取值(可能取到空值)\r\n   */\r\n  get value(): any {\r\n    if (!this._webix) {\r\n      return this._webixConfig.value\r\n    }\r\n    return this._webix.getValue()\r\n  }\r\n}\r\n","import { CtlInput } from '../input/CtlInput'\r\nimport { parseYvanPropChangeVJson } from '../../CtlUtils'\r\nimport { CtlRadioDefault } from '../../CtlDefaultValue'\r\n\r\nexport class CtlRadio extends CtlInput<CtlRadio> {\r\n  static create(vjson: any): CtlRadio {\r\n    const that = new CtlRadio(vjson)\r\n\r\n    _.defaultsDeep(vjson, CtlRadioDefault)\r\n\r\n    // 基础属性先执行\r\n    that._create(vjson, that)\r\n\r\n    const yvanProp = parseYvanPropChangeVJson(vjson, ['options'])\r\n\r\n    // 将 yvanProp 合并至当前 Ctl 对象\r\n    _.assign(that, yvanProp)\r\n\r\n    // 将 _webixConfig 合并至 vjson, 最终合交给 webix 做渲染\r\n    _.merge(vjson, that._webixConfig, {\r\n      view: 'radio',\r\n      on: {}\r\n    })\r\n\r\n    return that\r\n  }\r\n\r\n  /**\r\n   * 修改下拉选项\r\n   */\r\n  set options(nv: any[]) {\r\n    const value = nv.map(item => {\r\n      return { id: item.id, value: item.text }\r\n    })\r\n\r\n    if (!this._webix) {\r\n      _.merge(this._webixConfig, {\r\n        options: value\r\n      })\r\n      return\r\n    }\r\n    this._webix.define('options', value)\r\n    this._webix.refresh()\r\n  }\r\n}\r\n","import { CtlBase } from './CtlBase'\r\nimport { CtlCodeMirrorDefault } from './CtlDefaultValue'\r\nimport { parseYvanPropChangeVJson } from './CtlUtils'\r\nimport webix from 'webix'\r\n\r\nwebix.protoUI(\r\n  {\r\n    name: 'codemirror-editor',\r\n    defaults: {},\r\n    $init: function(config: any) {\r\n      this.$view.innerHTML =\r\n        \"<textarea style='width:100%;height:100%;'></textarea>\"\r\n      this._waitEditor = webix.promise.defer()\r\n      this.$ready.push(this._render_cm_editor)\r\n      _.extend(this.config, config)\r\n      if (config.on && typeof config.on.onInited === 'function') {\r\n        config.on.onInited.call(this)\r\n      }\r\n    },\r\n    _render_cm_editor: function() {\r\n      this._render_when_ready()\r\n      // if (this.config.cdn === false) {\r\n      //     this._render_when_ready;\r\n      //     return;\r\n      // }\r\n      //\r\n      // var cdn = this.config.cdn || \"//cdn.bootcss.com/codemirror/5.38.0/\";\r\n      // // basic\r\n      // var sources = [\r\n      //     cdn + \"/codemirror.css\",\r\n      //     cdn + \"/codemirror.js\"\r\n      // ];\r\n      //\r\n      // // mode\r\n      // if (this.config.mode === \"htmlmixed\") {\r\n      //     sources.push(cdn + \"/mode/xml/xml.js\");\r\n      //     sources.push(cdn + \"/mode/css/css.js\");\r\n      //     sources.push(cdn + \"/mode/javascript/javascript.js\");\r\n      //\r\n      // } else {\r\n      //     var mode = this.config.mode ? this.config.mode : \"javascript\";\r\n      //     sources.push(cdn + \"/mode/\" + mode + \"/\" + mode + \".js\");\r\n      // }\r\n      //\r\n      // // theme\r\n      // if (this.config.theme && this.config.theme !== \"default\") {\r\n      //     sources.push(cdn + \"/theme/\" + this.config.theme + \".css\")\r\n      // }\r\n      //\r\n      // // matchbrackets add-on\r\n      // if (this.config.matchBrackets) {\r\n      //     sources.push(cdn + \"/addon/edit/matchbrackets.js\")\r\n      // }\r\n      //\r\n      // webix.require(sources)\r\n      //     .then(webix.bind(this._render_when_ready, this))\r\n      //     .catch((e: any) => {\r\n      //         console.log(e);\r\n      //     });\r\n    },\r\n    _render_when_ready: function(this: any) {\r\n      const CodeMirror: any = _.get(window, 'CodeMirror')\r\n      this._editor = CodeMirror.fromTextArea(this.$view.firstChild, {\r\n        // mode: this.config.mode,\r\n        // lineNumbers: this.config.lineNumbers,\r\n        // matchBrackets: this.config.matchBrackets,\r\n        // theme: this.config.theme\r\n        ...this.config\r\n      })\r\n\r\n      this._waitEditor.resolve(this._editor)\r\n\r\n      this.setValue(this.config.value)\r\n      if (this._focus_await) {\r\n        this.focus()\r\n      }\r\n    },\r\n    _set_inner_size: function() {\r\n      if (!this._editor || !this.$width) return\r\n\r\n      this._updateScrollSize()\r\n      this._editor.scrollTo(0, 0) //force repaint, mandatory for IE\r\n    },\r\n    _updateScrollSize: function() {\r\n      var box = this._editor.getWrapperElement()\r\n      var height = (this.$height || 0) + 'px'\r\n\r\n      box.style.height = height\r\n      box.style.width = (this.$width || 0) + 'px'\r\n\r\n      var scroll = this._editor.getScrollerElement()\r\n      if (scroll.style.height !== height) {\r\n        scroll.style.height = height\r\n        this._editor.refresh()\r\n      }\r\n    },\r\n    $setSize: function(x: any, y: any) {\r\n      if (webix.ui.view.prototype.$setSize.call(this, x, y)) {\r\n        this._set_inner_size()\r\n      }\r\n    },\r\n    setValue: function(value: any) {\r\n      if (!value && value !== 0) {\r\n        value = ''\r\n      }\r\n\r\n      this.config.value = value\r\n      if (this._editor) {\r\n        this._editor.setValue(value)\r\n        //by default - clear editor's undo history when setting new value\r\n        if (!this.config.preserveUndoHistory) {\r\n          this._editor.clearHistory()\r\n        }\r\n        this._updateScrollSize()\r\n      }\r\n    },\r\n    getValue: function() {\r\n      return this._editor ? this._editor.getValue() : this.config.value\r\n    },\r\n    focus: function() {\r\n      this._focus_await = true\r\n      if (this._editor) {\r\n        this._editor.focus()\r\n      }\r\n    },\r\n    getEditor: function(waitEditor: any) {\r\n      return waitEditor ? this._waitEditor : this._editor\r\n    },\r\n    // //undo, redo, etc\r\n    // undo: function () {\r\n    //     this._editor.undo();\r\n    // },\r\n    // redo: function () {\r\n    //     this._editor.redo();\r\n    // },\r\n    undoLength: function() {\r\n      return this._editor.historySize().undo\r\n    }\r\n  },\r\n  webix.ui.view\r\n)\r\n\r\nexport class CtlCodeMirror extends CtlBase<CtlCodeMirror> {\r\n  static create(vjson: any): CtlCodeMirror {\r\n    const that = new CtlCodeMirror(vjson)\r\n\r\n    _.defaultsDeep(vjson, CtlCodeMirrorDefault)\r\n\r\n    const yvanProp = parseYvanPropChangeVJson(vjson, ['value'])\r\n\r\n    // 将 vjson 存至 _webixConfig\r\n    that._webixConfig = vjson\r\n\r\n    // 将 yvanProp 合并至当前 Ctl 对象, 期间会操作 _webixConfig\r\n    _.assign(that, yvanProp)\r\n\r\n    // 将 事件与 _webixConfig 一起存至 vjson 交给 webix 框架做渲染\r\n    _.merge(vjson, that._webixConfig, {\r\n      on: {\r\n        onInited(this: any) {\r\n          that.attachHandle(this)\r\n        },\r\n        onAfterDelete() {\r\n          that.removeHandle()\r\n        }\r\n      }\r\n    })\r\n\r\n    return that\r\n  }\r\n\r\n  /**\r\n   * 撤销\r\n   */\r\n  undo() {\r\n    this._webix.getEditor().undo()\r\n  }\r\n\r\n  /**\r\n   * 重做\r\n   */\r\n  redo() {\r\n    this._webix.getEditor().redo()\r\n  }\r\n\r\n  /**\r\n   * 设置值\r\n   */\r\n  set value(nv: any) {\r\n    if (!this._webix) {\r\n      this._webixConfig.value = nv\r\n    } else {\r\n      this._webix.setValue(nv)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取值\r\n   */\r\n  get value(): any {\r\n    if (!this._webix) {\r\n      return this._webixConfig.value\r\n    }\r\n\r\n    return this._webix.getValue()\r\n  }\r\n}\r\n","/* eslint-disable */\r\nimport Vue from 'vue'\r\nimport { BaseModule, BizWatch, VJson } from './YvanUIModule'\r\nimport { CtlTree } from './CtlTree'\r\nimport { CtlTreeTable } from './CtlTreeTable'\r\nimport { CtlTab } from './CtlTab'\r\nimport { CtlDataview } from './CtlDataview'\r\nimport { CtlECharts } from './CtlECharts'\r\nimport { CtlButton } from './CtlButton'\r\nimport { CtlText } from './form/input/CtlText'\r\nimport { CtlCheckBox } from './form/other/CtlCheckBox'\r\nimport { CtlCombo } from './form/select/CtlCombo'\r\nimport { CtlDatePicker } from './form/input/CtlDatePicker'\r\nimport { CtlDateRangePicker } from './form/input/CtlDateRangePicker'\r\nimport { CtlForm } from './form/CtlForm'\r\nimport { CtlMultiCombo } from './form/select/CtlMultiCombo'\r\nimport { CtlSearch } from './form/input/CtlSearch'\r\nimport { CtlCarousel } from './CtlCarousel'\r\nimport { CtlGrid } from './CtlGrid'\r\nimport { CtlSwitch } from './form/other/CtlSwitch'\r\nimport { CtlNumber } from './form/input/CtlNumber'\r\nimport { CtlRadio } from './form/other/CtlRadio'\r\nimport { CtlCodeMirror } from './CtlCodeMirror'\r\nimport webix from 'webix'\r\n\r\n// export const webix = require(\"../webix/webix\");\r\nwebix.i18n.setLocale('zh-CN')\r\n_.set(window, 'webix', webix);\r\n\r\n/**\r\n * 深度遍历 vjson\r\n * @param vjson 视图JSON\r\n * @param resolver 分析函数\r\n * @return 记录 resolver 方法返回 true 时，对象的访问路径\r\n */\r\nexport function deepTravVJson(\r\n  vjson: VJson,\r\n  resolver: (child: VJson) => any\r\n): Array<PathMarker> {\r\n  const markerList: Array<PathMarker> = []\r\n  deepTrav1(vjson, resolver, markerList)\r\n  return markerList\r\n}\r\n\r\n/**\r\n * 深度遍历 vjson 后，所有 mark 对象及访问方法\r\n */\r\nexport interface PathMarker {\r\n  id: number\r\n  keyName: string\r\n  object: any\r\n}\r\n\r\nfunction deepTrav1(\r\n  obj: VJson,\r\n  resolver: (child: VJson) => any,\r\n  marker?: Array<PathMarker>\r\n) {\r\n  let isMarker = resolver(obj)\r\n  if (marker && isMarker === true) {\r\n    marker.unshift({ id: 0, keyName: '', object: obj })\r\n  }\r\n\r\n  //设计器组件不扫描\r\n  if (obj.xtype === 'yvDesignCanvas') return\r\n  if (obj.xtype === 'yvDesignProperty') return\r\n  if (obj.xtype === 'yvDesignToolbox') return\r\n\r\n  _.forOwn(obj, (value, key) => {\r\n    if (typeof value !== 'object') {\r\n      return\r\n    }\r\n    if (_.has(obj, 'view') && obj.view === 'toolbar') {\r\n      if (key === 'dataSource' || key === 'suggest' || key === 'options') {\r\n        return\r\n      }\r\n    } else {\r\n      // 模型、数据、数据源不扫描\r\n      if (\r\n        key === 'data' ||\r\n        key === 'dataSource' ||\r\n        key === 'suggest' ||\r\n        key === 'options'\r\n      ) {\r\n        return\r\n      }\r\n    }\r\n\r\n    //事件不扫描\r\n    if (key === 'on' && _.isObject(value)) {\r\n      return\r\n    }\r\n    if (_.startsWith(key, 'on') && _.size(key) > 2) {\r\n      return\r\n    }\r\n    const isMarkerChild = deepTrav1(value, resolver, marker)\r\n    if (marker && isMarkerChild === true) {\r\n      isMarker = true\r\n      marker.unshift({ id: obj.id, keyName: key, object: value })\r\n    }\r\n  })\r\n\r\n  return isMarker\r\n}\r\n\r\nfunction deepTravFindSuper(obj: VJson, targetId: number): VJson {\r\n  //设计器组件不扫描\r\n  if (obj.xtype === 'yvDesignCanvas') return\r\n  if (obj.xtype === 'yvDesignProperty') return\r\n  if (obj.xtype === 'yvDesignToolbox') return\r\n\r\n  let rObj: VJson = null\r\n\r\n  _.forOwn(obj, (value, key) => {\r\n    if (rObj) {\r\n      return\r\n    }\r\n    if (typeof value !== 'object') {\r\n      return\r\n    }\r\n    // 模型、数据、数据源不扫描\r\n    if (\r\n      key === 'data' ||\r\n      key === 'dataSource' ||\r\n      key === 'suggest' ||\r\n      key === 'options'\r\n    ) {\r\n      return\r\n    }\r\n    //事件不扫描\r\n    if (key === 'on' && _.isObject(value)) {\r\n      return\r\n    }\r\n    if (key.startsWith('on') && _.size(key) > 2) {\r\n      return\r\n    }\r\n    if (value.id === targetId) {\r\n      rObj = obj\r\n      return\r\n    }\r\n    rObj = deepTravFindSuper(value, targetId)\r\n  })\r\n\r\n  return rObj\r\n}\r\n\r\n/**\r\n * 根据id查找上级vjson\r\n * @param obj 原始 vjson 视图\r\n * @param targetId 子元素的id\r\n */\r\nexport function getSuperVjson(obj: VJson, targetId: number): VJson {\r\n  return deepTravFindSuper(obj, targetId)\r\n}\r\n\r\nfunction deepTravFindCurrent(obj: VJson, targetId: number): VJson {\r\n  //设计器组件不扫描\r\n  if (obj.xtype === 'yvDesignCanvas') return\r\n  if (obj.xtype === 'yvDesignProperty') return\r\n  if (obj.xtype === 'yvDesignToolbox') return\r\n\r\n  let rObj: VJson = null\r\n\r\n  _.forOwn(obj, (value, key) => {\r\n    if (rObj) {\r\n      return\r\n    }\r\n    if (typeof value !== 'object') {\r\n      return\r\n    }\r\n    // 模型、数据、数据源不扫描\r\n    if (\r\n      key === 'data' ||\r\n      key === 'dataSource' ||\r\n      key === 'suggest' ||\r\n      key === 'options'\r\n    ) {\r\n      return\r\n    }\r\n    //事件不扫描\r\n    if (key === 'on' && _.isObject(value)) {\r\n      return\r\n    }\r\n    if (key.startsWith('on') && _.size(key) > 2) {\r\n      return\r\n    }\r\n    if (value.id === targetId) {\r\n      rObj = value\r\n      return\r\n    }\r\n    rObj = deepTravFindCurrent(value, targetId)\r\n  })\r\n\r\n  return rObj\r\n}\r\n\r\n/**\r\n * 根据id查找vjson\r\n * @param obj 原始 vjson 视图\r\n * @param targetId 子元素的id\r\n */\r\nexport function getCurrentVjson(obj: VJson, targetId: number): VJson {\r\n  return deepTravFindCurrent(obj, targetId)\r\n}\r\n\r\nfunction deepTravDeleteVjson(obj: VJson, targetId: number): boolean {\r\n  let isDelete: boolean = false\r\n  //设计器组件不扫描\r\n  if (obj.xtype === 'yvDesignCanvas') return isDelete\r\n  if (obj.xtype === 'yvDesignProperty') return isDelete\r\n  if (obj.xtype === 'yvDesignToolbox') return isDelete\r\n\r\n  _.forOwn(obj, (value, key) => {\r\n    if (isDelete) {\r\n      return\r\n    }\r\n    if (typeof value !== 'object') {\r\n      return\r\n    }\r\n    // 模型、数据、数据源不扫描\r\n    if (\r\n      key === 'data' ||\r\n      key === 'dataSource' ||\r\n      key === 'suggest' ||\r\n      key === 'options'\r\n    ) {\r\n      return\r\n    }\r\n    //事件不扫描\r\n    if (key === 'on' && _.isObject(value)) {\r\n      return\r\n    }\r\n    if (key.startsWith('on') && _.size(key) > 2) {\r\n      return\r\n    }\r\n    if (value.id === targetId) {\r\n      isDelete = true\r\n      /** 如果是数组的元素*/\r\n      if (webix.isArray(obj)) {\r\n        obj.splice(key, 1)\r\n      } else {\r\n        delete obj[key]\r\n      }\r\n      return\r\n    }\r\n    isDelete = deepTravDeleteVjson(value, targetId)\r\n\r\n    /** 删除因为删除元素后造成的空元素 */\r\n    if (isDelete) {\r\n      if (\r\n        (webix.isArray(value) && value.length <= 0) ||\r\n        Object.keys(value).length <= 0 ||\r\n        (Object.keys(value).length === 1 && value.id > 0) ||\r\n        value === undefined ||\r\n        value === null\r\n      ) {\r\n        if (webix.isArray(obj)) {\r\n          obj.splice(key, 1)\r\n        } else {\r\n          delete obj[key]\r\n        }\r\n      }\r\n    }\r\n  })\r\n  return isDelete\r\n}\r\n\r\n/**\r\n * 根据id删除Vjson 会删除因删除元素造成的空对象\r\n * @param obj 原始 vjson 视图\r\n * @param targetId 子元素的id\r\n */\r\nexport function deletVjsonById(obj: VJson, targetId: number): boolean {\r\n  let isDeleted = deepTravDeleteVjson(obj, targetId)\r\n  if (webix.isArray(obj)) {\r\n    if (obj.length <= 0) {\r\n      let T: VJson = {\r\n        view: 'template',\r\n        template: '拖动任何组件到此处',\r\n        role: 'placeholder',\r\n        id: webix.uid()\r\n      }\r\n      obj.push(T)\r\n    }\r\n  }\r\n  return isDeleted\r\n}\r\n\r\n/**\r\n * 根据 vjson 中的 ctlName, 合并属性\r\n * @param vjson 原始 vjson 视图\r\n * @param ctlOption 要被扩展的 ctlName 属性对\r\n */\r\nexport function viewExtend(vjson: VJson, ctlOption: any): VJson {\r\n  // 收集所有 ctlName 属性，放到收集器的 collector.ctls\r\n  // 收集所有 entityName 属性，放到收集器的 collector.entity\r\n  const collector = {\r\n    ctls: {}\r\n  }\r\n\r\n  deepTravVJson(vjson, obj => {\r\n    if (obj.ctlName) {\r\n      _.set(collector.ctls, obj.ctlName, obj)\r\n    }\r\n  })\r\n\r\n  _.forOwn(ctlOption, (extendVJson, ctlName) => {\r\n    if (_.has(collector.ctls, ctlName)) {\r\n      _.merge(_.get(collector.ctls, ctlName), extendVJson)\r\n    }\r\n  })\r\n\r\n  return vjson\r\n}\r\n\r\nconst $internalHooks = ['data', 'destory', 'watches', 'computed']\r\n\r\n/**\r\n * 收集成员变量\r\n */\r\nfunction collectDataFromConstructor(vm: Vue, Component: any) {\r\n  // override _init to prevent to init as Vue instance\r\n  const originalInit = Component.prototype._init\r\n  Component.prototype._init = function (this: Vue) {\r\n    // proxy to actual vm\r\n    const keys = Object.getOwnPropertyNames(vm)\r\n    // 2.2.0 compat (props are no longer exposed as self properties)\r\n    if (vm.$options.props) {\r\n      for (const key in vm.$options.props) {\r\n        if (!vm.hasOwnProperty(key)) {\r\n          keys.push(key)\r\n        }\r\n      }\r\n    }\r\n    keys.forEach(key => {\r\n      if (key.charAt(0) !== '_') {\r\n        Object.defineProperty(this, key, {\r\n          get: () => _.get(vm, key),\r\n          set: value => {\r\n            _.set(vm, key, value)\r\n          },\r\n          configurable: true\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  // should be acquired class property values\r\n  const data = new Component()\r\n\r\n  // restore original _init to avoid memory leak (#209)\r\n  Component.prototype._init = originalInit\r\n\r\n  // create plain data object\r\n  const plainData = {}\r\n  Object.keys(data).forEach(key => {\r\n    if (data[key] !== undefined) {\r\n      _.set(plainData, key, data[key])\r\n    }\r\n  })\r\n\r\n  return plainData\r\n}\r\n\r\n/**\r\n * 收集成员方法\r\n */\r\nfunction collectMethods(proto: any, options: any) {\r\n  Object.getOwnPropertyNames(proto).forEach(key => {\r\n    // 如果是constructor，则不处理。\r\n    if (key === 'constructor') {\r\n      return\r\n    }\r\n\r\n    // 记录下每级的 viewExtend 方法\r\n    if (key === 'viewExtend') {\r\n      // options.viewExtends.push(proto[key]);\r\n      console.error(\r\n        '不支持使用 viewExtend, 请考虑使用 YvanUI.viewExtend(super.viewResolver(),{})'\r\n      )\r\n      return\r\n    }\r\n\r\n    // 记录下每级的 viewIntercept 方法\r\n    if (key === 'viewIntercept') {\r\n      // options.viewIntercepts.push(proto[key]);\r\n      console.error('不支持使用 viewIntercept, 请考虑使用 super.viewResolver()')\r\n      return\r\n    }\r\n\r\n    // 记录下每级的 onLoad 方法\r\n    if (key === 'onLoad') {\r\n      options.onLoads.push(proto[key])\r\n      return\r\n    }\r\n\r\n    // 记录下每级的 onShow 方法\r\n    if (key === 'onShow') {\r\n      options.onShows.push(proto[key])\r\n    }\r\n\r\n    // 如果原型属性(方法)名是vue生命周期钩子名，则直接作为钩子函数挂载在options最外层\r\n    if ($internalHooks.indexOf(key) > -1) {\r\n      options[key] = proto[key]\r\n      return\r\n    }\r\n\r\n    // 先获取到原型属性的descriptor。\r\n    // 在前文已提及，计算属性其实也是挂载在原型上的，所以需要对descriptor进行判断\r\n    const descriptor = Object.getOwnPropertyDescriptor(proto, key)!\r\n    if (descriptor.value !== void 0) {\r\n      // 如果属性值是一个function，则认为这是一个方法，挂载在methods下\r\n      if (typeof descriptor.value === 'function') {\r\n        if (!_.has(options.methods, key)) {\r\n          options.methods[key] = descriptor.value\r\n        }\r\n      } else {\r\n        // 如果不是，则认为是一个普通的data属性。\r\n        // 但是这是原型上，所以更类似mixins，因此挂在mixins下。\r\n        options.mixins.push({\r\n          data(this: Vue) {\r\n            return { [key]: descriptor.value }\r\n          }\r\n        })\r\n      }\r\n    } else if (descriptor.get || descriptor.set) {\r\n      // 如果value是undefined(ps：void 0 === undefined)。\r\n      // 且描述符具有get或者set方法，则认为是计算属性。不理解的参考我上面关于class转换成构造函数的例子\r\n      // 这里可能和普通的计算属性不太一样，因为一般计算属性只是用来获取值的，但这里却有setter。\r\n      // 不过如果不使用setter，与非class方式开发无异，但有这一步处理，在某些场景会有特效。\r\n      ; (options.computed || (options.computed = {}))[key] = {\r\n        get: descriptor.get,\r\n        set: descriptor.set\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * 基础混入器\r\n */\r\nfunction createCommonMix<M, Refs, INP>() {\r\n  return {}\r\n}\r\n\r\n/**\r\n * 根据 vjson 格式，嵌入 yvan 组件, 生成能够为 webix 使用的 vjson\r\n */\r\nexport function wrapperWebixConfig<M, Refs, INP>(\r\n  module: BaseModule<M, Refs, INP>,\r\n  vjson: VJson\r\n) {\r\n  // 形成最终的 viewResolver 方法\r\n  deepTravVJson(vjson, obj => {\r\n    if (obj.view === 'iframe') {\r\n      return\r\n    }\r\n\r\n    if (module && _.has(obj, 'id')) {\r\n      if (obj.id !== 'MainWindowFirstPage') {\r\n        console.error('禁用 ID 属性', obj)\r\n      }\r\n    }\r\n\r\n    if (typeof obj.placeId === 'string') {\r\n      obj.id = module.instanceId + '$' + obj.placeId\r\n    }\r\n\r\n    if (typeof obj.view === 'string') {\r\n      switch (obj.view) {\r\n        case 'button':\r\n          CtlButton.create(obj)\r\n          break\r\n\r\n        case 'text':\r\n          CtlText.create(obj)\r\n          break\r\n\r\n        case 'number':\r\n        case 'counter':\r\n          CtlNumber.create(obj)\r\n          break\r\n\r\n        case 'datepicker':\r\n        case 'date':\r\n        case 'datetime':\r\n          CtlDatePicker.create(obj)\r\n          break\r\n\r\n        case 'codemirror-editor':\r\n          CtlCodeMirror.create(obj)\r\n          break\r\n\r\n        case 'dataview':\r\n          CtlDataview.create(obj)\r\n          break\r\n\r\n        case 'echarts':\r\n          CtlECharts.create(obj)\r\n          break\r\n\r\n        case 'daterangepicker':\r\n        case 'daterange':\r\n        case 'datetimerange':\r\n          CtlDateRangePicker.create(obj)\r\n          break\r\n\r\n        case 'combo':\r\n        case 'combobox':\r\n          CtlCombo.create(obj)\r\n          break\r\n\r\n        case 'multicombo':\r\n          CtlMultiCombo.create(obj)\r\n          break\r\n\r\n        case 'search':\r\n        case 'searchbox':\r\n          CtlSearch.create(obj)\r\n          break\r\n\r\n        case 'check':\r\n        case 'checkbox':\r\n          CtlCheckBox.create(obj)\r\n          break\r\n\r\n        case 'switch':\r\n        case 'switchbox':\r\n          CtlSwitch.create(obj)\r\n          break\r\n\r\n        case 'radio':\r\n        case 'radiobox':\r\n          CtlRadio.create(obj)\r\n          break\r\n\r\n        case 'tree':\r\n          CtlTree.create(obj)\r\n          break\r\n\r\n        case 'treetable':\r\n          CtlTreeTable.create(obj)\r\n          break\r\n\r\n        case 'tabview':\r\n          CtlTab.create(obj)\r\n          break\r\n\r\n        case 'grid':\r\n          CtlGrid.create(obj)\r\n          break\r\n\r\n        case 'form':\r\n          CtlForm.create(obj)\r\n          break\r\n\r\n        case 'carousel':\r\n          CtlCarousel.create(obj)\r\n          break\r\n      }\r\n    }\r\n  })\r\n\r\n  if (module) {\r\n    vjson.$scope = module\r\n  }\r\n}\r\n\r\n/**\r\n * 将传统 Java Class 转换为 Vue 对象\r\n */\r\nexport function componentFactory<M, Refs, INP>(\r\n  Component: BaseModule<M, Refs, INP> & any,\r\n  options: any = {}\r\n): any {\r\n  //return VueComponent<BaseModule<M, Refs, INP>>(options)\r\n  if (!options.mixins) {\r\n    options.mixins = []\r\n  }\r\n\r\n  if (!options.methods) {\r\n    options.methods = {}\r\n  }\r\n\r\n  if (!options.viewExtends) {\r\n    options.viewExtends = []\r\n  }\r\n\r\n  if (!options.viewIntercepts) {\r\n    options.viewIntercepts = []\r\n  }\r\n\r\n  if (!options.onLoads) {\r\n    options.onLoads = []\r\n  }\r\n\r\n  if (!options.onShows) {\r\n    options.onShows = []\r\n  }\r\n\r\n  // 获取构造函数原型，这个原型上挂在了该类的method\r\n  for (\r\n    let proto = Component.prototype;\r\n    proto.constructor !== Vue;\r\n    proto = Object.getPrototypeOf(proto)\r\n  ) {\r\n    // 一直向上收集, 直到 Object 级\r\n    collectMethods(proto, options)\r\n  }\r\n\r\n  // 添加公共基础 MIX\r\n  options.mixins.push(createCommonMix<M, Refs, INP>())\r\n\r\n  // 解析 @Watch 装饰器方法，执行 watch\r\n  const watches = Component.prototype.watches\r\n  delete Component.prototype.watches\r\n\r\n  // 实例化Component构造函数，并收集其自身的(非原型上的)属性导出\r\n  options.mixins.push({\r\n    data(this: Vue) {\r\n      const data: any = {\r\n        refs: {},\r\n        dialog: undefined,\r\n        inParamter: undefined,\r\n        dialogParent: undefined,\r\n        instanceId: _.uniqueId('_mins_id_'),\r\n        ...collectDataFromConstructor(this, Component)\r\n      }\r\n      return data\r\n    },\r\n    created(this: Vue & any) {\r\n      if (_.isArray(watches)) {\r\n        _.each(watches, (item: BizWatch) => {\r\n          this.$watch(item.expr, item.handler, {\r\n            deep: item.deep,\r\n            immediate: item.immediate\r\n          })\r\n          //console.log('$watch', item.expr, item.handler, { deep: item.deep, immediate: item.immediate })\r\n        })\r\n      }\r\n    },\r\n    destroyed() { },\r\n    methods: {\r\n      onLoad(this: Vue) {\r\n        _.each(options.onLoads, load => {\r\n          load.call(this)\r\n        })\r\n      },\r\n      onShow(this: Vue) {\r\n        _.each(options.onShows, load => {\r\n          load.call(this)\r\n        })\r\n      },\r\n      buildView<M, Refs, INP>(this: Vue & BaseModule<M, Refs, INP>) {\r\n        // 获取到 viewResolver 方法，拿到最原始的 vjson\r\n        const vjson: VJson = this.viewResolver()\r\n\r\n        // 与 yvan 组件进行交换，使 vjson 能被 webix 使用\r\n        wrapperWebixConfig(this, vjson)\r\n        return vjson\r\n      },\r\n      closeDialog(this: Vue & any) {\r\n        this.dialog.close()\r\n      },\r\n      showDialog(this: Vue & BaseModule<M, Refs, INP> & any, inParamter: INP, container: any, isFromSearchBox: boolean = false): void {\r\n        // 显示对话框\r\n        const module: any = this\r\n        module.inParamter = inParamter\r\n        module.dialogParent = container\r\n\r\n        // 获取到 viewResolver 方法，拿到最原始的 vjson\r\n        const vjson: any = module.viewResolver()\r\n\r\n        if (!_.has(vjson, 'body')) {\r\n          vjson.body = {\r\n            template: 'dialog 没有 body'\r\n          }\r\n        }\r\n\r\n        // 与 yvan 组件进行交换，使 vjson 能被 webix 使用\r\n        wrapperWebixConfig(module, vjson.body)\r\n\r\n        // 构建 window\r\n        _.merge(vjson, {\r\n          view: 'window',\r\n          close: vjson.close === undefined ? true : vjson.close,\r\n          move: vjson.move === undefined ? true : vjson.move,\r\n          modal: vjson.modal === undefined ? true : vjson.modal,\r\n          position: 'center',\r\n          resize: vjson.resize === undefined ? true : vjson.resize,\r\n          head: {\r\n            view: \"toolbar\", margin: -4, cols: [\r\n              { view: \"label\", label: vjson.title, css: 'webix_header webix_win_title' },\r\n              {\r\n                view: \"icon\", icon: \"wxi-plus-square\", click: function (this: any) {\r\n                  dialog.config.fullscreen = !dialog.config.fullscreen;\r\n                  if (dialog.config.fullscreen) {\r\n                    dialog.config.oldtop = dialog.config.top;\r\n                    dialog.config.oldleft = dialog.config.left;\r\n                    dialog.config.left = 0;\r\n                    dialog.config.top = 0;\r\n                    this.define({ icon: 'wxi-minus-square' });\r\n                  } else {\r\n                    dialog.config.top = dialog.config.oldtop;\r\n                    dialog.config.left = dialog.config.oldleft;\r\n                    this.define({ icon: 'wxi-plus-square' });\r\n                  }\r\n                  dialog.resize();\r\n                  this.refresh();\r\n                }\r\n              },\r\n              {\r\n                view: \"icon\", icon: \"wxi-close\", click: function () {\r\n                  dialog.close();\r\n                }\r\n              }\r\n            ]\r\n          },\r\n          on: {\r\n            onShow() {\r\n              module.onLoad()\r\n            },\r\n            onDestruct() {\r\n              module.onClose()\r\n            }\r\n          },\r\n        })\r\n        const dialog: any = webix.ui(vjson)\r\n        module._webixId = this.dialog = dialog\r\n        this.dialog.show();\r\n\r\n        $(this.dialog.$view).keypress((event) => {\r\n          if (event.keyCode === 27) {\r\n            module.onEsc()\r\n            event.stopPropagation()\r\n            event.preventDefault()\r\n            return;\r\n          }\r\n          if (event.keyCode === 13) {\r\n            module.onEnter()\r\n            if (isFromSearchBox) {\r\n              event.stopPropagation()\r\n            }\r\n            event.preventDefault()\r\n            return;\r\n          }\r\n        })\r\n\r\n        /** \r\n        const {\r\n          title = '未命名对话框',\r\n          width = 500,\r\n          height = 300,\r\n          modal = true,\r\n          body,\r\n          btn\r\n        } = vjson\r\n\r\n        const layerConfig: any = {\r\n          id: _.uniqueId('layerno_'),\r\n          zIndex: layer.zIndex, // layer.zIndex - 19891000,\r\n          type: 1,\r\n          area: [`${width}px`, `${height}px`],\r\n          title,\r\n          shade: modal ? 0.6 : false,\r\n          maxmin: true,\r\n          btn: btn,\r\n          anim: 0,\r\n          content: ''\r\n        }\r\n\r\n        // layer 打开后的回调\r\n        layerConfig.success = function(layero: any) {\r\n          module.layero = layero\r\n          layer.setTop(layero)\r\n          // 默认焦点在关闭上\r\n          layero\r\n            .find('a.layui-layer-close')\r\n            .attr('tabindex', 1)\r\n            .focus()\r\n\r\n          // if (isFromSearchBox) {\r\n          // 监听回车和取消键\r\n          layero.on('keydown', (event: KeyboardEvent) => {\r\n            if (event.keyCode === 13) {\r\n              module.onEnter()\r\n              if (isFromSearchBox) {\r\n                event.stopPropagation()\r\n              }\r\n              event.preventDefault()\r\n            } else if (event.keyCode === 27) {\r\n              module.onEsc()\r\n              event.stopPropagation()\r\n              event.preventDefault()\r\n            }\r\n          })\r\n          // }\r\n\r\n          // DOM 结果出现之后, 渲染 webix\r\n          body.container = layero.find('.layui-layer-content').attr('id') // layero[0]; // layero.attr('id');\r\n          module._layeroInner = body.container\r\n          const $innerDOM = $('#' + module._layeroInner)\r\n          _.extend(body, {\r\n            width: $innerDOM.innerWidth(),\r\n            height: $innerDOM.innerHeight()\r\n          })\r\n          module._webixId = webix.ui(body)\r\n          module.onLoad()\r\n        }\r\n\r\n        // layer 大小改变后的回调\r\n        layerConfig.restore = layerConfig.full = layerConfig.resizing = function(\r\n          layero: any\r\n        ) {\r\n          //$$(module._webixId).resize();\r\n          const $innerDOM = $('#' + module._layeroInner)\r\n          module._webixId.define({\r\n            width: $innerDOM.innerWidth(),\r\n            height: $innerDOM.innerHeight()\r\n          })\r\n          module._webixId.resize()\r\n          console.log('resized')\r\n        }\r\n\r\n        // layer 关闭后的回调\r\n        layerConfig.end = function() {\r\n          module.onClose()\r\n\r\n          webix.$$(module._webixId).destructor()\r\n          module.$destroy()\r\n        }\r\n\r\n        module._layerIndex = layer.open(layerConfig)\r\n        */\r\n      }\r\n    }\r\n  })\r\n\r\n  // 通过 vue.extend 生成一个 vue 类型的功能模块对象\r\n  const VueModule: any = Vue.extend(options)\r\n  return VueModule\r\n}\r\n\r\n/**\r\n * 在目标 DOM 选择器上渲染模块\r\n */\r\nexport function render<M, Refs, INP>(\r\n  selector: string,\r\n  baseModule: BaseModule<M, Refs, INP>\r\n) {\r\n  const lastHandle = _.get(window, 'LastRenderHandler')\r\n  if (lastHandle) {\r\n    lastHandle.destructor()\r\n    _.set(window, 'LastRenderHandler', null)\r\n  }\r\n\r\n  const cfg = (baseModule as any).buildView()\r\n  cfg.container = selector\r\n  baseModule._webixId = webix.ui(cfg)\r\n  baseModule.onLoad()\r\n\r\n  webix.event(<any>window, 'resize', () => {\r\n    // $$(baseModule._webixId).resize();\r\n    baseModule._webixId.resize()\r\n  })\r\n\r\n  _.set(window, 'LastRenderHandler', baseModule._webixId)\r\n  return baseModule._webixId\r\n}\r\n\r\n/**\r\n * 在占位空间 spaceId 上渲染 vjson\r\n * @param module 当前模块\r\n * @param spaceId 占位空间\r\n * @param vjson 界面描述\r\n */\r\nexport function renderPlace<M, Refs, INP>(\r\n  module: BaseModule<M, Refs, INP>,\r\n  spaceId: string,\r\n  vjson: VJson\r\n) {\r\n  wrapperWebixConfig(module, vjson)\r\n  webix.ui(vjson, webix.$$(module.instanceId + '$' + spaceId))\r\n}\r\n","import { Ajax } from './YvanUIAjax';\r\n\r\nexport namespace Db {\r\n\r\n    export interface CreateDbOption {\r\n        baseUrl: string,\r\n        defaultDb: string,\r\n        ajax: Ajax.Function\r\n    }\r\n\r\n    export interface CompileOption {\r\n        sqlId: string\r\n    }\r\n\r\n    export interface ExecuteOption extends CompileOption {\r\n        params?: any\r\n    }\r\n\r\n    export interface QueryOption extends ExecuteOption {\r\n        limit?: number\r\n        limitOffset?: number\r\n        needCount?: boolean\r\n        filterModel?: any\r\n        orderByModel?: any\r\n    }\r\n\r\n    export interface Response {\r\n\r\n        /**\r\n         * 输出后台运行的实际 SQL (DEBUG 模式才会存在)\r\n         */\r\n        sql: string\r\n\r\n        /**\r\n         * 输出后台运行的实际 SQL参数 (DEBUG 模式才会存在)\r\n         */\r\n        params: any[]\r\n\r\n        /**\r\n         * 统计的总行数\r\n         */\r\n        totalCount?: number\r\n\r\n        /**\r\n         * 行数取值\r\n         */\r\n        limit?: number\r\n\r\n        /**\r\n         * 偏移值\r\n         */\r\n        limitOffset?: number\r\n\r\n        /**\r\n         * SQL 运行输出的参数\r\n         */\r\n        data: any\r\n    }\r\n\r\n    export class Client {\r\n        private baseUrl: string;\r\n        private ajax: Ajax.Function;\r\n        private defaultDb: string;\r\n\r\n        constructor(createOption: Db.CreateDbOption) {\r\n            this.baseUrl = createOption.baseUrl\r\n            this.ajax = createOption.ajax\r\n            this.defaultDb = createOption.defaultDb\r\n        }\r\n\r\n        execute(option: Db.ExecuteOption): Promise<Db.Response> {\r\n            return new Promise(((resolve, reject) => {\r\n                const sqlTimeId = _.uniqueId('SQL')\r\n                console.time(sqlTimeId)\r\n\r\n                this.ajax({\r\n                    url: this.baseUrl + '/execute',\r\n                    method: 'POST-JSON',\r\n                    data: {\r\n                        db: this.defaultDb,\r\n                        sqlId: option.sqlId,\r\n                        params: option.params\r\n                    }\r\n\r\n                }).then((root) => {\r\n                    if (root && root.success) {\r\n                        const { sql, params: resParams, data } = root.data\r\n                        if (sql) {\r\n                            console.log('SQL-execute', { sql, resParams })\r\n                        }\r\n                        resolve(data)\r\n                        return\r\n                    }\r\n                    reject(root.msg)\r\n\r\n                }).catch((err) => {\r\n                    reject(err)\r\n\r\n                }).finally(() => {\r\n                    console.timeEnd(sqlTimeId)\r\n                })\r\n\r\n            }))\r\n        }\r\n\r\n        query(option: Db.QueryOption): Promise<Db.Response> {\r\n            return new Promise(((resolve, reject) => {\r\n                const sqlTimeId = _.uniqueId('SQL')\r\n                console.time(sqlTimeId)\r\n\r\n                this.ajax({\r\n                    url: this.baseUrl + '/query',\r\n                    method: 'POST-JSON',\r\n                    data: {\r\n                        db: this.defaultDb,\r\n                        filterModel: option.filterModel,\r\n                        orderByModel: option.orderByModel,\r\n                        limit: option.limit,\r\n                        limitOffset: option.limitOffset,\r\n                        needCount: option.needCount,\r\n                        sqlId: option.sqlId,\r\n                        params: option.params,\r\n                    }\r\n\r\n                }).then((root) => {\r\n                    if (root && root.success) {\r\n                        const { sql, params: resParams, data } = root.data\r\n                        if (sql) {\r\n                            console.log('SQL-query', { sql, resParams })\r\n                        }\r\n                        resolve(root.data)\r\n                        return\r\n                    }\r\n                    reject(root.msg)\r\n\r\n                }).catch((err) => {\r\n                    reject(err)\r\n\r\n                }).finally(() => {\r\n                    console.timeEnd(sqlTimeId)\r\n                })\r\n            }))\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * 创建一个 db 客户端\r\n */\r\nexport function createDb(createOption: Db.CreateDbOption): Db.Client {\r\n    return new Db.Client(createOption)\r\n}\r\n","import axios, { AxiosRequestConfig, AxiosResponse } from 'axios'\r\nimport Qs from 'qs'\r\nimport { YvanDataSourceGrid } from './YvanDataSourceGridImp';\r\n\r\nexport function invokeApi<T>(apiId: string, args: IArguments, entity: T): Promise<T> {\r\n    return new Promise<T>((resolve, reject) => {\r\n        const ajax: Ajax.Function = _.get(window, 'YvanUI.ajax');\r\n        const prefix = _.get(window, '_YvanUI_serverJSPrefix');\r\n\r\n        const postBodyParamter = [];\r\n        for (let i = 0; i < args.length; i++) {\r\n            postBodyParamter.push(args[i]);\r\n        }\r\n\r\n        ajax({\r\n            url: prefix + apiId,\r\n            method: 'POST-JSON',\r\n            data: {\r\n                p: postBodyParamter\r\n            }\r\n\r\n        }).then(res => {\r\n            _.extend(entity, res.data);\r\n            resolve(entity);\r\n        });\r\n    })\r\n}\r\n\r\nexport namespace Ajax {\r\n\r\n    export interface CreateAjaxOption {\r\n        baseUrl: string\r\n    }\r\n\r\n    export type MethodType = 'POST' | 'GET' | 'POST-JSON' | 'UPLOADEXCEL' | 'DOWNLOAD' | 'POST-FILE'\r\n\r\n    /**\r\n     * 请求参数\r\n     */\r\n    export interface Option {\r\n        /**\r\n         * url 地址\r\n         */\r\n        url: string,\r\n\r\n        /**\r\n         * 下载文件名\r\n         */\r\n        fileName?: string,\r\n\r\n        /**\r\n         * 请求方法\r\n         */\r\n        method: MethodType,\r\n\r\n        /**\r\n         * 上传文件（如果需要的话）\r\n         */\r\n        file?: any,\r\n\r\n        /**\r\n         * 请求参数\r\n         */\r\n        data?: any,\r\n\r\n        /**\r\n         * 请求头\r\n         */\r\n        headers?: any\r\n\r\n        /**\r\n         * 是否只传送 responseData\r\n         */\r\n        disableResponseData?: boolean\r\n    }\r\n\r\n    /**\r\n     * 数据响应\r\n     */\r\n    export interface Response {\r\n        success: boolean\r\n        msg: string\r\n        data: any\r\n    }\r\n\r\n    export type Function = (option: Option) => Promise<Ajax.Response>\r\n}\r\n\r\nexport function downLoad(downLoadUrl: string, filename: string, data: any, header: any) {\r\n    const YvanUI: any = _.get(window, 'YvanUI');\r\n    YvanUI.loading();\r\n    const createObjectURL = (object: any) => {\r\n        return (window.URL) ? window.URL.createObjectURL(object) : _.get(window, 'webkitURL').createObjectURL(object)\r\n    };\r\n\r\n    // const formData = new FormData();\r\n    // _.forOwn(data, (v, k) => {\r\n    //     formData.append(k, v);\r\n    // });\r\n    const formData = data ? Qs.stringify(data) : '';\r\n\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open('POST', downLoadUrl);\r\n    xhr.responseType = 'blob';\r\n    //xhr.setRequestHeader('Authorization', $.cookie('auth'))\r\n    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\r\n    if (header) {\r\n        _.forOwn(header, (v, k) => {\r\n            xhr.setRequestHeader(k, v);\r\n        })\r\n    }\r\n    xhr.onload = function (e: any) {\r\n        if (this.status === 200) {\r\n            const blob = this.response;\r\n            if (_.has(window, 'navigator.msSaveOrOpenBlob')) {\r\n                navigator.msSaveBlob(blob, filename)\r\n                YvanUI.clearLoading();\r\n\r\n            } else {\r\n                const a = document.createElement('a');\r\n                const url = createObjectURL(blob);\r\n                a.href = url;\r\n                a.download = filename;\r\n                $('body').append(a);\r\n                a.click();\r\n                $(a).remove();\r\n                window.URL.revokeObjectURL(url)\r\n                YvanUI.clearLoading();\r\n            }\r\n        }\r\n    };\r\n    xhr.send(formData);\r\n}\r\n\r\n/**\r\n * 创建一个 Ajax 客户端\r\n */\r\nexport function createAjax(createOption: Ajax.CreateAjaxOption): Ajax.Function {\r\n\r\n    if (createOption.baseUrl) {\r\n        axios.defaults.baseURL = createOption.baseUrl;\r\n    }\r\n\r\n    return function (option: Ajax.Option) {\r\n\r\n        const ax: AxiosRequestConfig = {\r\n            url: option.url\r\n        };\r\n\r\n        if (option.method === 'DOWNLOAD') {\r\n            downLoad(createOption.baseUrl + option.url, option.fileName || 'file',\r\n                option.data, option.headers);\r\n            return new Promise<Ajax.Response>((resolver, reject) => {\r\n            });\r\n        }\r\n\r\n        if (option.method === 'POST-JSON') {\r\n            ax.method = 'POST';\r\n            ax.headers = {\r\n                'Content-Type': 'application/json',\r\n                ...option.headers\r\n            };\r\n            ax.data = JSON.stringify(option.data)\r\n\r\n        } else if (option.method === 'POST-FILE') {\r\n            //TODO 刘壮. 上传文件\r\n            var forms = new FormData();\r\n            ax.headers = {\r\n                'Content-Type': 'multipart/form-data',\r\n                ...option.headers\r\n            };\r\n            _.forOwn(option.data, (value, key) => {\r\n                if (key === 'files') {\r\n                    let i = 0;\r\n                    _.each(value, f => {\r\n                        forms.append('file' + (++i), f)\r\n                    })\r\n                } else {\r\n                    forms.append(key, value)\r\n                }\r\n            });\r\n            ax.data = forms;\r\n            ax.method = 'POST'\r\n        } else if (option.method === 'POST') {\r\n            ax.method = 'POST';\r\n            ax.headers = {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                ...option.headers\r\n            };\r\n            ax.data = Qs.stringify(option.data)\r\n\r\n        } else if (option.method === 'GET') {\r\n            ax.method = 'GET';\r\n            ax.params = option.data\r\n            ax.headers = {\r\n                ...option.headers\r\n            }\r\n\r\n        } else {\r\n            throw new Error('not implements')\r\n        }\r\n\r\n        return new Promise<Ajax.Response>((resolver, reject) => {\r\n            axios(ax).then((resolverRaw: AxiosResponse<any>) => {\r\n                resolver(resolverRaw.data)\r\n\r\n            }).catch((reason: any) => {\r\n                reject(reason)\r\n            })\r\n        })\r\n    }\r\n}\r\n","/**\r\n * 获取页面 URL 问号之后的参数\r\n */\r\nexport function getQueryString(): any {\r\n    const url = document.location.search;\r\n    const theRequest: any = {};\r\n    if (url.indexOf(\"?\") >= 0) {\r\n        let str = url.substr(1);\r\n        const strs = str.split(\"&\");\r\n        for (var i = 0; i < strs.length; i++) {\r\n            const vs = strs[i].split(\"=\");\r\n            theRequest[vs[0]] = unescape(vs[1]);\r\n        }\r\n    }\r\n    return theRequest;\r\n}\r\n\r\n/**\r\n * 统一吧下划线（字符串/对象/数组）变成驼峰命名\r\n */\r\nexport function camelCase(obj: any): any {\r\n    if (typeof obj === 'string') {\r\n        return _.camelCase(obj)\r\n    }\r\n    if (_.isArray(obj)) {\r\n        return _.map(obj, (item) => {\r\n            return camelCase(item)\r\n        })\r\n    }\r\n    if (typeof obj === 'object') {\r\n        const ret: any = {}\r\n        _.forOwn(obj, (value, key) => {\r\n            ret[_.camelCase(key)] = value\r\n        })\r\n        return ret\r\n    }\r\n    console.error('无法转换' + obj)\r\n}\r\n\r\n/**\r\n * 统一吧驼峰（字符串/对象/数组）变成下划线\r\n */\r\nexport function snakeCase(obj: any): any {\r\n    if (typeof obj === 'string') {\r\n        return _.snakeCase(obj)\r\n    }\r\n    if (_.isArray(obj)) {\r\n        return _.map(obj, (item) => {\r\n            return snakeCase(item)\r\n        })\r\n    }\r\n    if (typeof obj === 'object') {\r\n        const ret: any = {}\r\n        _.forOwn(obj, (value, key) => {\r\n            ret[_.snakeCase(key)] = value\r\n        })\r\n        return ret\r\n    }\r\n    console.error('无法转换' + obj)\r\n}\r\n\r\n\r\n/**\r\n * 将任意 planObject 对象，转换为 hash 描述\r\n */\r\nexport function param(obj: any): string {\r\n    return $.param(obj)\r\n}\r\n\r\n/**\r\n * 将 hash 描述转换为 planObject 对象\r\n * @param s\r\n */\r\nexport function unparam(query: string): any {\r\n    const queryString: any = {};\r\n    if (query.slice(0, 1) === \"#\") {\r\n        query = query.slice(1);\r\n    }\r\n    const vars = query.split(\"&\");\r\n    for (let i = 0; i < vars.length; i++) {\r\n        const pair = vars[i].split(\"=\");\r\n        pair[0] = decodeURIComponent(pair[0]);\r\n        pair[1] = decodeURIComponent(pair[1]);\r\n        // If first entry with this name\r\n        if (typeof queryString[pair[0]] === \"undefined\") {\r\n            queryString[pair[0]] = pair[1];\r\n        } else if (typeof queryString[pair[0]] === \"string\") {\r\n            const arr = [queryString[pair[0]], pair[1]];\r\n            queryString[pair[0]] = arr;\r\n        } else {\r\n            queryString[pair[0]].push(pair[1]);\r\n        }\r\n    }\r\n    return queryString;\r\n}\r\n","import webix, { $$ } from 'webix'\r\nimport { wrapperWebixConfig } from './YvanRender'\r\nimport { idText } from 'typescript'\r\n\r\n// eslint-disable-next-line\r\nconst baseKeyboardOption: any = {\r\n  success(layero: any, layerIndex: any) {\r\n    layer.setTop(layero)\r\n    layero\r\n      .find('a.layui-layer-btn0')\r\n      .attr('tabindex', 1)\r\n      .focus()\r\n    layero.on('keydown', (event: KeyboardEvent) => {\r\n      if (event.keyCode === 13 || event.keyCode === 27) {\r\n        layer.close(layerIndex)\r\n        event.stopPropagation()\r\n        event.preventDefault()\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nconst escKeyboardOption: any = {\r\n  success(layero: any, layerIndex: any) {\r\n    layer.setTop(layero)\r\n    const $input = layero.find('input.layui-layer-input')\r\n\r\n    // 确定按钮获得焦点\r\n    const $btn0 = layero.find('a.layui-layer-btn0').attr('tabindex', 1)\r\n    // 取消按钮能获得焦点\r\n    const $btn1 = layero.find('a.layui-layer-btn1').attr('tabindex', 1)\r\n\r\n    if ($input.length <= 0) {\r\n      // 如果没有输入框存在，默认让\"确认按钮\"获得焦点\r\n      $btn0.focus()\r\n    }\r\n\r\n    layero.on('keydown', (event: KeyboardEvent) => {\r\n      if (event.keyCode === 13) {\r\n        layero.find('a.layui-layer-btn0').trigger('click')\r\n        event.stopPropagation()\r\n        event.preventDefault()\r\n      } else if (event.keyCode === 27) {\r\n        // 取消\r\n        layero.find('a.layui-layer-btn1').trigger('click')\r\n        event.stopPropagation()\r\n        event.preventDefault()\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * 显示正在读取\r\n */\r\nexport function loading(msg?: string) {\r\n  clearLoading()\r\n  if (!msg) {\r\n    msg = '请稍后'\r\n  }\r\n  const $body = $('body')\r\n  $body.append(`<div class=\"load-view\" style=\"z-index: 19850224;\"><div class=\"load-an-view\"><div class=\"fading-circle\">\r\n  <div class=\"sk-circle1 sk-circle\"></div>\r\n  <div class=\"sk-circle2 sk-circle\"></div>\r\n  <div class=\"sk-circle3 sk-circle\"></div>\r\n  <div class=\"sk-circle4 sk-circle\"></div>\r\n  <div class=\"sk-circle5 sk-circle\"></div>\r\n  <div class=\"sk-circle6 sk-circle\"></div>\r\n  <div class=\"sk-circle7 sk-circle\"></div> \r\n  <div class=\"sk-circle8 sk-circle\"></div>\r\n  <div class=\"sk-circle9 sk-circle\"></div>\r\n  <div class=\"sk-circle10 sk-circle\"></div>\r\n  <div class=\"sk-circle11 sk-circle\"></div>\r\n  <div class=\"sk-circle12 sk-circle\"></div>\r\n</div></div><div class=\"load-tip\">${msg}</div></div>`)\r\n\r\n  $body.append($(`<div class=\"webix_modal load-view-masker\" style=\"z-index: 19850223;\"></div>`))\r\n}\r\n\r\n/**\r\n * 清空正在读取\r\n */\r\nexport function clearLoading() {\r\n  const $body = $('body')\r\n  $body.find('.load-view').remove()\r\n  $body.find('.load-view-masker').remove();\r\n}\r\n\r\n/**\r\n * 中间灰底白字提示\r\n */\r\nexport function msg(message: string): void {\r\n  const $body = $('body')\r\n\r\n  $body.find('[xtype=msg]').remove()\r\n  const $w = $(\r\n    '<div xtype=\"msg\" class=\"yvan-msg yvan-anim yvan-anim-00\">' +\r\n    '  <div class=\"yvan-msg-content\">' +\r\n    message +\r\n    '</div></div>'\r\n  )\r\n  $body.append($w)\r\n\r\n  const iframeWidth = $w.parent().width() as number\r\n  const iframeHeight = $w.parent().height() as number\r\n\r\n  const windowWidth = $w.width() as number\r\n  const windowHeight = $w.height() as number\r\n\r\n  let setWidth = (iframeWidth - windowWidth) / 2\r\n  let setHeight = (iframeHeight - windowHeight) / 2\r\n  if (iframeHeight < windowHeight || setHeight < 0) {\r\n    setHeight = 0\r\n  }\r\n  if (iframeWidth < windowWidth || setWidth < 0) {\r\n    setWidth = 0\r\n  }\r\n  $w.css({ left: setWidth, top: setHeight })\r\n  setTimeout(() => {\r\n    $w.remove()\r\n  }, 3000)\r\n}\r\n\r\n/**\r\n * 弹出输入框\r\n * @param title 输入框标题\r\n * @param defValue 默认值\r\n */\r\nexport function prompt(title: string = '请输入内容', defValue: string = ''): Promise<string> {\r\n  const tid: any = webix.uid()\r\n  let dialog: any = undefined;\r\n  return new Promise<string>((resolve, reject) => {\r\n\r\n    function onConfirm() {\r\n      const value = (<any>webix.$$(tid.toString())).getValue()\r\n      if (value) {\r\n        resolve(value);\r\n        dialog.close();\r\n        return;\r\n      }\r\n\r\n      msg('请输入内容');\r\n    }\r\n\r\n    function onCancel() {\r\n      reject();\r\n      dialog.close();\r\n    }\r\n\r\n    const vjson = {\r\n      view: 'window', close: false, move: true, modal: true, position: 'center', resize: true, fullscreen: false,\r\n      head: title,\r\n      on: {\r\n        onShow() {\r\n          // 进入后立刻获得焦点\r\n          (<any>webix.$$(tid)).focus();\r\n        }\r\n      },\r\n      body: {\r\n        rows: [\r\n          { view: 'text', id: tid, placeholder: '请输入', value: defValue },\r\n          {\r\n            cols: [\r\n              {},\r\n              {\r\n                view: 'button',\r\n                value: '确定',\r\n                width: 100,\r\n                css: 'yvan_primary',\r\n                click: onConfirm,\r\n              },\r\n              {\r\n                view: 'button',\r\n                value: '取消',\r\n                width: 100,\r\n                css: 'default',\r\n                click: () => {\r\n                  onCancel()\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n\r\n    };\r\n    dialog = webix.ui(vjson);\r\n    dialog.show();\r\n    $(webix.$$(tid).$view).keydown((e) => {\r\n      // 必须借助 jquery 拦截 keydown 事件\r\n      if (e.keyCode === 27) {\r\n        onCancel();\r\n        e.preventDefault();\r\n        return;\r\n      }\r\n      if (e.keyCode === 13) {\r\n        onConfirm();\r\n        e.preventDefault();\r\n        return;\r\n      }\r\n    })\r\n\r\n  });\r\n}\r\n\r\n/**\r\n * 弹出提示框\r\n * @param content 提示框内容\r\n */\r\nexport function alert(content: string): void {\r\n  webix.alert({ title: \"提示\", text: content, });\r\n}\r\n\r\n/**\r\n * 弹出错误框\r\n * @param content 错误的提示内容\r\n */\r\nexport function error(content: string): void {\r\n  webix.modalbox({ title: \"错误\", text: content, buttons: [\"确认\"], type: \"confirm-error\" });\r\n}\r\n\r\n/**\r\n * 弹出确认框\r\n * @param content 需要确认的文字内容\r\n */\r\nexport function confirm(content: string): Promise<void> {\r\n  return new Promise<void>((resolve, reject) => {\r\n    webix.confirm({\r\n      title: \"提示\",\r\n      text: content,\r\n      ok: \"确认\", cancel: \"取消\",\r\n\r\n    }).then(() => {\r\n      resolve();\r\n\r\n    }).catch(() => {\r\n      reject();\r\n    });\r\n  })\r\n}\r\n\r\n/**\r\n * 右上角弹出错误消息\r\n * @param content 消息内容\r\n */\r\nexport function msgError(content: string): void {\r\n  const toastr = _.get(window, 'toastr')\r\n  if (!toastr) {\r\n    webix.message({ type: 'error', text: content, expire: -1 })\r\n  } else {\r\n    toastr.error(content, '错误')\r\n  }\r\n}\r\n\r\n/**\r\n * 右上角弹出成功消息\r\n * @param content 消息内容\r\n */\r\nexport function msgSuccess(content: string): void {\r\n  const toastr = _.get(window, 'toastr')\r\n  if (!toastr) {\r\n    webix.message({ type: 'success', text: content, expire: 2000 })\r\n  } else {\r\n    toastr.success(content, '成功')\r\n  }\r\n}\r\n\r\n/**\r\n * 右上角弹出通知消息\r\n * @param content 消息内容\r\n */\r\nexport function msgInfo(content: string): void {\r\n  const toastr = _.get(window, 'toastr')\r\n  if (!toastr) {\r\n    webix.message({ type: 'info', text: content, expire: 2000 })\r\n  } else {\r\n    toastr.info(content)\r\n  }\r\n  // https://docs.webix.com/desktop__message_boxes.html\r\n}\r\n","import Vue from 'vue'\r\nimport { componentFactory } from './YvanRender'\r\nimport webix from 'webix'\r\n\r\n/**\r\n * 扩展 grid 组件\r\n */\r\nwebix.protoUI(\r\n  {\r\n    name: 'grid'\r\n  },\r\n  webix.ui.template\r\n)\r\n\r\n/**\r\n * 扩展 echarts 组件\r\n */\r\nwebix.protoUI(\r\n  {\r\n    name: 'echarts'\r\n  },\r\n  webix.ui.template\r\n)\r\n\r\nexport type VJson = any\r\n\r\nexport type ViewExtendType<T> = {\r\n  [P in keyof T]?: Partial<T[P]>\r\n}\r\n\r\n/**\r\n * 业务模块接口\r\n */\r\nexport interface Module<M, Refs, INP> {\r\n  viewResolver(): VJson\r\n\r\n  viewIntercept?(vjson: VJson, inParamter?: INP): void\r\n\r\n  viewExtend?(inParamter?: INP): ViewExtendType<Refs>\r\n\r\n  onLoad?(): void\r\n}\r\n\r\nexport abstract class BaseModule<M, Refs, INP> extends Vue\r\n  implements Module<M, Refs, INP> {\r\n  /**\r\n   * 组件对象引用\r\n   */\r\n  refs!: Refs\r\n\r\n  /**\r\n   * showDialog 带来的参数\r\n   */\r\n  inParamter!: INP\r\n\r\n  _webixId: any\r\n\r\n  /**\r\n   * 模块实例 ID (运行时自动创建)\r\n   */\r\n  instanceId!: string\r\n\r\n  /**\r\n   * 模块被渲染完成之后调用\r\n   */\r\n  onLoad(): void {}\r\n\r\n  /**\r\n   * 每次从隐藏状态换显出来后调用\r\n   */\r\n  onShow(): void {}\r\n\r\n  abstract viewResolver(): VJson\r\n\r\n  /**\r\n   * 根据名称，获取空白区域操作句柄\r\n   */\r\n  getPlace(placeId: string): any {\r\n    return webix.$$(_.get(this, 'instanceId') + '$' + placeId)\r\n  }\r\n}\r\n\r\nexport abstract class BaseDialog<M, Refs, INP> extends BaseModule<\r\n  M,\r\n  Refs,\r\n  INP\r\n> {\r\n  /**\r\n   * 对话框 DOM 对象\r\n   */\r\n  layero: any\r\n\r\n  /**\r\n   * 组件对象引用\r\n   */\r\n  refs!: Refs\r\n\r\n  /**\r\n   * 显示对话框\r\n   * @param inParamter 输入参数\r\n   * @param container 父容器\r\n   */\r\n  showDialog!: (\r\n    inParamter: INP,\r\n    container: any,\r\n    isFromSearchBox?: boolean\r\n  ) => void\r\n\r\n  /**\r\n   * 关闭对话框\r\n   */\r\n  closeDialog!: () => void\r\n\r\n  /**\r\n   * 按下 ESC 键\r\n   */\r\n  onEsc() {\r\n    this.closeDialog()\r\n  }\r\n\r\n  /**\r\n   * 按下 Enter 键\r\n   */\r\n  onEnter() {\r\n    debugger\r\n  }\r\n\r\n  /**\r\n   * 关闭后触发\r\n   */\r\n  onClose() {}\r\n\r\n  /**\r\n   * 对话框的父亲（打开者）\r\n   */\r\n  dialogParent!: any\r\n\r\n  /**\r\n   * 对话框标题\r\n   */\r\n  get title(): string {\r\n    return $(this.layero)\r\n      .find('.layui-layer-title')\r\n      .html()\r\n  }\r\n\r\n  /**\r\n   * 设置对话框标题\r\n   */\r\n  set title(nv: string) {\r\n    $(this.layero)\r\n      .find('.layui-layer-title')\r\n      .html(nv)\r\n  }\r\n\r\n  /**\r\n   * 显示进行中的状态\r\n   */\r\n  showLoading() {\r\n    webix.extend(this._webixId, webix.OverlayBox)\r\n    //this._webix.showOverlay(\"<div style='...'>There is no data</div>\");\r\n    this._webixId.showOverlay('Loading...')\r\n  }\r\n\r\n  /**\r\n   * 关闭进行中的状态\r\n   */\r\n  closeLoading() {\r\n    this._webixId.hideOverlay()\r\n  }\r\n}\r\n\r\nexport type BaseModuleType<M, Refs, INP> = typeof BaseModule\r\n\r\n/**\r\n * 装饰业务模块\r\n * @param options\r\n */\r\nexport function BizModule<M, Refs, INP>(option?: any): Function {\r\n  return function(Component: BaseModule<M, Refs, INP>) {\r\n    return componentFactory(Component, option)\r\n  }\r\n\r\n  // const option = {\r\n  //     ...createOption,\r\n  //     template: `<webix-ui ref='webixui' :config='viewResolver()'/>`,\r\n  //     ...createMixins<M, Refs, INP>(createOption)\r\n  // }\r\n\r\n  // return VueComponent<BaseModule<M, Refs, INP>>(option)\r\n}\r\n\r\nexport interface BizWatch {\r\n  /**\r\n   * 监听的表达式\r\n   */\r\n  expr: string\r\n\r\n  /**\r\n   * 深度监听\r\n   */\r\n  deep: boolean\r\n\r\n  /**\r\n   * 是否立刻执行\r\n   */\r\n  immediate: boolean\r\n\r\n  /**\r\n   * 执行的方法\r\n   */\r\n  handler: any\r\n}\r\n\r\n/**\r\n * 装饰字段（监听某个属性值变化）\r\n */\r\nexport function Watch(\r\n  propName: string,\r\n  deep: boolean = false,\r\n  immediate: boolean = false\r\n) {\r\n  if (typeof deep === 'undefined') {\r\n    deep = false\r\n  }\r\n  if (typeof immediate === 'undefined') {\r\n    immediate = false\r\n  }\r\n  return function(\r\n    target: any,\r\n    propertyKey: string,\r\n    descriptor: PropertyDescriptor\r\n  ) {\r\n    if (typeof target.watches === 'undefined') {\r\n      target.watches = []\r\n    }\r\n    const watch: BizWatch = {\r\n      expr: propName,\r\n      deep,\r\n      immediate,\r\n      handler: descriptor.value\r\n    }\r\n    target.watches.push(watch)\r\n  }\r\n}\r\n","// eslint-disable-next-line import/no-extraneous-dependencies\r\nimport ts from 'typescript'\r\n\r\n/**\r\n * 导出代码生成器\r\n */\r\nexport function getTS(): typeof ts {\r\n    return ts;\r\n}\r\n\r\n/**\r\n * 导出代码生成器\r\n */\r\nexport function tsCodeGenerate(tsNode: ts.Node): string {\r\n    const resultFile = ts.createSourceFile(\r\n        \"someFileName.ts\",\r\n        \"\",\r\n        ts.ScriptTarget.ES2019,\r\n        /*setParentNodes*/ false,\r\n        ts.ScriptKind.TS\r\n    );\r\n    const printer = ts.createPrinter({\r\n        newLine: ts.NewLineKind.LineFeed\r\n    });\r\n    const result = printer.printNode(\r\n        ts.EmitHint.Unspecified,\r\n        tsNode,\r\n        resultFile\r\n    );\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * 导出代码AST解析器\r\n */\r\nexport function tsCodeParse(content: string): ts.NodeArray<ts.Statement> {\r\n    const file = ts.createSourceFile(\r\n        \"someFileName.ts\",\r\n        content,\r\n        ts.ScriptTarget.ES2019,\r\n        /*setParentNodes*/ false,\r\n        ts.ScriptKind.TS\r\n    );\r\n    return file.statements;\r\n}\r\n\r\nexport function getTSDemo2(): any {\r\n    const resultFile = ts.createSourceFile(\r\n        \"someFileName.ts\",\r\n        contentText,\r\n        ts.ScriptTarget.ES2019,\r\n        /*setParentNodes*/ false,\r\n        ts.ScriptKind.TS\r\n    );\r\n\r\n    return resultFile;\r\n}\r\n\r\nexport function getTSDemo(): string {\r\n\r\n    function makeFactorialFunction() {\r\n\r\n        const functionName = ts.createIdentifier(\"factorial\");\r\n        const paramName = ts.createIdentifier(\"n\");\r\n        const parameter = ts.createParameter(\r\n            /*decorators*/ undefined,\r\n            /*modifiers*/ undefined,\r\n            /*dotDotDotToken*/ undefined,\r\n            paramName\r\n        );\r\n\r\n        const condition = ts.createBinary(\r\n            paramName,\r\n            ts.SyntaxKind.LessThanEqualsToken,\r\n            ts.createLiteral(1)\r\n        );\r\n\r\n        const ifBody = ts.createBlock(\r\n            [ts.createReturn(ts.createLiteral(1))],\r\n            /*multiline*/ true\r\n        );\r\n        const decrementedArg = ts.createBinary(\r\n            paramName,\r\n            ts.SyntaxKind.MinusToken,\r\n            ts.createLiteral(1)\r\n        );\r\n        const recurse = ts.createBinary(\r\n            paramName,\r\n            ts.SyntaxKind.AsteriskToken,\r\n            ts.createCall(functionName, /*typeArgs*/ undefined, [decrementedArg])\r\n        );\r\n        const statements = [\r\n            ts.createEnumDeclaration(\r\n                undefined,\r\n                undefined,\r\n                ts.createIdentifier(\"MyEnum\"),\r\n                [\r\n                    ts.createEnumMember(\r\n                        ts.createIdentifier(\"member\"),\r\n                        undefined\r\n                    ),\r\n                    ts.createEnumMember(\r\n                        ts.createIdentifier(\"user\"),\r\n                        undefined\r\n                    )\r\n                ]\r\n            ),\r\n            ts.createIf(condition, ifBody), ts.createReturn(recurse)\r\n        ];\r\n\r\n        return ts.createFunctionDeclaration(\r\n            /*decorators*/ undefined,\r\n            /*modifiers*/ [ts.createToken(ts.SyntaxKind.ExportKeyword)],\r\n            /*asteriskToken*/ undefined,\r\n            functionName,\r\n            /*typeParameters*/ undefined,\r\n            [parameter],\r\n            /*returnType*/ ts.createKeywordTypeNode(ts.SyntaxKind.NumberKeyword),\r\n            ts.createBlock(statements, /*multiline*/ true)\r\n        );\r\n    }\r\n\r\n    const resultFile = ts.createSourceFile(\r\n        \"someFileName.ts\",\r\n        \"\",\r\n        ts.ScriptTarget.ES2019,\r\n        /*setParentNodes*/ false,\r\n        ts.ScriptKind.TS\r\n    );\r\n    const printer = ts.createPrinter({\r\n        newLine: ts.NewLineKind.LineFeed\r\n    });\r\n    const result = printer.printNode(\r\n        ts.EmitHint.Unspecified,\r\n        makeFactorialFunction(),\r\n        resultFile\r\n    );\r\n\r\n    return result;\r\n}\r\n\r\nconst contentText = `export type Refs = {\r\n};\r\n\r\nexport default abstract class<M, INP> extends YvanUI.BaseDialog<M, Refs, INP> {\r\n\r\n    main: {\r\n        FADMINID:string,\r\n        FADMINNAME: string,\r\n        FADMINPHONE: string,\r\n        FEMAIL: string\r\n    } = {\r\n        FADMINID:'',\r\n        FADMINNAME: '',\r\n        FADMINPHONE:'',\r\n        FEMAIL:''\r\n    };\r\n\r\n    viewResolver(): any {\r\n        console.log(this, this.inParamter);\r\n\r\n        return {\r\n            title: '联系方式维护',\r\n            modal: true,\r\n            width: 400,\r\n            height: 200,\r\n            body: {\r\n                rows: [\r\n                    {\r\n                        view: 'text',\r\n                        entityName: \"main.FADMINNAME\",\r\n                        label: \"管理员名称\",\r\n                        required: true,\r\n                        width: 320,\r\n                    },\r\n                    {\r\n                        view: 'text',\r\n                        entityName: 'main.FADMINPHONE',\r\n                        label: '管理员联系方式',\r\n                        width: 320,\r\n                        required: true,\r\n                    },\r\n                    {\r\n                        view: 'text',\r\n                        entityName: \"main.FEMAIL\",\r\n                        label: \"联系EMAIL\",\r\n                        width: 320,\r\n                        required: true,\r\n                    },\r\n                    {\r\n                        cols: [\r\n                            {width: 110},\r\n                            {\r\n                                view: \"button\", text: \"确定\", cssType: \"primary\", width: 0,\r\n                                onClick: {\r\n                                    type: 'function',\r\n                                    bind: 'ok'\r\n                                }\r\n                            },\r\n                            {\r\n                                view: \"button\", text: \"取消\", cssType: 'default', width: 0,\r\n                                onClick: {\r\n                                    type: 'function',\r\n                                    bind: 'cancel'\r\n                                }\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    }\r\n}`;\r\n","export type GroupType = 'css' | 'data' | 'bind' | 'common'\r\n\r\nexport interface PropertyValue {\r\n  /**\r\n   * 属性名\r\n   */\r\n  name: string\r\n\r\n  /**\r\n   * 默认值\r\n   */\r\n  default: any\r\n\r\n  /**\r\n   * 隶属分组\r\n   */\r\n  group: GroupType\r\n\r\n  /**\r\n   * 描述\r\n   */\r\n  desc: string\r\n\r\n  /**\r\n   * 取值范围\r\n   */\r\n  type:\r\n    | 'boolean'\r\n    | 'number'\r\n    | 'string'\r\n    | 'object'\r\n    | 'dataSource'\r\n    | 'valid'\r\n    | Array<string>\r\n}\r\n\r\nexport interface EventValue {\r\n  /**\r\n   * 属性名\r\n   */\r\n  name: string\r\n\r\n  /**\r\n   * 描述\r\n   */\r\n  desc: string\r\n}\r\n\r\nexport interface PropertyDescriptionInterface {\r\n  props: PropertyValue[]\r\n  events?: EventValue[]\r\n}\r\n\r\nexport class PropertyDescription {\r\n  propertyes: PropertyDescriptionInterface = {\r\n    props: [],\r\n    events: []\r\n  }\r\n\r\n  constructor(...args: PropertyDescriptionInterface[]) {\r\n    _.each(args, arg => {\r\n      this.merge(arg)\r\n    })\r\n  }\r\n\r\n  merge(pd: PropertyDescriptionInterface) {\r\n    this.propertyes.props = <any>(\r\n      _.uniqBy([...this.propertyes.props, ...pd.props], 'name')\r\n    )\r\n    if (pd.events) {\r\n      if (this.propertyes.events) {\r\n        this.propertyes.events = <any>(\r\n          _.uniqBy([...this.propertyes.events, ...pd.events], 'name')\r\n        )\r\n      } else {\r\n        this.propertyes.events = <any>_.uniqBy([...pd.events], 'name')\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 根据分组名 获取属性定义\r\n   */\r\n  getPropsByGroup(name: GroupType): PropertyValue[] {\r\n    return _.filter(this.propertyes.props, i => i.group === name)\r\n  }\r\n\r\n  /**\r\n   * 获取全部事件\r\n   */\r\n  getEvents(): EventValue[] {\r\n    return this.propertyes.events!\r\n  }\r\n}\r\n","import {\r\n  PropertyDescription,\r\n  PropertyDescriptionInterface\r\n} from './PropertyDescription'\r\n\r\nexport const PropertyDescriptionTable = new Map<String, PropertyDescription>()\r\n\r\nPropertyDescriptionTable.set(\r\n  'layout',\r\n  new PropertyDescription({\r\n    props: [\r\n      {\r\n        name: 'borderless',\r\n        default: true,\r\n        group: 'css',\r\n        desc: '有无边框',\r\n        type: 'boolean'\r\n      },\r\n      {\r\n        name: 'type',\r\n        default: '',\r\n        group: 'css',\r\n        desc: '布局类型',\r\n        type: ['line', 'clean', 'wide', 'space', 'form']\r\n      }\r\n    ]\r\n  })\r\n)\r\n\r\nconst YvBase: PropertyDescriptionInterface = {\r\n  props: [\r\n    {\r\n      name: 'entityName',\r\n      default: '',\r\n      group: 'bind',\r\n      desc: '实体类名',\r\n      type: 'string'\r\n    },\r\n    {\r\n      name: 'ctlName',\r\n      default: '',\r\n      group: 'bind',\r\n      desc: '控件名',\r\n      type: 'string'\r\n    },\r\n    {\r\n      name: 'css',\r\n      default: '',\r\n      group: 'css',\r\n      desc: '样式类名',\r\n      type: 'string'\r\n    },\r\n    {\r\n      name: 'attr',\r\n      default: {},\r\n      group: 'css',\r\n      desc: 'HTML属性',\r\n      type: 'object'\r\n    },\r\n    {\r\n      name: 'render',\r\n      default: true,\r\n      group: 'common',\r\n      desc: '是否显示',\r\n      type: 'boolean'\r\n    },\r\n    {\r\n      name: 'padding',\r\n      default: undefined,\r\n      group: 'css',\r\n      desc: '内边距',\r\n      type: 'object'\r\n    },\r\n    {\r\n      name: 'margin',\r\n      default: undefined,\r\n      group: 'css',\r\n      desc: '外边距',\r\n      type: 'object'\r\n    },\r\n    {\r\n      name: 'ff',\r\n      default: 0,\r\n      group: 'common',\r\n      desc: '自动定焦时间',\r\n      type: 'number'\r\n    }\r\n  ],\r\n  events: [{ name: 'onRender', desc: '第一次控件被渲染时触发' }]\r\n}\r\n\r\nconst YvDataSource: PropertyDescriptionInterface = {\r\n  props: [\r\n    {\r\n      name: 'type',\r\n      default: '',\r\n      group: 'data',\r\n      desc: '数据源类型',\r\n      type: 'dataSource'\r\n    }\r\n  ],\r\n  events: [{ name: 'onDataComplete', desc: '数据绑定完成后触发' }]\r\n}\r\n\r\nPropertyDescriptionTable.set(\r\n  'template',\r\n  new PropertyDescription(YvBase, {\r\n    props: [\r\n      {\r\n        name: 'template',\r\n        default: '',\r\n        group: 'common',\r\n        desc: 'HTML内容',\r\n        type: 'string'\r\n      }\r\n    ]\r\n  })\r\n)\r\n\r\nPropertyDescriptionTable.set(\r\n  'text',\r\n  new PropertyDescription(YvBase, {\r\n    props: [\r\n      {\r\n        name: 'label',\r\n        default: '',\r\n        group: 'common',\r\n        desc: '文本描述',\r\n        type: 'string'\r\n      },\r\n      {\r\n        name: 'labelAlign',\r\n        default: '',\r\n        group: 'common',\r\n        desc: '描述对齐方式',\r\n        type: ['left', 'right', 'center']\r\n      },\r\n      {\r\n        name: 'labelWidth',\r\n        default: undefined,\r\n        group: 'common',\r\n        desc: '文本宽度',\r\n        type: 'number'\r\n      },\r\n      {\r\n        name: 'gravity',\r\n        default: 1,\r\n        group: 'common',\r\n        desc: '占位权重',\r\n        type: 'number'\r\n      },\r\n      {\r\n        name: 'readonly',\r\n        default: false,\r\n        group: 'common',\r\n        desc: '只读',\r\n        type: 'boolean'\r\n      },\r\n      {\r\n        name: 'disabled',\r\n        default: false,\r\n        group: 'common',\r\n        desc: '禁用',\r\n        type: 'boolean'\r\n      },\r\n      {\r\n        name: 'required',\r\n        default: false,\r\n        group: 'common',\r\n        desc: '必填',\r\n        type: 'boolean'\r\n      },\r\n      {\r\n        name: 'value',\r\n        default: '',\r\n        group: 'common',\r\n        desc: '字段值',\r\n        type: 'string'\r\n      },\r\n      {\r\n        name: 'prompt',\r\n        default: '请输入',\r\n        group: 'common',\r\n        desc: '水印',\r\n        type: 'string'\r\n      },\r\n      {\r\n        name: 'validType',\r\n        default: '',\r\n        group: 'common',\r\n        desc: '校验类型',\r\n        type: 'valid'\r\n      }\r\n    ]\r\n  })\r\n)\r\n\r\nPropertyDescriptionTable.set(\r\n  'button',\r\n  new PropertyDescription(YvBase, {\r\n    props: [\r\n      {\r\n        name: 'text',\r\n        default: '',\r\n        group: 'common',\r\n        desc: '按钮标题',\r\n        type: 'string'\r\n      },\r\n      {\r\n        name: 'icon',\r\n        default: '',\r\n        group: 'common',\r\n        desc: '图标样式',\r\n        type: 'string'\r\n      },\r\n      {\r\n        name: 'disabled',\r\n        default: false,\r\n        group: 'common',\r\n        desc: '是否禁用',\r\n        type: 'boolean'\r\n      },\r\n      {\r\n        name: 'gravity',\r\n        default: 1,\r\n        group: 'css',\r\n        desc: '占位权重',\r\n        type: 'number'\r\n      },\r\n      {\r\n        name: 'tooltip',\r\n        default: '',\r\n        group: 'common',\r\n        desc: '悬停提示',\r\n        type: 'string'\r\n      },\r\n      {\r\n        name: 'cssType',\r\n        default: 'default',\r\n        group: 'css',\r\n        desc: '样式类型',\r\n        type: ['default', 'primary', 'danger', 'success']\r\n      }\r\n    ],\r\n    events: [{ name: 'onClick', desc: '第一次控件被渲染时触发' }]\r\n  })\r\n)\r\n\r\nPropertyDescriptionTable.set(\r\n  'label',\r\n  new PropertyDescription(YvBase, {\r\n    props: [\r\n      {\r\n        name: 'label',\r\n        default: '',\r\n        group: 'common',\r\n        desc: '标签内容',\r\n        type: 'string'\r\n      },\r\n      {\r\n        name: 'align',\r\n        default: 'left',\r\n        group: 'common',\r\n        desc: '对齐方式',\r\n        type: ['left', 'right', 'center']\r\n      },\r\n      {\r\n        name: 'disabled',\r\n        default: false,\r\n        group: 'common',\r\n        desc: '是否禁用',\r\n        type: 'boolean'\r\n      },\r\n      {\r\n        name: 'width',\r\n        default: 100,\r\n        group: 'css',\r\n        desc: '宽度',\r\n        type: 'number'\r\n      },\r\n      {\r\n        name: 'gravity',\r\n        default: 1,\r\n        group: 'css',\r\n        desc: '占位权重',\r\n        type: 'number'\r\n      },\r\n      {\r\n        name: 'tooltip',\r\n        default: '',\r\n        group: 'common',\r\n        desc: '悬停提示',\r\n        type: 'string'\r\n      }\r\n    ]\r\n  })\r\n)\r\n\r\nPropertyDescriptionTable.set(\r\n  'tree',\r\n  new PropertyDescription(YvDataSource, YvBase, {\r\n    props: [\r\n      {\r\n        name: 'showCheckbox',\r\n        default: false,\r\n        group: 'common',\r\n        desc: '显示勾选',\r\n        type: 'boolean'\r\n      },\r\n      {\r\n        name: 'showLeftIcon',\r\n        default: true,\r\n        group: 'common',\r\n        desc: '显示左侧图标',\r\n        type: 'boolean'\r\n      },\r\n      {\r\n        name: 'showIcon',\r\n        default: true,\r\n        group: 'common',\r\n        desc: '显示图标',\r\n        type: 'boolean'\r\n      }\r\n    ],\r\n    events: [\r\n      { name: 'onNodeClick', desc: '节点被点击后触发' },\r\n      { name: 'onNodeDblClick', desc: '节点被双击后触发' }\r\n    ]\r\n  })\r\n)\r\n","function userComponentFactory(Component: any, name: string) {\r\n\r\n}\r\n\r\n/**\r\n * 自定义组件\r\n */\r\nexport function UserComponent(name: string): Function {\r\n    return function (Component: any) {\r\n        return userComponentFactory(Component, name);\r\n    };\r\n}\r\n\r\n// 自定义组件\r\nexport abstract class UserComponentBase<T> {\r\n\r\n    /**\r\n     * 执行渲染\r\n     */\r\n    abstract render(parentElement: Element): void;\r\n\r\n}\r\n"],"names":["YvEventDispatch","event","sender","args","scope","ctl","vue","_","isUndefined","_webix","$scope","call","type","targetFunc","get","bind","console","error","apply","designMode","initDesign","isDesignMode","vjson","this","cloneDeep","hasOwnProperty","CtlBase","focus","Object","nv","webix","extend","OverlayBox","showOverlay","hideOverlay","_module","webixHandler","onRender","undefined","refreshState","d","destructor","value","entityName","set","ctlName","refs","_entityWatch","$watch","ov","_this","immediate","_webixConfig","hidden","hide","show","parseYvanPropChangeVJson","names","yvanProp","forEach","name","has","version","dbs","formatter","dict","validType","complexValid","option","ajax","serverJsPrefix","window","_YvanUI_serverJSPrefix","dataSourceProcess","module","YvDataSource","that","reload","loading","successCallback","data","dataReal","onDataComplete","failCallback","YvanUI.dbs","db","query","params","needCount","sqlId","then","res","resultData","catch","r","finally","isArray","$yvDispatch","each","watch","watchExp","unwatch","watches","push","setCustomFunctionMode","bindFunction","setSqlMode","CtlButtonDefault","text","icon","autowidth","CtlDataviewDefault","CtlTreeDefault","showCheckbox","showLeftIcon","showIcon","CtlCodeMirrorDefault","mode","indentWithTabs","smartIndent","lineNumbers","matchBrackets","autofocus","extraKeys","Ctrl-Space","hintOptions","tables","users","countries","CtlInputDefault","labelWidth","labelAlign","prompt","CtlTextDefault","CtlNumberDefault","precision","CtlDateDefault","CtlDateTimeDefault","CtlDateRangeDefault","separator","CtlDateTimeRangeDefault","CtlComboDefault","CtlMultiComboDefault","CtlSearchDefault","CtlCheckboxDefault","checkValue","uncheckValue","CtlSwitchDefault","CtlRadioDefault","getFirstPinyin","msg","__extends","CtlTree","defaultsDeep","assign","merge","select","filterMode","showSubItems","on","onInited","attachHandle","onAfterDelete","removeHandle","onItemClick","id","item","getItem","onNodeClick","onItemDblClick","onNodeDblClick","template","obj","common","t","checkbox","folder","threeState","filter","node","toLowerCase","indexOf","getValue","setValue","clearAll","parse","_dataSource","_rebindDataSource","dataSourceBind","getFirstId","open","uncheckAll","ret","c","getFirstChildId","getNextSiblingId","getSelectedId","getSelectedItem","checkItem","pid","getParentId","ids","ids_1","_i","uncheckItem","getChecked","map","v","isChecked","openAll","closeAll","destory","getModule","dataSource","_dataSourceProcess","init","isFunction","parentField","displayField","valueField","idField","textField","nodeMap","rootNode","i","length","row","parent_1","parentNode","_super","CtlTreeTable","showItem","createContextMenu","config","methodMap","Map","ui","view","buildMenu","configArray","Array","menu","$template","uniqueId","onClick","children","submenu","onMenuItemClick","getContext","CtlTab","defer","defaultTabIndex","getMultiview","_cells","_menuConfig","attachTo","getTabbar","$view","tabbar","onChange","newBodyId","onTabChanged","multiview","keepViews","butIds","cellId","cell","includes","removeView","cfg","buildView","tabId","addView","header","close","body","onDestruct","$destroy","_isLoadInvoked","onViewShow","_webixId","onLoad","onShow","tabCount","opts","selectTab","wrapperWebixConfig","$$","CtlDataview","onAfterSelect","onItemSelect","CtlECharts","forOwn","key","onAfterRender","_resetECharts","_echartsHandler","dispose","setOption","resize","clear","el","$","_viewobj","find","echarts","CtlButton","define","render","badge","css","width","removeClass","_icon","_refreshText","_text","CtlInput","me","onKeydown","$input","onInputEvent","constructor","required","_showValidate","end","callEvent","ff","setTimeout","off","onEnter","onFocus","newValue","oldValue","valueValid","onValueChange","valueProcess","changeToEntity","onBlur","onInputValue","target","maxlength","size","substring","changeValueImplete","onInput","_gravity","parseInt","gravity","_id","_validateResult","Error","refresh","label","disable","enable","disabled","readonly","placeholder","newV","oldV","validate","_validate","YvanUI.complexValid","index","background-color","border-color","remove","append","CtlText","_create","CtlCheckBox","_labelAtRight","_refreshLabel","_label","labelRight","toggle","setValueHere","CtlCombo","options","filterWord","height","getText","CtlDatePicker","baseConfig","format","timepicker","editable","stringResult","toString","substr","moment","isDate","isValid","CtlDateRangePicker","start","_b","_a","isPlainObject","entityNameStart","entityNameEnd","CtlForm","onAfterLoad","onBeforeLoad","setValues","CtlMultiCombo","CtlSearch","_refreshIcon","suppressRestore","_searchRequest","valueOrigin","onSearchIconClick","e","stopPropagation","preventDefault","hasClass","widget","onClear","$span","addClass","queryValue","restoreValue","searchCtl","widgetParamter","queryObj","existObject","onWidgetConfirm","onConfirm","closeDialog","onClose","content","showDialog","CtlCarousel","getActiveIndex","CtlGridLocale","rownumber","page","more","to","of","next","last","first","previous","loadingOoo","selectAll","searchOoo","blanks","filterOoo","applyFilter","clearFilter","equals","notEqual","lessThan","greaterThan","lessThanOrEqual","greaterThanOrEqual","inRange","contains","notContains","startsWith","endsWith","group","columns","filters","rowGroupColumns","rowGroupColumnsEmptyMessage","valueColumns","pivotMode","groups","values","pivots","valueColumnsEmptyMessage","pivotColumnsEmptyMessage","toolPanelButton","noRowsToShow","pinColumn","valueAggregation","autosizeThiscolumn","autosizeAllColumns","groupBy","ungroupBy","resetColumns","expandAll","collapseAll","toolPanel","export","csvExport","excelExport","pinLeft","pinRight","noPin","sum","min","max","none","count","average","copy","copyWithHeaders","ctrlC","paste","ctrlV","grid","_pageSize","pageSize","dom","getElementsByClassName","su_id","className","innerHTML","firstButtomDom","document","getElementById","prevButtomDom","nextButtomDom","lastButtomDom","currenpageDom","gridpagerDom","itemcountDom","pageSizeDom","gridpagerCenter","gridpagerLeft","gridpagerRight","pagination","style","display","refreshPageViewInfo","onkeydown","keyCode","cp","srcElement","pageCount","getPageData","onchange","paginationSetPageSize","buttons","buttons1","union","button","onclick","q","classList","pre","split","currentPage","disableButton","CtlGridPage","_currentPage","_pageCount","ps","_itemCount","ic","element","replace","Math","ceil","innerText","itemCount","activeButton","cstate","rowPinned","gridPage","rowIndex","YvGridProp","editSingleClick","allowNewRow","filterable","showRowNumber","autoSizeColumns","allowCellSelection","allowRowSelection","valueSep","saveOn","newRowData","stopEditingWhenGridLosesFocus","columnGroup","YvGridColumnProp","field","title","maxwidth","minwidth","sortable","resizable","calcExpr","editMode","YvGridColumnEditProp","dateformat","datetimeformat","CtlGridCellCheckbox","childSpan","checkedIds","splice","add","allCheckedBoxStateChanged","gridOptions","api","_getIdByRow","$el","querySelectorAll","isCheckedIds","createElement","innerRefresh","addEventListener","checkedToggle","CtlGridHeadCheckbox","ctlGrid","is","dataIds","getData","gridApi","refreshCells","force","domSpan","allIn","debounce","paramFunction","rowCount","lastFilterModel","filterModel","isEqual","queryParams","limit","startRow","limitOffset","endRow","orderByModel","sortModel","totalCount","_bindingComplete","getSelectedRow","setCodeArrayMode","watchOption","result","getOption","$get","YvanDataSourceGrid","clearRowCount","hasDataSource","setData","serverQuery","setDatasource","getRows","isFirstAutoLoad","autoLoad","param","dataLength","CtlGridCellButton","_buildHTML","$btns","removeEventListener","func","arr","column","btn","cssType","iconCls","join","fun","colId","CtlGridFilterSet","setupDOM","$selectAll","checkedData","clone","$clear","$apply","filterChangedCallback","hidePopup","$container","h","cv","attr","af","$cb","that_1","$dom","filterType","model","log","CtlGridEditor","colDef","cellStartedEdit","editParams","focusAfterAttached","valid","origin","validMsg","getEditRow","currentEditValidMsg","isInput","CtlGridEditorText","isPinned","setAttribute","_onKeyDown","_onInput","_onChange","_onCompositionstart","_onCompositionend","_dealWithString","code","onValidate","leaveReason","stopEditing","eval","detail","destroy","afterGuiAttached","dispatchEvent","CustomEvent","onCommit","focusIn","focusOut","CtlGridEditorCombo","CtlGrid","_resetGrid","condition","_findNode","setFocusedCell","setSelected","flashCells","rowNodes","cols","forEachNode","setRowData","_clearCache","setFilterModel","refreshGrid","refreshInfiniteCache","selected","rows","getSelectedRows","isGridReadReady","showLoadingOverlay","p","CtlGridIdRender","resultCols","headerName","maxWidth","pinned","cellRenderer","minWidth","headerComponent","cellRendererParams","_gridCols","columnDefs","j","currentGroup","currentGroupSpan","from","span","f","headerHeight","rowHeight","suppressRowHoverHighlight","animateRows","suppressCellSelection","suppressRowClickSelection","suppressColumnMoveAnimation","paginationPageSize","localeText","rowModelType","infiniteInitialRowCount","maxBlocksInCache","rowSelection","enableBrowserTooltips","singleClickEdit","floatingFilter","onFirstDataRendered","_firstDataRendered","onGridReady","_gridReady","tabToNextCell","_tabToNextCell","navigateToNextCell","_navigateToNextCell","onCellKeyDown","_cellKeyDown","onRowDoubleClicked","_rowDoubleClicked","onCellEditingStarted","_cellEditingStarted","onCellEditingStopped","_cellEditingStopped","onRowSelected","_rowSelected","onModelUpdated","_modelUpdated","onCellFocused","_cellFocused","onCellClicked","_cellClicked","enterMovesDown","enterMovesDownAfterEdit","components","setRowId","rowData","_gridOptions","agGrid","Grid","columnApi","onRowDblClick","easyuiCol","YvanUI.dict","YvanUI.formatter","editParams_1","flashRow","setDataValue","onBindingComplete","key_1","n","findNode","onKeyDown","updateData","sizeColumnsToFit","onRowSelect","_rowEditingStopped","rowId","_rowEditingStarted","updateSupport","_updateRow","previousCell","previousCellPosition","nextCellPosition","suggestedNextCell","nextRowIndex_1","selectRow","floating","rowIndex_1","renderedRowCount","getModel","getRowCount","col","suppressMovable","align","cellClass","tooltipField","formatable","cellEditor","cellEditorParams","_getComboFilterData","data_1","valueFormatter","optionItem","maxLength","data_2","formatter_1","datas","filterParams","applyButton","clearButton","suppressAndOrCondition","filterOptions","comparator","filterLocalDateAtMidnight","cellValue","dateParts","day","Number","month","year","cellDate","Date","textFormatter","RegExp","onStyle","cellStyle","CtlSwitch","CtlNumber","_testNumber","CtlRadio","protoUI","defaults","$init","_waitEditor","promise","$ready","_render_cm_editor","_render_when_ready","CodeMirror","_editor","fromTextArea","firstChild","resolve","_focus_await","_set_inner_size","$width","_updateScrollSize","scrollTo","box","getWrapperElement","$height","scroll","getScrollerElement","$setSize","x","y","prototype","preserveUndoHistory","clearHistory","getEditor","waitEditor","undoLength","historySize","undo","CtlCodeMirror","redo","deepTravVJson","resolver","markerList","deepTrav1","marker","isMarker","unshift","keyName","object","xtype","isObject","isMarkerChild","deepTravFindSuper","targetId","rObj","getSuperVjson","deepTravFindCurrent","getCurrentVjson","deepTravDeleteVjson","isDelete","keys","deletVjsonById","isDeleted","T","role","uid","viewExtend","ctlOption","collector","extendVJson","i18n","setLocale","$internalHooks","Db","collectDataFromConstructor","vm","Component","originalInit","_init","getOwnPropertyNames","$options","props","charAt","defineProperty","configurable","plainData","collectMethods","proto","onShows","descriptor","getOwnPropertyDescriptor","methods","mixins","computed","onLoads","createCommonMix","placeId","instanceId","create","componentFactory","viewExtends","viewIntercepts","Vue","getPrototypeOf","dialog","inParamter","dialogParent","created","expr","handler","deep","destroyed","load","viewResolver","container","isFromSearchBox","move","modal","position","head","margin","click","fullscreen","oldtop","top","oldleft","left","keypress","onEsc","selector","baseModule","lastHandle","renderPlace","spaceId","invokeApi","apiId","entity","Promise","reject","prefix","postBodyParamter","url","method","downLoad","downLoadUrl","filename","YvanUI","formData","Qs","stringify","xhr","XMLHttpRequest","responseType","setRequestHeader","k","onload","status","blob","response","navigator","msSaveBlob","clearLoading","a","URL","createObjectURL","href","download","revokeObjectURL","send","createAjax","createOption","baseUrl","axios","baseURL","ax","fileName","headers","Content-Type","JSON","forms","FormData","i_1","resolverRaw","reason","createDb","Client","getQueryString","location","search","theRequest","strs","vs","unescape","camelCase","ret_1","snakeCase","ret_2","unparam","queryString","slice","vars","pair","decodeURIComponent","$body","message","$w","iframeWidth","parent","iframeHeight","windowWidth","windowHeight","setWidth","setHeight","defValue","tid","onCancel","keydown","alert","modalbox","confirm","ok","cancel","msgError","toastr","expire","msgSuccess","success","msgInfo","info","defaultDb","sqlTimeId","time","root","sql","resParams","err","timeEnd","BaseModule","BaseDialog","layero","html","BizModule","Watch","propName","propertyKey","getTS","ts","tsCodeGenerate","tsNode","resultFile","createSourceFile","ScriptTarget","ES2019","ScriptKind","TS","createPrinter","newLine","NewLineKind","LineFeed","printNode","EmitHint","Unspecified","tsCodeParse","statements","getTSDemo2","contentText","getTSDemo","functionName","paramName","parameter","ifBody","decrementedArg","recurse","createIdentifier","createParameter","createBinary","SyntaxKind","LessThanEqualsToken","createLiteral","createBlock","createReturn","MinusToken","AsteriskToken","createCall","createEnumDeclaration","createEnumMember","createIf","createFunctionDeclaration","createToken","ExportKeyword","createKeywordTypeNode","NumberKeyword","events","arg","PropertyDescription","pd","propertyes","uniqBy","PropertyDescriptionTable","default","desc","YvBase","userComponentFactory","UserComponent"],"mappings":"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SACNloC,KAAM,UAER,CACEgD,KAAM,SACNilC,SAAS,EACThsB,MAAO,SACPisB,KAAM,OACNloC,KAAM,WAER,CACEgD,KAAM,UACNilC,aAASvmC,EACTua,MAAO,MACPisB,KAAM,MACNloC,KAAM,UAER,CACEgD,KAAM,SACNilC,aAASvmC,EACTua,MAAO,MACPisB,KAAM,MACNloC,KAAM,UAER,CACEgD,KAAM,KACNilC,QAAS,EACThsB,MAAO,SACPisB,KAAM,SACNloC,KAAM,WAGV0nC,OAAQ,CAAC,CAAE1kC,KAAM,WAAYklC,KAAM,iBAG/BnkC,eAA6C,CACjDw2B,MAAO,CACL,CACEv3B,KAAM,OACNilC,QAAS,GACThsB,MAAO,OACPisB,KAAM,QACNloC,KAAM,eAGV0nC,OAAQ,CAAC,CAAE1kC,KAAM,iBAAkBklC,KAAM,eCrG3C,SAASE,qBAAqBlO,EAAgBl3B,aAO9BqlC,cAAcrlC,GAC1B,OAAO,SAAUk3B,GACb,OAAOkO,wBD+FfJ,yBAAyBhmC,IACvB,WACA,IAAI4lC,oBAAoBO,OAAQ,CAC9B5N,MAAO,CACL,CACEv3B,KAAM,WACNilC,QAAS,GACThsB,MAAO,SACPisB,KAAM,SACNloC,KAAM,cAMdgoC,yBAAyBhmC,IACvB,OACA,IAAI4lC,oBAAoBO,OAAQ,CAC9B5N,MAAO,CACL,CACEv3B,KAAM,QACNilC,QAAS,GACThsB,MAAO,SACPisB,KAAM,OACNloC,KAAM,UAER,CACEgD,KAAM,aACNilC,QAAS,GACThsB,MAAO,SACPisB,KAAM,SACNloC,KAAM,CAAC,OAAQ,QAAS,WAE1B,CACEgD,KAAM,aACNilC,aAASvmC,EACTua,MAAO,SACPisB,KAAM,OACNloC,KAAM,UAER,CACEgD,KAAM,UACNilC,QAAS,EACThsB,MAAO,SACPisB,KAAM,OACNloC,KAAM,UAER,CACEgD,KAAM,WACNilC,SAAS,EACThsB,MAAO,SACPisB,KAAM,KACNloC,KAAM,WAER,CACEgD,KAAM,WACNilC,SAAS,EACThsB,MAAO,SACPisB,KAAM,KACNloC,KAAM,WAER,CACEgD,KAAM,WACNilC,SAAS,EACThsB,MAAO,SACPisB,KAAM,KACNloC,KAAM,WAER,CACEgD,KAAM,QACNilC,QAAS,GACThsB,MAAO,SACPisB,KAAM,MACNloC,KAAM,UAER,CACEgD,KAAM,SACNilC,QAAS,MACThsB,MAAO,SACPisB,KAAM,KACNloC,KAAM,UAER,CACEgD,KAAM,YACNilC,QAAS,GACThsB,MAAO,SACPisB,KAAM,OACNloC,KAAM,aAMdgoC,yBAAyBhmC,IACvB,SACA,IAAI4lC,oBAAoBO,OAAQ,CAC9B5N,MAAO,CACL,CACEv3B,KAAM,OACNilC,QAAS,GACThsB,MAAO,SACPisB,KAAM,OACNloC,KAAM,UAER,CACEgD,KAAM,OACNilC,QAAS,GACThsB,MAAO,SACPisB,KAAM,OACNloC,KAAM,UAER,CACEgD,KAAM,WACNilC,SAAS,EACThsB,MAAO,SACPisB,KAAM,OACNloC,KAAM,WAER,CACEgD,KAAM,UACNilC,QAAS,EACThsB,MAAO,MACPisB,KAAM,OACNloC,KAAM,UAER,CACEgD,KAAM,UACNilC,QAAS,GACThsB,MAAO,SACPisB,KAAM,OACNloC,KAAM,UAER,CACEgD,KAAM,UACNilC,QAAS,UACThsB,MAAO,MACPisB,KAAM,OACNloC,KAAM,CAAC,UAAW,UAAW,SAAU,aAG3C0nC,OAAQ,CAAC,CAAE1kC,KAAM,UAAWklC,KAAM,mBAItCF,yBAAyBhmC,IACvB,QACA,IAAI4lC,oBAAoBO,OAAQ,CAC9B5N,MAAO,CACL,CACEv3B,KAAM,QACNilC,QAAS,GACThsB,MAAO,SACPisB,KAAM,OACNloC,KAAM,UAER,CACEgD,KAAM,QACNilC,QAAS,OACThsB,MAAO,SACPisB,KAAM,OACNloC,KAAM,CAAC,OAAQ,QAAS,WAE1B,CACEgD,KAAM,WACNilC,SAAS,EACThsB,MAAO,SACPisB,KAAM,OACNloC,KAAM,WAER,CACEgD,KAAM,QACNilC,QAAS,IACThsB,MAAO,MACPisB,KAAM,KACNloC,KAAM,UAER,CACEgD,KAAM,UACNilC,QAAS,EACThsB,MAAO,MACPisB,KAAM,OACNloC,KAAM,UAER,CACEgD,KAAM,UACNilC,QAAS,GACThsB,MAAO,SACPisB,KAAM,OACNloC,KAAM,cAMdgoC,yBAAyBhmC,IACvB,OACA,IAAI4lC,oBAAoB7jC,eAAcokC,OAAQ,CAC5C5N,MAAO,CACL,CACEv3B,KAAM,eACNilC,SAAS,EACThsB,MAAO,SACPisB,KAAM,OACNloC,KAAM,WAER,CACEgD,KAAM,eACNilC,SAAS,EACThsB,MAAO,SACPisB,KAAM,SACNloC,KAAM,WAER,CACEgD,KAAM,WACNilC,SAAS,EACThsB,MAAO,SACPisB,KAAM,OACNloC,KAAM,YAGV0nC,OAAQ,CACN,CAAE1kC,KAAM,cAAeklC,KAAM,YAC7B,CAAEllC,KAAM,iBAAkBklC,KAAM,sCCxTtC"}